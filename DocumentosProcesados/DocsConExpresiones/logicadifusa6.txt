 una introduccion a la logica difusa vidaartificial quick links portada blog temas sobre mi una introduccion a la logica difusa inteligencia artificial artculo original an introduction to fuzzy logic autor james matthews traductor year of the dragon esta es una introduccin muy b sica a la lgica difusa es posible que si ya has ledo algo algo de documentacin sobre lgica difusa probablemente no encuentres nada nuevo en este ensayo aunque es posible que resulte de inters una pequea clase en c++ cannico que escrib para manipular operadores de lgica difusa mira al final del ensayo para verlo cuantas veces en la vida real las preguntas permiten respuestas tan simples como verdadero o falso de hecho en muy pocas ocasiones la idea de lgica difusa tiene sus inicios en platn que propuso una tercera regin entre verdadero y falso lo incierto pasaron varios siglos antes de que este sistema siquiera llegara a formalizarse a principios del siglo xx lukasiewicz propuso un sistema lgico con tres valores m s tarde lukasiewicz experiment con sistemas lgicos con cuatro y cinco valores y finalmente propuso que una lgica basada en infinitos valores no era menos plausible que una finita finalmente en 1965 lofti zadeh public su trabajo sobre lo que llam lgica difusa una parte de la teora de grupos que operaba sobre el rango 0 1 editar teora de grupos difusos la mayor diferencia entre la lgica difusa y la lgica booleana son los valores posibles en el rango 0 0 a 1 0 no solo 0 y 1 por ejemplo puedes decir que el valor de verdad difusa ftv de la declaracin es es 0 75 si graham mide 2 metros para escribir esto formalmente = 0 75 m es una funcin de pertenencia y es la funcin que asignar a 2 metros un ftv de 0 75 la funcin de pertenencia puede ser increblemente simple o increblemente compleja por ejemplo una funcin de pertenencia relativamente simple puede ser una definicin formal de una funcin de pertenencia puede definirse como una funcin que crea una correspondencia para cada punto del grupo difuso a con el intervalo real 0 1 de tal manera que es una aproximacin del grado de pertenencia de x en a operadores lgicos en la lgica booleana existen los operadores unin interseccin y no estos operadores tambin existen en la lgica difusa pero se definen de forma diferente a or b = a and b = a = 1 los operadores de interseccin y unin son el inicio obvio tanto para la lgica booleana y las funciones probabilsticas est ndar para ver porqu est n definidas de esta manera vamos a mirar un ejemplo vamos a tomar las declaraciones es muy y es muy si las combinas usando la probabilidad obtienes = 0 90 0 90 = 0 81 nota esto es obviamente tomando como para un valor de 0 9 tanto en la funcin de pertenencia alto como listo supongamos tambin que el rango 8 y 0 es igual a la declaracin resultante puede leerse como es bastante alto y esto es desde luego incorrecto usando lgica difusa = 90 0 = 0 90 esto nos lleva a la declaracin correcta es muy alto y el resultado es m s claro a m s variables son tomadas en consideracin por ejemplo 6 variables con valores de 0 8 nos llevara a 0 262 usando probabilidad muy alejado del valor difuso 0 8 operadores difusos los operadores difusos son operadores que se crean de forma independiente para modificar los valores difusos al igual que la lgica difusa para estos operadores existen correspondencias con el lenguaje natural por ejemplo el operador difuso puede igualarse a la ecuacin 2 o a 0 5 ten en cuenta que crear palabras de ecuaciones de valores difusos y realizar operaciones entre ellas e menor requiere manipulaciones algortmicas complejas an as esto se hace notablemente por f wenstop que creo palabras de ecuaciones a vectores difusos de 7 valores aplicaciones pr cticas la lgica difusa puede aplicarse con facilidad a sistemas expertos cuya informacin es inherentemente difusa doctores abogados e ingenieros pueden diagnosticar problemas mucho m s r pido si el sistema experto que usan para diagnosticar el problema lista unas pocas soluciones difusas que pueden usar para aumentar sus propias conclusiones otra rea donde se usa la lgica difusa es en el reconocimiento de textos escritos especialmente en japn trazos complicados kanji pueden ser detectados mientras se escriben usando mtodos difusos tambin pueden verse aplicaciones de la lgica difusa en reas como en el control de hornos para cemento o prediccin control financiero cdigo c++ aunque este no es un caso de estudio porque no he buscado un ejemplo especfico de lgica difusa he escrito una pequea clase para acompaar lo discutido anteriormente la clase est construida para actuar como un valor difuso todos los operadores de c++ han sido sobrecargados para poder utilizarse con cualquier tipo b sico ten en cuenta que la clase permitir que los valores sobrepasen por encima o por debajo el lmite aqu hay un pequeo programa de ejemplo iostream math void fuzzy fz1 = 0 5 0 5 fz2 = 0 0 0 45 fz3 = fz2 fz2 0 55 fz4 = 0 95 bool bl5 = fz3 false bl6 = fz2 true cout fuzzy logical operators endl cout = fz1 endl = fz2 endl = fz3 endl = fz4 endl cout endl cout = endl = endl a partir de los comentarios que he puesto creo que puedes adivinar la salida del programa de todas maneras puede ver lo f cil que es usar la clase solo para estar seguros miremos fz2 y fz3 fz2 es el resultado de 5 or 0 and 0 recuerda que or toma el m ximo as que retorna 0 5 y and toma el mnimo de esta manera fz2 es igual a 0 45 fz3 es or el not de fz2 es 1 0 45=0 55 que es mayor que 0 45 la funcin retorna verdadero si a = b la clase tambin tiene una rutina de conversin del tipo flotante de esta manera puedes usar fuzzy y float por igual al pasar par metros a las funciones cout puedes bajarte el cdigo de la clase difusa alternativamente puedes mirar la documentacin de la clase difusa y bajarla ah article content copyright james matthews 1999 todo el contenido 1998 2004 generation5 obtenido de http vidaartificial com index php esta p gina ha sido visitada 6 500 veces esta p gina fue modificada por ltima vez el 04 07 9 ene 2006 categoras inteligencia artificial logica difusa generation5 org versin para imprimir disclaimers esta p gina ha sido visitada 6 500 veces esta p gina fue modificada por ltima vez el 04 07 9 ene 2006 