 introduccion a los punteros inteligentes en c++ buscar aprender hacer stack overrun es un catalogo de preguntas y respuestas sobre programacion en una forma conveniente en su idioma menu preguntas comentarios buscar stack overrun es cn de fr hi ru nnn introduccion a los punteros inteligentes en c++ 6 446 tengo una aplicacin c++ que hace un uso extenso de los punteros para mantener estructuras de datos bastante complejas la aplicacin realiza simulaciones matem ticas en enormes conjuntos de datos podran tomar varios gb de y se compila utilizando visual studio de microsoft ahora estoy reelaborando una parte importante de la aplicacin para reducir errores colgantes fugas de memoria quisiera comenzar a usar punteros inteligentes sacrificar la memoria o el rendimiento es aceptable siempre que sea limitado en la pr ctica la mayora de las clases se mantienen en grupos grandes grupo por y aunque las clases pueden referirse entre s podra considerar el grupo como propietario de todas las instancias de esa clase sin embargo si el grupo decide eliminar una instancia no quiero que ninguna de las otras clases que an hacen referencia a la instancia eliminada tenga un puntero colgante en otra parte guardo una coleccin de punteros a las instancias que son entregadas por otros mdulos en la aplicacin en la pr ctica los otros mdulos mantienen la propiedad de la instancia aprobada pero en algunos casos los mdulos no quieren ocuparse de la propiedad y solo quieren pasar la instancia a la coleccin dicindole es tuyo gesti cu l es la mejor manera de comenzar a introducir punteros inteligentes simplemente reemplazar punteros con punteros inteligentes no parece una forma correcta y probablemente no ofrece todas las ventajas ninguna de de los punteros inteligentes pero qu es un mtodo mejor qu tipos de indicadores inteligentes debo investigar m s a veces uso std auto_ptr para la desasignacin de la memoria asignada localmente pero parece que se ha depreciado en c++ es std unique_ptr una mejor alternativa o debera ir directamente a punteros compartidos u otros tipos de punteros inteligentes la pregunta replacing existing raw pointers with smart pointers parece similar pero en lugar de preguntar qu tan f cil es me pregunto cu l sera el mejor enfoque y qu tipo de punteros inteligentes son los m s adecuados gracias de antemano por sus ideas y sugerencias c++ architecture smart pointers fuente compartir crear 07 oct 10 patrick 2 respuestas ordenando activo mas antiguo votos 1 estas son las 3 variedades que se encuentran en el nuevo est ndar de c++ 11 reemplaza auto_ http www stroustrup com c++ unique_ptr http www stroustrup com c++ shared_ptr http www stroustrup com c++ weak_ptr se puede leer el texto para cada puntero y hay una explicacin de cu ndo usarlo all para la gestin de la memoria local unique_ptr es la eleccin no es copiable pero se puede mover as que al moverlo el receptor se apropia de l shared_ptr se utiliza si desea compartir una instancia de objeto sin que realmente haya nadie que tenga el objeto y asegurarse de que no se borre mientras alguien todava tenga una referencia una vez que el ltimo usuario de un objeto destruye el contenedor shared_ptr se eliminar el objeto contenido weak_ptr se utiliza junto con shared_ptr le permite a uno para ver si el objeto shared_ptr de referencia todava existe antes de intentar acceder al objeto interno fuente compartir crear 07 oct 10 david 3 recomiendo usar unique_ptr cuando sea posible puede requerir algn an lisis del y shared_ptr cuando esto sea imposible en caso de duda utilice un shared_ptr para maximizar la seguridad al pasar el control a un contenedor el recuento de referencias simplemente pasar a dos y luego volver a uno y el contenedor eventualmente delete el objeto asociado autom ticamente cuando el rendimiento se convierte en un problema considere usar boost intrusive_ptr fuente compartir crear 07 oct 10 fred foo 0 +1 buenos consejos tienes que estar haciendo un lote de creacion destruccion de objetos o copia de punteros para ver una diferencia de rendimiento entre shared_ptr y intrusive_ptr doug 07 oct 10 buscar preguntas relacionadas 1335 que es un puntero inteligente y cuando deberia usar uno 263 es la practica de devolver una variable de referencia de c++ el mal 34 c++ 11 semantica del puntero inteligente preguntas populares 19 como debo usar el proveedor en go 1 6 20 javafx conseguir arrastrar la carpeta de destino de colocacion despues de la caida se ha hecho 16 tener un resource attribute no contiene una definicion para actionbarsize error 21 crear implementacion de la clase java de forma dinamica en funcion de las dependencias proporcionadas en el tiempo de ejecucion 18 pass en un tipo a una extension swift generico o idealmente infieren que 17 como filtrar un objeto json complejo usando javascript 28 angular2 http post se ejecuta dos veces 23 uso del identificador no resuelto gglcontext y gai 26 diferencia entre char e int al declarar el caracter 19 recibiendo un error parser_all en i cuando se utiliza knitr para convertir un archivo rmd basica en html up preguntas comentarios 2018 stackoverrun com licensed under cc by sa 3 0 with attribution required contactenos mensaje enviado cerrar enviar 