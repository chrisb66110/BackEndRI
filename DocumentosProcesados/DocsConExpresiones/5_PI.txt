 c++ fundamentos de programacin punteros inteligentes c++ fundamentos de programacin tcnicas modernas y aplicaciones actuales del lenguaje c++ fundamentos de programacin punteros inteligentes sem ntica de propiedad exclusiva la plantilla de clase std unique_ implementa una sem ntica de propiedad exclusiva del objeto referenciado concretamente un objeto u de tipo std unique_ almacena un puntero miembro a un segundo objeto de tipo t o derivado sobre el que se sigue una determinada poltica de destruccin por el cuando u es destruido la sem ntica de propiedad exclusiva implica que el puntero inteligente u no pueda copiarse pues de poder hacerlo acabaramos con dos referencias al mismo objeto existe sin embargo un mecanismo de transferencia de la propiedad que analizaremos en este post el est ndar del lenguaje define la siguiente plantilla biparamtrica para objetos simples namespace std typename t class d = default_ class unique_ptr el segundo par metro determina la poltica de destruccin a seguir con el objeto referenciado al finalizar el tiempo de vida del puntero inteligente la poltica adoptada por defecto implementada por la clase std default_ invoca al operador delete sobre el puntero miembro namespace std typename struct default_delete default_ noexcept = default template typename default_ default_ const noexcept void const if t is an incomplete type the program is ill formed static_ 0 delete pointer to incomplete delete p de ser necesario el uso explcito de punteros la plantilla std unique_ se considera la opcin por defecto para la asignacin din mica de memoria de forma segura ante excepciones a modo de ejemplo consideremos el cdigo siguiente class complex double re_ im_ public re = 0 0 double im = 0 noexcept re_ im_ double const noexcept return re_ noexcept return re_ double const noexcept return im_ noexcept return im_ int std unique_ 0 4 complex c = u = 2 0 don t do this auto v = u error auto v = std == ok execution continues v = 7 0 don t do this u = 1 0 undefined behavior en se inicializa una variable autom tica de tipo std unique_ que almacena como dato miembro un puntero a un objeto de tipo complex parte real 3 0 e imaginaria 4 almacenado din micamente las operaciones de observacin propias de los punteros ordinarios se encuentran habilitadas para std unique_ gracias a la sobrecarga de operadores as en el operador de indireccin permite acceder al objeto referenciado por u y realizar una copia del mismo en una nueva variable autom tica c de tipo complex en se invoca a la funcin miembro a travs del operador de desreferencia para asignar un nuevo valor a la parte real del nmero complejo referenciado por u con el fin de dar efecto a la sem ntica de propiedad exclusiva std unique_ posee un constructor copia y un operador de asignacin copia declarados delete por lo que tales operaciones se encuentran deshabilitadas de ah que se produzca un error de compilacin de intentarse una inicializacin como en namespace std typename t class d = default_ class unique_ptr public unique_ptr is neither copyconstructible nor copyassignable unique_ = delete unique_ operator= = delete unique_ptr is both moveconstructible and moveassignable unique_ noexcept unique_ operator= noexcept sin embargo la plantilla de clase std unique_ implementa la sem ntica de movimiento de modo que la propiedad del objeto referenciado puede ser transferida a un nuevo puntero inteligente v de tipo std unique_ de manera explcita como en sin m s que utilizar la funcin std definida en el fichero de cabecera al hacerlo el puntero miembro de u es reseteado a nullptr tal y como se comprueba en a partir de pues el puntero v es el responsable nico del objeto complex creado al principio del programa pudiendo realizar operaciones sobre l como en el puntero u si bien vaco sigue disponible para una eventual reasignacin eso s cualquier desreferencia del mismo en dicho estado como en dara lugar a un comportamiento indefinido de acuerdo con el est ndar del lenguaje en tanto u como v salen fuera de mbito invoc ndose autom ticamente al operador delete sobre sus punteros miembro esta operacin no tiene ningn efecto en u al ser su puntero miembro nulo en el caso de v sin embargo el objeto por l apuntado es destruido y su memoria liberada se recomienda con el fin de obtener un cdigo seguro y robusto evitar el uso explcito no encapsulado de los operadores new delete es por ello que el nuevo est ndar del lenguaje c++14 proporciona la plantilla de funcin std make_ namespace std typename t typename unique_ make_unique return unique_ sta crea un objeto std unique_ para un tipo t no matricial pasando los argumentos args al constructor de t as la lnea de cdigo en el ejemplo anterior puede ser sustituida por la expresin auto u = std make_ 0 4 note u is of type std unique_ publicado por daniel gmez vergel en domingo marzo 01 2015 enviar por correo electrnico escribe un blog compartir con twitter compartir con facebook compartir en pinterest no hay comentarios publicar un comentario entrada m s reciente entrada antigua p gina principal suscribirse a enviar comentarios acerca del blog este blog est especialmente dirigido a estudiantes y profesores de ciencias de la computacin interesados en la gestin eficiente de los recursos de sus sistemas mediante tcnicas modernas de programacin en el lenguaje c++ buscar en el blog artculos publicados 2016 noviembre octubre julio mayo abril 2015 julio junio mayo abril marzo punteros inteligentes punteros inteligentes punteros inteligentes febrero enero entrada destacada sem nticas de copia y movimiento sobre el autor daniel gmez vergel soy licenciado en fsica por la universidad de sevilla y doctor en fsica terica por la universidad complutense de madrid mi inters por distintas ramas de la fsica me ha permitido ocupar puestos de investigacin en reas de muy diversa naturaleza sica atmica caracterizacin de materiales gravedad cu en centros de reconocido prestigio durante los ltimos diez aos colaborando con equipos experimentales y tericos tanto en espaa nacional de aceleradores y centro superior de investigaciones cientficas entre como en el extranjero de utrecht y universidad tcnica de y ello con la labor docente como referente permanente pues la he considerado siempre como la mejor forma en base a mis aptitudes de contribuir a la mejora de la sociedad y a la mejor formacin de nuestros profesionales en la actualidad formo parte del equipo docente del departamento de ciencias y tecnologa de la universidad europea e imparto clases magistrales de asignaturas de fsica matem ticas y programacin enfocadas a diversos grados acadmicos ver todo mi perfil todos los derechos reservados daniel gmez vergel 2015 2016 tema sencillo con la tecnologa de blogger 