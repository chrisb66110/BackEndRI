 how to become a hacker how to become a hacker eric steven raymond thyrsus enterprises com copyright 2001 eric s raymond revision history revision 1 43 07 feb 2011 esr python passed perl in popularity in 2010 revision 1 42 22 oct 2010 esr added revision 1 40 3 nov 2008 esr link fixes revision 1 39 14 aug jan 2008 esr link fixes revision 1 38 8 jan 2008 esr deprecate java as a language to learn early revision 1 37 4 oct 2007 esr recommend ubuntu as a unix distro for newbies table of contents why this document what is a hacker the hacker attitude 1 the world is full of fascinating problems waiting to be solved 2 no problem should ever have to be solved twice 3 boredom and drudgery are evil 4 freedom is good 5 attitude is no substitute for competence basic hacking skills 1 learn how to program 2 get one of the open source unixes and learn to use and run it 3 learn how to use the world wide web and write html 4 if you don t have functional english learn it status in the hacker culture 1 write open source software 2 help test and debug open source software 3 publish useful information 4 help keep the infrastructure working 5 serve the hacker culture itself the hacker nerd connection points for style historical note hacking open source and free software other resources frequently asked questions why this document as editor of the jargon file and author of a few other well known documents of similar nature i often get email requests from enthusiastic network newbies asking can i learn to be a wizardly hacker back in 1996 i noticed that there didn t seem to be any other faqs or web documents that addressed this vital question so i started this one a lot of hackers now consider it definitive and i suppose that means it is still i don t claim to be the exclusive authority on this topic if you don t like what you read here write your own if you are reading a snapshot of this document offline the current version lives at http catb org faqs hacker howto html note there is a list of frequently asked questions at the end of this document please read these mailing me any questions about this document numerous translations of this document are available arabic belorussian chinese danish dutch estonian german greek italian hebrew norwegian portuguese romanian spanish turkish and swedish note that since this document changes occasionally they may be out of date to varying degrees the five dots in nine squares diagram that decorates this document is called a glider it is a simple pattern with some surprising properties in a mathematical simulation called life that has fascinated hackers for many years i think it makes a good visual emblem for what hackers are like abstract at first a bit mysterious seeming but a gateway to a whole world with an intricate logic of its own read more about the glider emblem here what is a hacker the jargon file contains a bunch of definitions of the term most having to do with technical adeptness and a delight in solving problems and overcoming limits if you want to know how to become a hacker though only two are really relevant there is a community a shared culture of expert programmers and networking wizards that traces its history back through decades to the first time sharing minicomputers and the earliest arpanet experiments the members of this culture originated the term hackers built the internet hackers made the unix operating system what it is today hackers run usenet hackers make the world wide web work if you are part of this culture if you have contributed to it and other people in it know who you are and call you a hacker you re a hacker the hacker mind set is not confined to this software hacker culture there are people who apply the hacker attitude to other things like electronics or music actually you can find it at the highest levels of any science or art software hackers recognize these kindred spirits elsewhere and may call them too and some claim that the hacker nature is really independent of the particular medium the hacker works in but in the rest of this document we will focus on the skills and attitudes of software hackers and the traditions of the shared culture that originated the term there is another group of people who loudly call themselves hackers but aren t these are people adolescent who get a kick out of breaking into computers and phreaking the phone system real hackers call these people and want nothing to do with them real hackers mostly think crackers are lazy irresponsible and not very bright and object that being able to break security doesn t make you a hacker any more than being able to hotwire cars makes you an automotive engineer unfortunately many journalists and writers have been fooled into using the word to describe crackers this irritates real hackers no end the basic difference is this hackers build things crackers break them if you want to be a hacker keep reading if you want to be a cracker go read the alt 2600 newsgroup and get ready to do five to ten in the slammer after finding out you aren t as smart as you think you are and that s all i m going to say about crackers the hacker attitude 1 the world is full of fascinating problems waiting to be solved 2 no problem should ever have to be solved twice 3 boredom and drudgery are evil 4 freedom is good 5 attitude is no substitute for competence hackers solve problems and build things and they believe in freedom and voluntary mutual help to be accepted as a hacker you have to behave as though you have this kind of attitude yourself and to behave as though you have the attitude you have to really believe the attitude but if you think of cultivating hacker attitudes as just a way to gain acceptance in the culture you ll miss the point becoming the kind of person who believes these things is important for you for helping you learn and keeping you motivated as with all creative arts the most effective way to become a master is to imitate the mind set of masters not just intellectually but emotionally as well or as the following modern zen poem has it so if you want to be a hacker repeat the following things until you believe them 1 the world is full of fascinating problems waiting to be solved being a hacker is lots of fun but it s a kind of fun that takes lots of effort the effort takes motivation successful athletes get their motivation from a kind of physical delight in making their bodies perform in pushing themselves past their own physical limits similarly to be a hacker you have to get a basic thrill from solving problems sharpening your skills and exercising your intelligence if you aren t the kind of person that feels this way naturally you ll need to become one in order to make it as a hacker otherwise you ll find your hacking energy is sapped by distractions like sex money and social approval also have to develop a kind of faith in your own learning capacity a belief that even though you may not know all of what you need to solve a problem if you tackle just a piece of it and learn from that you ll learn enough to solve the next piece and so on until you re done 2 no problem should ever have to be solved twice creative brains are a valuable limited resource they shouldn t be wasted on re inventing the wheel when there are so many fascinating new problems waiting out there to behave like a hacker you have to believe that the thinking time of other hackers is precious so much so that it s almost a moral duty for you to share information solve problems and then give the solutions away just so other hackers can solve new problems instead of having to perpetually re address old ones note however that problem should ever have to be solved twice does not imply that you have to consider all existing solutions sacred or that there is only one right solution to any given problem often we learn a lot about the problem that we didn t know before by studying the first cut at a solution it s ok and often necessary to decide that we can do better what s not ok is artificial technical legal or institutional barriers closed source that prevent a good solution from being re used and force people to re invent wheels don t have to believe that you re obligated to give all your creative product away though the hackers that do are the ones that get most respect from other hackers it s consistent with hacker values to sell enough of it to keep you in food and rent and computers it s fine to use your hacking skills to support a family or even get rich as long as you don t forget your loyalty to your art and your fellow hackers while doing it 3 boredom and drudgery are evil hackers creative people in should never be bored or have to drudge at stupid repetitive work because when this happens it means they aren t doing what only they can do solve new problems this wastefulness hurts everybody therefore boredom and drudgery are not just unpleasant but actually evil to behave like a hacker you have to believe this enough to want to automate away the boring bits as much as possible not just for yourself but for everybody else other is one apparent exception to this hackers will sometimes do things that may seem repetitive or boring to an observer as a mind clearing exercise or in order to acquire a skill or have some particular kind of experience you can t have otherwise but this is by choice nobody who can think should ever be forced into a situation that bores them 4 freedom is good hackers are naturally anti authoritarian anyone who can give you orders can stop you from solving whatever problem you re being fascinated by and given the way authoritarian minds work will generally find some appallingly stupid reason to do so so the authoritarian attitude has to be fought wherever you find it lest it smother you and other hackers isn t the same as fighting all authority children need to be guided and criminals restrained a hacker may agree to accept some kinds of authority in order to get something he wants more than the time he spends following orders but that s a limited conscious bargain the kind of personal surrender authoritarians want is not on offer authoritarians thrive on censorship and secrecy and they distrust voluntary cooperation and information sharing they only like that they control so to behave like a hacker you have to develop an instinctive hostility to censorship secrecy and the use of force or deception to compel responsible adults and you have to be willing to act on that belief 5 attitude is no substitute for competence to be a hacker you have to develop some of these attitudes but copping an attitude alone won t make you a hacker any more than it will make you a champion athlete or a rock star becoming a hacker will take intelligence practice dedication and hard work therefore you have to learn to distrust attitude and respect competence of every kind hackers won t let posers waste their time but they worship competence especially competence at hacking but competence at anything is valued competence at demanding skills that few can master is especially good and competence at demanding skills that involve mental acuteness craft and concentration is best if you revere competence you ll enjoy developing it in yourself the hard work and dedication will become a kind of intense play rather than drudgery that attitude is vital to becoming a hacker basic hacking skills 1 learn how to program 2 get one of the open source unixes and learn to use and run it 3 learn how to use the world wide web and write html 4 if you don t have functional english learn it the hacker attitude is vital but skills are even more vital attitude is no substitute for competence and there s a certain basic toolkit of skills which you have to have before any hacker will dream of calling you one this toolkit changes slowly over time as technology creates new skills and makes old ones obsolete for example it used to include programming in machine language and didn t until recently involve html but right now it pretty clearly includes the following 1 learn how to program this of course is the fundamental hacking skill if you don t know any computer languages i recommend starting with python it is cleanly designed well documented and relatively kind to beginners despite being a good first language it is not just a toy it is very powerful and flexible and well suited for large projects i have written a more detailed evaluation of python good tutorials are available at the python web site i used to recommend java as a good language to learn early but this critique has changed my mind for the pitfalls of java as a first programming language within a hacker cannot as they devastatingly put it approach problem solving like a plumber in a hardware store you have to know what the components actually do now i think it is probably best to learn c and lisp first then java there is perhaps a more general point here if a language does too much for you it may be simultaneously a good tool for production and a bad one for learning it s not only languages that have this problem web application frameworks like rubyonrails cakephp django may make it too easy to reach a superficial sort of understanding that will leave you without resources when you have to tackle a hard problem or even just debug the solution to an easy one if you get into serious programming you will have to learn c the core language of unix c is very closely related to c if you know one learning the other will not be difficult neither language is a good one to try learning as your first however and actually the more you can avoid programming in c the more productive you will be c is very efficient and very sparing of your machine s resources unfortunately c gets that efficiency by requiring you to do a lot of low level management of resources by hand all that low level code is complex and bug prone and will soak up huge amounts of your time on debugging with today s machines as powerful as they are this is usually a bad tradeoff it s smarter to use a language that uses the machine s time less efficiently but your time much more efficiently thus python other languages of particular importance to hackers include perl and lisp perl is worth learning for practical reasons it s very widely used for active web pages and system administration so that even if you never write perl you should learn to read it many people use perl in the way i suggest you should use python to avoid c programming on jobs that don t require c s machine efficiency you will need to be able to understand their code lisp is worth learning for a different reason the profound enlightenment experience you will have when you finally get it that experience will make you a better programmer for the rest of your days even if you never actually use lisp itself a lot can get some beginning experience with lisp fairly easily by writing and modifying editing modes for the emacs text editor or script fu plugins for the gimp it s best actually to learn all five of python c c java perl and lisp besides being the most important hacking languages they represent very different approaches to programming and each will educate you in valuable ways but be aware that you won t reach the skill level of a hacker or even merely a programmer simply by accumulating languages you need to learn how to think about programming problems in a general way independent of any one language to be a real hacker you need to get to the point where you can learn a new language in days by relating what s in the manual to what you already know this means you should learn several very different languages i can t give complete instructions on how to learn to program here it s a complex skill but i can tell you that books and courses won t do it many maybe most of the best hackers are self taught you can learn language features bits of knowledge from books but the mind set that makes that knowledge into living skill can be learned only by practice and apprenticeship what will do it is reading code and writing code peter norvig who is one of google s top hackers and the co author of the most widely used textbook on ai has written an excellent essay called teach yourself programming in ten years his for programming is worth careful attention learning to program is like learning to write good natural language the best way to do it is to read some stuff written by masters of the form write some things yourself read a lot more write a little more read a lot more write some more and repeat until your writing begins to develop the kind of strength and economy you see in your models finding good code to read used to be hard because there were few large programs available in source for fledgeling hackers to read and tinker with this has changed dramatically open source software programming tools and operating systems built by are now widely available which brings me neatly to our next topic 2 get one of the open source unixes and learn to use and run it i ll assume you have a personal computer or can get access to one a moment to appreciate how much that means the hacker culture originally evolved back when computers were so expensive that individuals could not own them the single most important step any newbie can take toward acquiring hacker skills is to get a copy of linux or one of the bsd unixes or opensolaris install it on a personal machine and run it yes there are other operating systems in the world besides unix but they re distributed in binary you can t read the code and you can t modify it trying to learn to hack on a microsoft windows machine or under any other closed source system is like trying to learn to dance while wearing a body cast under mac os x it s possible but only part of the system is open source you re likely to hit a lot of walls and you have to be careful not to develop the bad habit of depending on apple s proprietary code if you concentrate on the unix under the hood you can learn some useful things unix is the operating system of the internet while you can learn to use the internet without knowing unix you can t be an internet hacker without understanding unix for this reason the hacker culture today is pretty strongly unix centered wasn t always true and some old time hackers still aren t happy about it but the symbiosis between unix and the internet has become strong enough that even microsoft s muscle doesn t seem able to seriously dent it so bring up a unix i like linux myself but there are other ways yes you can run both linux and microsoft windows on the same learn it run it tinker with it talk to the internet with it read the code modify the code you ll get better programming tools c lisp python and than any microsoft operating system can dream of hosting you ll have fun and you ll soak up more knowledge than you realize you re learning until you look back on it as a master hacker for more about learning unix see the loginataka you might also want to have a look at the art of unix programming to get your hands on a linux see the linux online site you can download from there or find a local linux user group to help you with installation during the first ten years of this howto s life i reported that from a new user s point of view all linux distributions are almost equivalent but in 2006 2007 an actual best choice emerged ubuntu while other distros have their own areas of strength ubuntu is far and away the most accessible to linux newbies you can find bsd unix help and resources at www bsd org a good way to dip your toes in the water is to boot up what linux fans call a live cd a distribution that runs entirely off a cd without having to modify your hard disk this will be slow because cds are slow but it s a way to get a look at the possibilities without having to do anything drastic i have written a primer on the basics of unix and the internet i used to recommend against installing either linux or bsd as a solo project if you re a newbie nowadays the installers have gotten good enough that doing it entirely on your own is possible even for a newbie nevertheless i still recommend making contact with your local linux user s group and asking for help it can t hurt and may smooth the process 3 learn how to use the world wide web and write html most of the things the hacker culture has built do their work out of sight helping run factories and offices and universities without any obvious impact on how non hackers live the web is the one big exception the huge shiny hacker toy that even politicians admit has changed the world for this reason alone a lot of other good ones as you need to learn how to work the web this doesn t just mean learning how to drive a browser can do but learning how to write html the web s markup language if you don t know how to program writing html will teach you some mental habits that will help you learn so build a home page try to stick to xhtml which is a cleaner language than classic html are good beginner tutorials on the web here s one but just having a home page isn t anywhere near good enough to make you a hacker the web is full of home pages most of them are pointless zero content sludge very snazzy looking sludge mind you but sludge all the same more on this see the html hell page to be worthwhile your page must have content it must be interesting and or useful to other hackers and that brings us to the next topic 4 if you don t have functional english learn it as an american and native english speaker myself i have previously been reluctant to suggest this lest it be taken as a sort of cultural imperialism but several native speakers of other languages have urged me to point out that english is the working language of the hacker culture and the internet and that you will need to know it to function in the hacker community back around 1991 i learned that many hackers who have english as a second language use it in technical discussions even when they share a birth tongue it was reported to me at the time that english has a richer technical vocabulary than any other language and is therefore simply a better tool for the job for similar reasons translations of technical books written in english are often unsatisfactory they get done at linus torvalds a finn comments his code in english apparently never occurred to him to do his fluency in english has been an important factor in his ability to recruit a worldwide community of developers for linux it s an example worth following being a native english speaker does not guarantee that you have language skills good enough to function as a hacker if your writing is semi literate ungrammatical and riddled with misspellings many hackers will tend to ignore you while sloppy writing does not invariably mean sloppy thinking we ve generally found the correlation to be strong and we have no use for sloppy thinkers if you can t yet write competently learn to status in the hacker culture 1 write open source software 2 help test and debug open source software 3 publish useful information 4 help keep the infrastructure working 5 serve the hacker culture itself like most cultures without a money economy hackerdom runs on reputation you re trying to solve interesting problems but how interesting they are and whether your solutions are really good is something that only your technical peers or superiors are normally equipped to judge accordingly when you play the hacker game you learn to keep score primarily by what other hackers think of your skill is why you aren t really a hacker until other hackers consistently call you this fact is obscured by the image of hacking as solitary work also by a hacker cultural taboo decaying since the late but still against admitting that ego or external validation are involved in one s motivation at all specifically hackerdom is what anthropologists call a gift culture you gain status and reputation in it not by dominating other people nor by being beautiful nor by having things other people want but rather by giving things away specifically by giving away your time your creativity and the results of your skill there are basically five kinds of things you can do to be respected by hackers 1 write open source software the first most central and most is to write programs that other hackers think are fun or useful and give the program sources away to the whole hacker culture to use used to call these works software but this confused too many people who weren t sure exactly what was supposed to mean most of us now prefer the term open source hackerdom s most revered demigods are people who have written large capable programs that met a widespread need and given them away so that now everyone uses them but there s a bit of a fine historical point here while hackers have always looked up to the open source developers among them as our community s hardest core before the mid most hackers most of the time worked on closed source this was still true when i wrote the first version of this howto in 1996 it took the mainstreaming of open source software after 1997 to change things today hacker and source are two descriptions for what is essentially the same culture and population but it is worth remembering that this was not always so more on this see the section called note hacking open source and free software 2 help test and debug open source software they also serve who stand and debug open source software in this imperfect world we will inevitably spend most of our software development time in the debugging phase that s why any open source author who s thinking will tell you that good beta testers know how to describe symptoms clearly localize problems well can tolerate bugs in a quickie release and are willing to apply a few simple diagnostic are worth their weight in rubies even one of these can make the difference between a debugging phase that s a protracted exhausting nightmare and one that s merely a salutary nuisance if you re a newbie try to find a program under development that you re interested in and be a good beta tester there s a natural progression from helping test programs to helping debug them to helping modify them you ll learn a lot this way and generate good karma with people who will help you later on 3 publish useful information another good thing is to collect and filter useful and interesting information into web pages or documents like frequently asked questions lists and make those generally available maintainers of major technical faqs get almost as much respect as open source authors 4 help keep the infrastructure working the hacker culture the engineering development of the internet for that is run by volunteers there s a lot of necessary but unglamorous work that needs done to keep it going administering mailing lists moderating newsgroups maintaining large software archive sites developing rfcs and other technical standards people who do this sort of thing well get a lot of respect because everybody knows these jobs are huge time sinks and not as much fun as playing with code doing them shows dedication 5 serve the hacker culture itself finally you can serve and propagate the culture itself for example writing an accurate primer on how to become a hacker this is not something you ll be positioned to do until you ve been around for while and become well known for one of the first four things the hacker culture doesn t have leaders exactly but it does have culture heroes and tribal elders and historians and spokespeople when you ve been in the trenches long enough you may grow into one of these beware hackers distrust blatant ego in their tribal elders so visibly reaching for this kind of fame is dangerous rather than striving for it you have to sort of position yourself so it drops in your lap and then be modest and gracious about your status the hacker nerd connection contrary to popular myth you don t have to be a nerd to be a hacker it does help however and many hackers are in fact nerds being something of a social outcast helps you stay concentrated on the really important things like thinking and hacking for this reason many hackers have adopted the label as a badge of pride it s a way of declaring their independence from normal social expectations well as a fondness for other things like science fiction and strategy games that often go with being a the term nerd used to be used this way back in the back when nerd was a mild pejorative and geek a rather harsher one sometime after 2000 they switched places at least in u s popular culture and there is now even a significant geek pride culture among people who aren t techies if you can manage to concentrate enough on hacking to be good at it and still have a life that s fine this is a lot easier today than it was when i was a newbie in the mainstream culture is much friendlier to techno nerds now there are even growing numbers of people who realize that hackers are often high quality lover and spouse material if you re attracted to hacking because you don t have a life that s ok too at least you won t have trouble concentrating maybe you ll get a life later on points for style again to be a hacker you have to enter the hacker mindset there are some things you can do when you re not at a computer that seem to help they re not substitutes for hacking but many hackers do them and feel that they connect in some basic way with the essence of hacking learn to write your native language well though it s a common stereotype that programmers can t write a surprising number of hackers all the most accomplished ones i know are very able writers read science fiction go to science fiction conventions good way to meet hackers and proto train in a martial arts form the kind of mental discipline required for martial arts seems to be similar in important ways to what hackers do the most popular forms among hackers are definitely asian empty hand arts such as tae kwon do various forms of karate kung fu aikido or ju jitsu western fencing and asian sword arts also have visible followings in places where it s legal pistol shooting has been rising in popularity since the late the most hackerly martial arts are those which emphasize mental discipline relaxed awareness and control rather than raw strength athleticism or physical toughness study an actual meditation discipline the perennial favorite among hackers is zen it is possible to benefit from zen without acquiring a religion or discarding one you already other styles may work as well but be careful to choose one that doesn t require you to believe crazy things develop an analytical ear for music learn to appreciate peculiar kinds of music learn to play some musical instrument well or how to sing develop your appreciation of puns and wordplay the more of these things you already do the more likely it is that you are natural hacker material why these things in particular is not completely clear but they re connected with a mix of left and right brain skills that seems to be important hackers need to be able to both reason logically and step outside the apparent logic of a problem at a moment s notice work as intensely as you play and play as intensely as you work for true hackers the boundaries between and all tend to disappear or to merge into a high level creative playfulness also don t be content with a narrow range of skills though most hackers self describe as programmers they are very likely to be more than competent in several related skills system administration web design and pc hardware troubleshooting are common ones a hacker who s a system administrator on the other hand is likely to be quite skilled at script programming and web design hackers don t do things by halves if they invest in a skill at all they tend to get very good at it finally a few things not to do don t use a silly grandiose user id or screen name don t get in flame wars on usenet anywhere don t call yourself a and don t waste your time on anybody who does don t post or email writing that s full of spelling errors and bad grammar the only reputation you ll make doing any of these things is as a twit hackers have long memories it could take you years to live your early blunders down enough to be accepted the problem with screen names or handles deserves some amplification concealing your identity behind a handle is a juvenile and silly behavior characteristic of crackers warez and other lower life forms hackers don t do this they re proud of what they do and want it associated with their real names so if you have a handle drop it in the hacker culture it will only mark you as a loser historical note hacking open source and free software when i originally wrote this how to in late 1996 some of the conditions around it were very different from the way they look today a few words about these changes may help clarify matters for people who are confused about the relationship of open source free software and linux to the hacker community if you are not curious about this you can skip straight to the faq and bibliography from here the hacker ethos and community as i have described it here long predates the emergence of linux after 1990 i first became involved with it around 1976 and its roots are readily traceable back to the early but before linux most hacking was done on either proprietary operating systems or a handful of quasi experimental homegrown systems like mit s its that were never deployed outside of their original academic niches while there had been some earlier attempts to change this situation their impact was at best very marginal and confined to communities of dedicated true believers which were tiny minorities even within the hacker community let alone with respect to the larger world of software in general what is now called goes back as far as the hacker community does but until 1985 it was an unnamed folk practice rather than a conscious movement with theories and manifestos attached to it this prehistory ended when in 1985 arch hacker richard stallman tried to give it a name but his act of naming was also an act of claiming he attached ideological baggage to the label which much of the existing hacker community never accepted as a result the label was loudly rejected by a substantial minority of the hacker community among those associated with bsd and used with serious but silent reservations by a majority of the remainder despite these reservations rms s claim to define and lead the hacker community under the banner broadly held until the mid it was seriously challenged only by the rise of linux linux gave open source development a natural home many projects issued under terms we would now call open source migrated from proprietary unixes to linux the community around linux grew explosively becoming far larger and more heterogenous than the pre linux hacker culture rms determinedly attempted to co opt all this activity into his movement but was thwarted by both the exploding diversity of the linux community and the public skepticism of its founder linus torvalds torvalds continued to use the term for lack of any alternative but publicly rejected rms s ideological baggage many younger hackers followed suit in 1996 when i first published this hacker howto the hacker community was rapidly reorganizing around linux and a handful of other open source operating systems those descended from bsd community memory of the fact that most of us had spent decades developing closed source software on closed source operating systems had not yet begun to fade but that fact was already beginning to seem like part of a dead past hackers were increasingly defining themselves as hackers by their attachments to open source projects such as linux or apache the term however had not yet emerged it would not do so until early 1998 when it did most of hacker community adopted it within the following six months the exceptions were a minority ideologically attached to the term since 1998 and especially after about 2003 the identification of hacking with open source free development has become extremely close today there is little point in attempting to distinguish between these categories and it seems unlikely that will change in the future it is worth remembering however that this was not always so other resources paul graham has written an essay called great hackers and another on undergraduation in which he speaks much wisdom there is a document called how to be a programmer that is an excellent complement to this one it has valuable advice not just about coding and skillsets but about how to function on a programming team i have also written a brief history of hackerdom i have written a paper the cathedral and the bazaar which explains a lot about how the linux and open source cultures work i have addressed this topic even more directly in its sequel homesteading the noosphere rick moen has written an excellent document on how to run a linux user group rick moen and i have collaborated on another document on how to ask smart questions this will help you seek assistance in a way that makes it more likely that you will actually get it if you need instruction in the basics of how personal computers unix and the internet work see the unix and internet fundamentals howto when you release software or write patches for software try to follow the guidelines in the software release practice howto if you enjoyed the zen poem you might also like rootless root the unix koans of master foo frequently asked questions q how do i tell if i am already a hacker q will you teach me how to hack q how can i get started then q when do you have to start is it too late for me to learn q how long will it take me to learn to hack q is visual basic a good language to start with q would you help me to crack a system or teach me how to crack q how can i get the password for someone else s account q how can i break into read monitor someone else s email q how can i steal channel op privileges on irc q i ve been cracked will you help me fend off further attacks q i m having problems with my windows software will you help me q where can i find some real hackers to talk with q can you recommend useful books about hacking related subjects q do i need to be good at math to become a hacker q what language should i learn first q what kind of hardware do i need q i want to contribute can you help me pick a problem to work on q do i need to hate and bash microsoft q but won t open source software leave programmers unable to make a living q where can i get a free unix q how do i tell if i am already a hacker a ask yourself the following three questions do you speak code fluently do you identify with the goals and values of the hacker community has a well established member of the hacker community ever called you a hacker if you can answer yes to all three of these questions you are already a hacker no two alone are sufficient the first test is about skills you probably pass it if you have the minimum technical skills described earlier in this document you blow right through it if you have had a substantial amount of code accepted by an open source development project the second test is about attitude if the five principles of the hacker mindset seemed obvious to you more like a description of the way you already live than anything novel you are already halfway to passing it that s the inward half the other outward half is the degree to which you identify with the hacker community s long term projects here is an incomplete but indicative list of some of those projects does it matter to you that linux improve and spread are you passionate about software freedom hostile to monopolies do you act on the belief that computers can be instruments of empowerment that make the world a richer and more humane place but a note of caution is in order here the hacker community has some specific primarily defensive political interests two of them are defending free speech rights and fending off power grabs that would make open source illegal some of those long term projects are civil liberties organizations like the electronic frontier foundation and the outward attitude properly includes support of them but beyond that most hackers view attempts to systematize the hacker attitude into an explicit political program with suspicion we ve learned the hard way that these attempts are divisive and distracting if someone tries to recruit you to march on your capitol in the name of the hacker attitude they ve missed the point the right response is probably shut up and show them the code the third test has a tricky element of recursiveness about it i observed in the section called is a hacker that being a hacker is partly a matter of belonging to a particular subculture or social network with a shared history an inside and an outside in the far past hackers were a much less cohesive and self aware group than they are today but the importance of the social network aspect has increased over the last thirty years as the internet has made connections with the core of the hacker subculture easier to develop and maintain one easy behavioral index of the change is that in this century we have our own t shirts sociologists who study networks like those of the hacker culture under the general rubric of have noted that one characteristic of such networks is that they have gatekeepers core members with the social authority to endorse new members into the network because the that is hacker culture is a loose and informal one the role of gatekeeper is informal too but one thing that all hackers understand in their bones is that not every hacker is a gatekeeper gatekeepers have to have a certain degree of seniority and accomplishment before they can bestow the title how much is hard to quantify but every hacker knows it when they see it q will you teach me how to hack a since first publishing this page i ve gotten several requests a week several a from people to me all about unfortunately i don t have the time or energy to do this my own hacking projects and working as an open source advocate take up of my time even if i did hacking is an attitude and skill you basically have to teach yourself you ll find that while real hackers want to help you they won t respect you if you beg to be spoon fed everything they know learn a few things first show that you re trying that you re capable of learning on your own then go to the hackers you meet with specific questions if you do email a hacker asking for advice here are two things to know up front first we ve found that people who are lazy or careless in their writing are usually too lazy and careless in their thinking to make good hackers so take care to spell correctly and use good grammar and punctuation otherwise you ll probably be ignored secondly don t dare ask for a reply to an isp account that s different from the account you re sending from we find people who do that are usually thieves using stolen accounts and we have no interest in rewarding or assisting thievery q how can i get started then a the best way for you to get started would probably be to go to a lug user meeting you can find such groups on the ldp general linux information page there is probably one near you possibly associated with a college or university lug members will probably give you a linux if you ask and will certainly help you install one and get started q when do you have to start is it too late for me to learn a any age at which you are motivated to start is a good age most people seem to get interested between ages 15 and 20 but i know of exceptions in both directions q how long will it take me to learn to hack a that depends on how talented you are and how hard you work at it most people who try can acquire a respectable skill set in eighteen months to two years if they concentrate don t think it ends there though in hacking in many other it takes about ten years to achieve mastery and if you are a real hacker you will spend the rest of your life learning and perfecting your craft q is visual basic a good language to start with a if you re asking this question it almost certainly means you re thinking about trying to hack under microsoft windows this is a bad idea in itself when i compared trying to learn to hack under windows to trying to learn to dance while wearing a body cast i wasn t kidding don t go there it s ugly and it never stops being ugly there is a specific problem with visual basic mainly that it s not portable though there is a prototype open source implementations of visual basic the applicable ecma standards don t cover more than a small set of its programming interfaces on windows most of its library support is proprietary to a single vendor if you aren t extremely careful about which features you use more careful than any newbie is really capable of being you ll end up locked into only those platforms microsoft chooses to support if you re starting on a unix much better languages with better libraries are available python for example also like other basics visual basic is a poorly designed language that will teach you bad programming habits no don t ask me to describe them in detail that explanation would fill a book learn a well designed language instead one of those bad habits is becoming dependent on a single vendor s libraries widgets and development tools in general any language that isn t fully supported under at least linux or one of the bsds and or at least three different vendors operating systems is a poor one to learn to hack in q would you help me to crack a system or teach me how to crack a no anyone who can still ask such a question after reading this faq is too stupid to be educable even if i had the time for tutoring any emailed requests of this kind that i get will be ignored or answered with extreme rudeness q how can i get the password for someone else s account a this is cracking go away idiot q how can i break into read monitor someone else s email a this is cracking get lost moron q how can i steal channel op privileges on irc a this is cracking begone cretin q i ve been cracked will you help me fend off further attacks a no every time i ve been asked this question so far it s been from some poor sap running microsoft windows it is not possible to effectively secure windows systems against crack attacks the code and architecture simply have too many flaws which makes securing windows like trying to bail out a boat with a sieve the only reliable prevention starts with switching to linux or some other operating system that is designed to at least be capable of security q i m having problems with my windows software will you help me a yes go to a dos prompt and type c any problems you are experiencing will cease within a few minutes q where can i find some real hackers to talk with a the best way is to find a unix or linux user s group local to you and go to their meetings can find links to several lists of user groups on the ldp site at used to say here that you wouldn t find any real hackers on irc but i m given to understand this is changing apparently some real hacker communities attached to things like gimp and perl have irc channels now q can you recommend useful books about hacking related subjects a i maintain a linux reading list howto that you may find helpful the loginataka may also be interesting for an introduction to python see the tutorial on the python site q do i need to be good at math to become a hacker a no hacking uses very little formal mathematics or arithmetic in particular you won t usually need trigonometry calculus or analysis are exceptions to this in a handful of specific application areas like 3 d computer knowing some formal logic and boolean algebra is good some grounding in finite mathematics finite set theory combinatorics and graph can be helpful much more importantly you need to be able to think logically and follow chains of exact reasoning the way mathematicians do while the content of most mathematics won t help you you will need the discipline and intelligence to handle mathematics if you lack the intelligence there is little hope for you as a hacker if you lack the discipline you d better grow it i think a good way to find out if you have what it takes is to pick up a copy of raymond smullyan s book what is the name of this book smullyan s playful logical conundrums are very much in the hacker spirit being able to solve them is a good sign enjoying solving them is an even better one q what language should i learn first a xhtml latest dialect of if you don t already know it there are a lot of glossy hype intensive bad html books out there and distressingly few good ones the one i like best is html the definitive guide but html is not a full programming language when you re ready to start programming i would recommend starting with python you will hear a lot of people recommending perl but it s harder to learn and my less well designed c is really important but it s also much more difficult than either python or perl don t try to learn it first windows users do not settle for visual basic it will teach you bad habits and it s not portable off windows avoid q what kind of hardware do i need a it used to be that personal computers were rather underpowered and memory poor enough so that they placed artificial limits on a hacker s learning process this stopped being true in the mid any machine from an intel 486 up is more than powerful enough for development work x and internet communications and the smallest disks you can buy today are plenty big enough the important thing in choosing a machine on which to learn is whether its hardware is linux compatible bsd compatible should you choose to go that again this will be true for almost all modern machines the only really sticky areas are modems and wireless cards some machines have windows specific hardware that won t work with linux there s a faq on hardware compatibility the latest version is here q i want to contribute can you help me pick a problem to work on a no because i don t know your talents or interests you have to be self motivated or you won t stick which is why having other people choose your direction almost never works try this watch the project announcements scroll by on freshmeat for a few days when you see one that makes you think i d like to work on that join it q do i need to hate and bash microsoft a no you don t not that microsoft isn t loathsome but there was a hacker culture long before microsoft and there will still be one long after microsoft is history any energy you spend hating microsoft would be better spent on loving your craft write good code that will bash microsoft quite sufficiently without polluting your karma q but won t open source software leave programmers unable to make a living a this seems unlikely so far the open source software industry seems to be creating jobs rather than taking them away if having a program written is a net economic gain over not having it written a programmer will get paid whether or not the program is going to be open source after it s done and no matter how much software gets written there always seems to be more demand for new and customized applications i ve written more about this at the open source pages q where can i get a free unix a if you don t have a unix installed on your machine yet elsewhere on this page i include pointers to where to get the most commonly used free unix to be a hacker you need motivation and initiative and the ability to educate yourself start now 