 bases de datos nosql gua definitiva con las diferencias ventajas y desventajas de cada una forums pandorafms com community wiki library espaol english main comunidad bases de datos nosql gua definitiva abril 20 2017 by sara martn 11 10 votes average 4 90 cargando el post est disponible tambin en ingls no cabe duda de que la forma en que las aplicaciones web tratan los datos ha cambiado de forma significativa durante la ltima dcada cada vez se recopilan ms datos y cada vez son ms los usuarios que acceden a estos datos al mismo tiempo esto significa que la escalabilidad y el rendimiento se han convertido en autnticos retos para las bases de datos relacionales basadas en esquemas la evolucin de nosql el problema de la escalabilidad de sql fue reconocido por empresas web 2 0 con grandes necesidades de datos e infraestructura como google amazon y facebook ellos solos tuvieron que buscar soluciones propias a este problema con tecnologas como bigtable dynamodb y cassandra este inters creciente dio lugar a una serie de sistemas de gestin de base de datos nosql con un enfoque en el rendimiento la fiabilidad y la coherencia se reutilizaron y mejoraron varias estructuras de indexacin existentes con el propsito de mejorar la bsqueda y el rendimiento de lectura en primer lugar haba tipos de bases de datos nosql origen desarrolladas por grandes empresas para satisfacer sus necesidades especficas como bigtable de google que se cree es el primer sistema nosql y dynamodb de amazon el xito de estos sistemas patentados inici el desarrollo de varios sistemas de bases de datos de cdigo abierto y de propietarios similiares siendo los ms populares hypertable cassandra mongodb dynamodb hbase y redis qu hace a nosql diferente una diferencia clave entre las bases de datos de nosql y las bases de datos relacionales tradicionales es el hecho de que nosql es una forma de almacenamiento no estructurado esto significa que nosql no tiene una estructura de tabla fija como las que se encuentran en las bases de datos relacionales ventajas y desventajas de las bases de datos nosql ventajas las bases de datos de nosql presentan muchas ventajas en comparacin con las bases de datos tradicionales a diferencia de las bases de datos relacionales las bases de datos nosql estn basadas en key value pairs algunos tipos de almacn de bases de datos nosql incluyen diferentes tipos de almacenes como por ejemplo el almacn de columnas de documentos de key value store de grficos de objetos de xml y otros modos de almacn de datos algunos tipos de almacn de bases de datos nosql incluyen almacenes de columnas de documentos de valores de claves de grficos de objetos de xml y otros modos de almacn de datos podra decirse que las bases de datos nosql de cdigo abierto tienen una implementacin rentable ya que no requieren las tarifas de licencia y pueden ejecutarse en hardware de precio bajo cuando trabajamos con bases de datos nosql ya sean de cdigo abierto o tengan un propietario la expansin es ms fcil y ms barata que cuando se trabaja con bases de datos relacionales esto se debe a que se realiza un escalado horizontal y se distribuye la carga por todos los nodos en lugar de realizarse una escala vertical ms tpica en los sistemas de bases de datos relacionales desventajas por supuesto las bases de datos nosql no son perfectas y no siempre van a ser la eleccin ideal la mayora de las bases de datos nosql no admiten funciones de fiabilidad que son soportadas por sistemas de bases de datos relacionales estas caractersticas de fiabilidad pueden resumirse en atomicidad consistencia aislamiento y durabilidad esto tambin significa que las bases de datos nosql que no soportan esas caractersticas ofrecen consistencia para el rendimiento y la escalabilidad con el fin de apoyar las caractersticas de fiabilidad y coherencia los desarrolladores deben implementar su propio cdigo lo que agrega ms complejidad al sistema esto podra limitar el nmero de aplicaciones en las que podemos confiar para realizar transacciones seguras y confiables como por ejemplo los sistemas bancarios otras formas de complejidad encontradas en la mayora de las bases de datos nosql incluyen la incompatibilidad con consultas sql esto significa que se necesita un lenguaje de consulta manual haciendo los procesos mucho ms lentos y complejos nosql vs bases de datos relacionales esta tabla ofrece una breve comparacin entre las funcionalidades de nosql y las bases de datos relacionales cabe sealar que esta tabla muestra una comparacin a nivel de la base de datos no sobre los diversos sistemas de gestin de bases de datos que implementan ambos modelos estos sistemas proporcionan sus propias tcnicas patentadas para superar los problemas y deficiencias encontradas en el sistema adems de intentar mejorar significativamente el rendimiento y la fiabilidad tipos de almacenamiento de datos nosql key value store en el tipo de almacn key value se utiliza una tabla hash en la que una clave nica apunta a un elemento las claves pueden ser organizadas por grupos clave lgicos requiriendo solamente estas claves para ser nicas dentro de su propio grupo esto permite tener claves idnticas en diferentes grupos lgicos la siguiente tabla muestra un ejemplo de un almacn de valores clave en el que la clave es el nombre de la ciudad y el valor es la direccin de ulster university en esa ciudad algunas implementaciones del almacn de valores clave proporcionan mecanismos de almacenamiento en el cach lo que mejora en gran medida su rendimiento todo lo que se necesita para hacer frente a los elementos almacenados en la base de datos es la clave los datos se almacenan en una forma de una cadena json o blob grande uno de los mayores defectos en esta forma de base de datos es la falta de consistencia a nivel de la base de datos esto puede ser aadido por los desarrolladores con su propio cdigo aunque esto suponga ms esfuerzo y tiempo la base de datos nosql ms famosa que se construye en un almacn de valores clave key value es dynamodb de amazon almacn de documentos los almacenes de documentos son similares a los almacenes de valores clave porque no tienen un esquema y se basan en un modelo de valor clave ambos carecen de coherencia en el nivel de base de datos lo que hace posible que las aplicaciones proporcionen ms fiabilidad las diferencias ms significativas son en el almacn de documentos los valores proporcionan codificacin xml json o bson codificado para los datos almacenados la aplicacin de base de datos ms popular que se basa en un almacn de documentos es mongodb almacenamiento en columnas los datos se almacenan en columnas en lugar de almacenarse en filas se hace en la mayora de los sistemas de gestin de bases de datos un almacn de columnas est compuesto por una o ms familias de columnas que se agrupan de forma lgica en determinadas columnas en la base de datos una clave se utiliza para identificar y sealar a un nmero de columnas en la base de datos cada columna contiene filas de nombres o tuplas y valores ordenados y separados por comas los almacenes de columnas tienen acceso rpido de lectura y escritura a los datos almacenados en un almacn de columnas las filas que corresponden a una sola columna se almacenan como una sola entrada de disco lo cual facilita el acceso durante las operaciones de lectura y escritura las bases de datos ms populares que usan el almacn de columnas incluyen google bigtable hbase y cassandra base grfica en una grfica de una base de datos nosql se utiliza una estructura de grfica dirigida para representar los datos el grfico est compuesto por bordes y nodos formalmente un grfico es una representacin de un conjunto de objetos donde algunos pares de objetos estn conectados por enlaces los objetos interconectados estn representados por abstracciones matemticas llamadas vrtices y los enlaces que conectan algunos pares de vrtices se llaman bordes un grfico sera un tipo de representacin de datos compuesto por un conjunto de vrtices y de bordes que conectan entre s mostrando visualmente su relacin matemtica esto ilustra la estructura de una base de datos de manera grfica donde se usan bordes y nodos para representar y almacenar los datos estos nodos estn organizados entre s y queda representado por los bordes entre los nodos tanto los nodos como las relaciones tienen propiedades definidas las bases de datos de grficos suelen utilizarse en aplicaciones de redes sociales estas permiten a los desarrolladores centrarse ms en las relaciones entre los objetos que en los propios objetos en este contexto de hecho permiten un entorno escalable y fcil de usar actualmente infogrid y infinitegraph son las bases de datos grficas ms populares sistemas de gestin de bases de datos nosql por una breve comparacin de las bases de datos la tabla siguiente proporciona una breve comparacin entre los diferentes sistemas de gestin de bases de datos nosql mongodb tiene un sistema flexible de almacenamiento de esquemas lo que significa que los objetos almacenados no tienen que tener la misma estructura o los mismos campos mongodb tambin tiene algunas caractersticas de optimizacin que distribuye las colecciones de datos mejorando el rendimiento y consiguiendo un sistema ms equilibrado otros sistemas de base de datos nosql como apache couchdb tambin se consideran bases de datos de tipo almacn de documentos por ello comparten muchas caractersticas con mongodb a excepcin de que es posible acceder a la base de datos usando apis restful rest es un estilo arquitectnico que consiste en un conjunto coordinado de restricciones arquitectnicas aplicadas a componentes conectores y elementos de datos todo esto dentro de la world wide web est basado en un protocolo de comunicaciones apilables cliente servidor protocolo cacheable de comunicaciones ejemplo el protocolo las aplicaciones restful utilizan peticiones http para publicar leer y eliminar datos en cuanto a bases de datos de bases de columnas hypertable es una base de datos nosql escrita en c y basada en bigtable de google hypertable soporta la distribucin de almacenes de datos entre nodos para maximizar la escalabilidad al igual que mongodb y couchdb una de las bases de datos nosql ms utilizadas es cassandra desarrollada por facebook se trata de una base de datos de almacenes de columnas que incluye muchas caractersticas dirigidas a la fiabilidad y tolerancia de fallos cassandra cassandra es un sistema de gestin de bases de datos desarrollado por facebook cuyo objetivo era crear un dbms sin fallos y que proporcione la mxima disponibilidad cassandra es principalmente una base de datos de almacenes de columnas algunos estudios se refieren a cassandra como un sistema hbrido inspirado en bigtable de google de datos de almacn de y en dynamodb de amazon de datos de valor esto se consigue proporcionando un sistema de valor clave pero las claves de cassandra apuntan a un conjunto de familias de columnas dependiendo del sistema de archivos distribuido bigtable de google y de las caractersticas de disponibilidad de dynamo hash cassandra est diseado para almacenar enormes cantidades de datos distribuidos a travs de diferentes nodos cassandra es un dbms diseado para manejar cantidades masivas de datos repartidos entre muchos servidores mientras que proporciona un servicio altamente disponible sin un solo punto de fallo lo cual es esencial para un gran servicio como facebook las principales caractersticas de cassandra incluyen no hay ni un solo punto de fallo para que esto se consiga cassandra debe funcionar como un racimo de nodos eso no significa que los datos de cada clster sean los mismos sin embargo si debe serlo el software de gestin cuando ocurre un fallo en uno de los nodos los datos en ese nodo sern inaccesibles sin embargo otros nodos seguirn siendo accesibles un hashing distribuido es un esquema que proporciona la funcionalidad de tabla hash de manera que la adicin o supresin de una ranura no cambia significativamente la asignacin de claves a dichas ranuras esto proporciona la capacidad de distribuir la carga a los servidores o nodos segn su capacidad y a su vez minimizar el tiempo de inactividad interfaz de cliente relativamente fcil de usar cassandra utiliza apache thrift para su interfaz de cliente apache thrift ofrece un cliente rpc en varios idiomas pero la mayora de los desarrolladores prefieren alternativas de cdigo abierto construidas sobre apple thrift como hector otras caractersticas de disponibilidad una de las caractersticas de cassandra es la replicacin de datos bsicamente refleja datos a otros nodos del clster la replicacin puede ser aleatoria o especfica para maximizar la proteccin de datos colocndola por ejemplo en un nodo en un centro de datos diferente otra caracterstica que se encuentra en cassandra es la poltica de particin la directiva de particin decide en qu nodo se va a colocar la clave esto tambin puede ser aleatorio u ordenado al utilizar ambos tipos de polticas de particin cassandra puede lograr un equilibrio entre el equilibrio de carga y la optimizacin del rendimiento de las consultas consistencia funciones como la replicacin hacen que la consistencia sea un desafo esto se debe al hecho de que todos los nodos deben estar actualizados en cualquier punto en el tiempo con los valores ms recientes sin embargo cassandra intenta mantener un equilibrio entre las acciones de replicacin y las acciones de lectura escritura proporcionando esta personalizacin al desarrollador acciones de lectura escritura el cliente enva una solicitud a un nico nodo de cassandra el nodo de acuerdo con la poltica de replicacin almacena los datos en el clster cada nodo realiza primero el cambio de datos en el registro de confirmacin y a continuacin actualiza la estructura de la tabla con el cambio ambos realizados de forma sincrnica la operacin de lectura es tambin muy similar una peticin de lectura se enva a un solo nodo y ese nico nodo es el que determina qu nodo contiene los datos de acuerdo con la poltica de particin ubicacin mongodb mongodb es una base de datos libre de esquemas orientada a documentos escrita en c la base de datos est basada en el almacn de documentos lo que significa que almacena valores en forma de datos codificados la eleccin del formato codificado en mongodb es json es muy potente porque incluso si los datos estn anidados dentro de los documentos json seguir siendo consultable e indexable las subsecciones que siguen describen algunas de las caractersticas clave disponibles en mongodb shards fragmentos sharding es la particin y distribucin de datos a travs de mltiples mquinas un fragmento es una coleccin de nodos mongodb a diferencia que cassandra donde los nodos estaban simtricamente distribuidos el uso de fragmentos tambin implica la capacidad de escalar horizontalmente a travs de mltiples nodos en el caso de que haya una aplicacin que utilice un nico servidor de base de datos se puede convertir en clster fragmentado con muy pocos cambios en el cdigo de la aplicacin original por la forma en que sharding es ejecutada por mongodb oftware est casi desacoplado de las api pblicas lenguaje de consulta mongo como se mencion anteriormente mongodb utiliza una api restful para recuperar ciertos documentos de una coleccin db se crea un documento de consulta que contiene los campos que deben coincidir con los documentos deseados acciones en mongodb hay un grupo de servidores llamados enrutadores cada uno acta como un servidor para uno o ms clientes del mismo modo el clster contiene un grupo de servidores denominados servidores de configuracin cada uno contiene una copia de los metadatos que indican qu fragmento contiene qu datos las acciones de lectura o escritura se envan desde los clientes a uno de los servidores de enrutador del clster y son encaminadas automticamente por ese servidor a los fragmentos adecuados que contienen los datos con la ayuda de los servidores de configuracin un fragmento en mongodb similar a cassandra es que ambos tienen un esquema de replicacin de datos que crea un conjunto de rplicas de cada fragmento que contiene exactamente los mismos datos hay dos tipos de esquemas de rplica en mongodb master slave replication y replica set replication replica set proporciona ms automatizacin y mejor manejo para los fallos mientras que master slave suele requerir la intervencin de un administrador independientemente del esquema de replicacin en cualquier punto de conjunto de rplicas slo un fragmento acta como fragmento primario todos los fragmentos de rplica son fragmentos secundarios todas las operaciones de escritura y lectura pasan al fragmento primario y luego se distribuyen de forma uniforme fuera a los otros fragmentos secundarios del conjunto en el grfico de abajo vemos la arquitectura de mongodb explicada anteriormente mostrando los servidores del enrutador en verde los servidores de configuracin en amarillo y los fragmentos que contienen los nodos mongodb en azules cabe sealar que el sharding compartir los datos entre en mongodb es completamente automtico lo que reduce la tasa de fallos y hace mongodb un sistema de gestin de base de datos altamente escalable estructuras de indexacin para bases de datos nosql la indexacin es el proceso de asociar una clave con la ubicacin de un registro de datos correspondiente en un dbms hay muchas estructuras de datos de indizacin utilizadas en las bases de datos nosql las siguientes secciones discutirn brevemente algunos de los mtodos ms comunes la indexacin de los rboles b la indexacin de los rboles t y la indexacin de los rboles indexacin de rboles b el rbol b es una de las estructuras de ndice ms comunes en dbms en los rboles b los nodos internos pueden tener un nmero variable de nodos secundarios dentro de un rango predefinido una diferencia importante de otras estructuras de rbol como avl es que el rbol b permite que los nodos tengan un nmero variable de nodos secundarios lo que va a significar menos equilibrio de rbol y ms espacio perdido el b tree es una de las variantes ms populares de b trees el b tree es una mejora sobre b tree que requiere todas las claves para residir en las hojas indexacin de rboles t la estructura de datos de un rbol t fue diseada combinando caractersticas de avl trees y b trees rbol y b un rbol avl es un tipo de auto equilibrio binario de rboles de bsqueda mientras que un rbol b es ms desequilibrado y cada nodo puede tener un nmero diferente de hijos en un rbol t la estructura es muy similar a los rboles b y avl cada nodo almacena ms de una tupla value adems la bsqueda binaria se utiliza en combinacin con los nodos de mltiples tuplas para producir un mejor almacenamiento y rendimiento un rbol t tiene tres tipos de nodos un t node que tiene un hijo derecho e izquierdo un nodo de hoja sin hijos y un nodo de media hoja con un solo hijo se cree que los rboles t tienen un mejor rendimiento general que los rboles avl indexacin de rboles el rbol es bsicamente una mejora sobre los rboles rojo negro una forma de un rbol binary search en el que los nodos hoja contienen el valor value el rbol se propuso para mejorar el rendimiento de los actuales mtodos de indexacin un rbol de de orden m donde m es el grado mnimo del rbol satisface las siguientes propiedades cada nodo es rojo o negro pero la raz es siempre negra si un nodo es rojo entonces sus dos hijos son negros para cada nodo interno todas las rutas simples desde el nodo hasta los nodos hoja descendientes contienen el mismo nmero de nodos negros cada nodo interno tiene un nico valor de clave los nodos de hoja son bloques que tienen entre m 2 y m pares key value record si un rbol tiene un nico nodo entonces debe ser una hoja que es la raz del rbol y puede tener entre 1 a m elementos de datos clave los nodos de hoja pueden ir hacia adelante y hacia atrs aqu vemos una comparacin directa de rendimiento entre rboles el orden del t tree b tree y el tree utilizado fue m 512 el tiempo se registra para las operaciones de bsqueda insercin y supresin con relaciones de actualizacin que varan entre para un ndice de registros con las operaciones que resultan en la adicin de otros registros al ndice est claro que con una proporcin de actualizacin de 0 b tree y t tree tienen mejores resultados que tree sin embargo con la proporcin de actualizacin aumentado el ndice de tree funciona significativamente mejor que otras estructuras de datos cul es el caso para nosql las bases de datos relacionales ofrecen consistencia no estn optimizadas para un alto rendimiento en aplicaciones en las que se almacenan y procesan datos masivos con las bases de datos nosql ganaron mucha popularidad debido a su alto rendimiento alta escalabilidad y facilidad de acceso sin embargo todava carecen de las caractersticas que proporcionan consistencia y confiabilidad afortunadamente una serie de dbms nosql abordan estos retos ofreciendo nuevas caractersticas para mejorar la escalabilidad y la fiabilidad no todos los sistemas de base de datos nosql funcionan mejor que las bases de datos relacionales mongodb y cassandra tienen un rendimiento similar y en muchos casos mejor que en las bases de datos relacionales en operaciones de escritura y eliminacin no hay correlacin directa entre el tipo de almacenamiento y rendimiento de un dbms nosql las implementaciones de nosql experimentan cambios por lo que el rendimiento puede variar por lo tanto las mediciones de rendimiento a travs de tipos de base de datos en diferentes estudios siempre deben actualizarse con las ltimas versiones del software de la base de datos para que estos nmeros sean exactos aunque no podemos ofrecer un veredicto definitivo sobre su rendimiento he aqu algunos puntos a tener en cuenta la indexacin tradicional de rbol b y rbol t se utiliza comnmente en bases de datos tradicionales un estudio ofreci mejoras mediante la combinacin de las caractersticas de mltiples estructuras de indexacin para llegar al rbol el rbol super a otras estructuras en la mayora de las pruebas especialmente con enormes conjuntos de datos y con altas proporciones de actualizacin la estructura rbol b present el peor desempeo de todas las estructuras de indexacin cubiertas en este artculo se puede y se debe hacer ms trabajo para mejorar la consistencia de los dbmss nosql la integracin de ambos sistemas nosql y bases de datos relacionales es un rea que debera ser explorada nosql comercializa funciones de confiabilidad y consistencia para un rendimiento y proceso de escalabilidad extremo esto lo convierte en una solucin especializada ya que el nmero de aplicaciones que pueden depender de las bases de datos nosql sigue siendo limitado as aunque la especializacin puede ser poco flexible si queremos un trabajo especializado rpido y eficaz lo ms indicado va a ser nosql fuente toptal https www toptal com database the definitive guide to nosql databases autor original mohamad altarade 11 comments edgar vargas octubre 4 2017 at 2 51 pm interesante artculo sin embargo slo hay que corregir la traduccin de graph al espaol por grafo en este sentido lo que mencionas por base grfica debe ser base de datos orientada a grafos el concepto de graph proviene de una de las ramas de matemtica llamada investigacin operativa reply carla andres octubre 17 2017 at 1 22 pm hola edgar muchas gracias por tu aportacin reply fernando aguilar febrero 14 2018 at 9 18 pm al tener la parte del performance se tiene que las bd nosql tienen performance alto mientras que las sql se encuentran en bajo no en en bajo sera correcto decir que el performance de una bd nosql es 3 veces mejor que las sql saludos reply carla andres marzo 7 2018 at 12 48 pm hola fernando hay una diferencia en cuanto al rendimiento entre sql y no sql habra que hacer una comparacin real en base a tiempos s es verdad que las bbdd no sql son ms rpidas pero tambin tienen grandes desventajas tal y como ves en el artculo supongo que todo es relativo a ojos del usuario muchas gracias reply tomas marzo 5 2018 at 8 37 pm hola queria hacer una pregunta tengo un cliente que es una escuela y me pidio un sistema es recomendable usar nosql reply alucinadomehayo marzo 9 2018 at 2 05 pm pero un sistema para qu inventariado asistencia gestin presupuestaria reply carla andres marzo 9 2018 at 4 16 pm hola toms hola depende un poco de cada casa concreto mira las ventajas e inconvenientes y elige la opcin ms acorde a las necesidades de tu cliente si quieres velocidad antes que la seguridad usa nosql de lo contrario un sistema de base de datos relacional espero haberte ayudado muchas gracias reply marcelo abril 13 2018 at 11 43 am muy importante un almacn de columnas no es una base nosql pero un modelo de agregacin de columnas s que lo es en un almacn de columnas los datos se almacenan por columnas mientras que en una base nosql de columnas los datos se organizan por filas y columnas hay diferencia cuidado un saludo reply maria junio 12 2018 at 12 51 pm hola marcelo muchas gracias por tu aportacin un saludo reply segundo pantoja mayo 22 2018 at 4 21 am hola buenas noches tengo una duda me piden hacer un programa para manejar la base de datos de los trabajadores de una empresa y representarla como una hoja de vida cuando se consulte un trabajador cual base de datos me recomiendan usar reply maria junio 14 2018 at 11 00 am hola segundo pantoja gracias por tu comentario respecto a tu duda depende de tus necesidades las bases de datos relacionales son ms sencillas de gestionar pero no tienen una buena organizacin aunque son buenas para empezar en este mundillo ejemplo mariadb mysql oracle etc si quieres una estructuracin ms organizada del contenido es mejor que utilices una base de datos nosql como habrs visto en el artculo ya sabrs sus ventajas e inconvenientes ejemplo mongodb cassandra esperamos haberte servido de ayuda te recomendamos que te suscribas a la newsletter para estar al tanto de las novedades tanto de pandora fms como de otros contenidos del blog un saludo reply leave a reply cancel reply your email address will not be published required fields are marked comment name email website este sitio usa akismet para reducir el spam aprende cmo se procesan los datos de tus comentarios previous post monitorizacin ux pwr nuevas funciones de pandora fms next post topologia de red y monitorizacin distribuida recent posts how to fight computer stress agosto 27 2018 cmo luchar contra el estrs informtico agosto 27 2018 whats new in pandora fms 7 0 ng 726 agosto 24 2018 novedades pandora fms 7 0 ng 726 agosto 23 2018 several factors that can slow down your computer agosto 20 2018 algunas causas por las que un ordenador puede ir lento agosto 20 2018 is it possible to prevent software glitch agosto 17 2018 search newsletter subscribe to our pandora fms newsletter it will keep you informed about new releases plugins features and integrations we won t ever give your email to anybody else email please read our privacy policy here tags alternatives antivirus apache software foundation apis bam chat chatops ciberseguridad cloud communication docker swarm ehorus endpoint funcionalidades g data antivirus integration international data corporation malware mattermost monitorizacin mysql nagios negocio open networking foundation pandora pandora fms pandora fms pandora fms plugin productivity ransomware remote control remote management rmm sdn slack software defined network market sp sql teamviewer teamwork varnish cache vnc wannacry comunidad tecnologa tutorial algunas causas por las que un ordenador puede ir lento agosto 20 2018 by robin izquierdo comunidad geek compuserve y fidonet qu haba antes de internet agosto 13 2018 by robin izquierdo comunidad enterprise funcionalidades tecnologa pandorafms como alternativa a ibm tivoli netcool agosto 10 2018 by jimmy olano comunidad geek cmo se lo monta iron man para monitorizar sus trajes agosto 6 2018 by dimas pardo comunidad tecnologa beneficios de la monitorizacin para una empresa de soporte o una msp julio 23 2018 by robin izquierdo comunidad internet history from arpanet to the future julio 16 2018 by alberto dominguez comunidad 10 technology laws julio 9 2018 by alberto dominguez comunidad tecnologa sabes lo qu es la acs aqu una explicacin en profundidad julio 4 2018 by jimmy olano comunidad so s the future of internet 10 years from now julio 2 2018 by alberto dominguez comunidad 18 interesting computing facts junio 29 2018 by alberto dominguez comunidad how sdn change our vision on networks junio 28 2018 by alexander la rosa comunidad redes tecnologa cmo las redes definidas por software cambian nuestra visin sobre las redes junio 28 2018 by alexander la rosa this website uses cookies to improve your experience accept read more shares 