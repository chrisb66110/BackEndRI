 algoritmos geneticos alojamiento ofrecido por el grupo hispavista hispavista algoritmos geneticos indice 1 introduccion 1 1 antecedentes 1 2 definicion 1 3 problematica 1 4 ventajas y desventajas 1 5 limitaciones 1 6 como saber si es posible usar un algoritmo genetico 1 7 marco de desarrollo 1 8 comparacion con otros metodos de optimizacion 2 el algoritmo genetico simple 2 1 codificacion 2 2 ejemplo 3 extensiones y modificaciones del algoritmo genetico simple 3 1 poblacion 3 1 1 tamano de la poblacion 3 1 2 poblacion inicial 3 2 funcion objetivo 3 3 seleccion 3 4 cruce 3 5 mutacion 3 6 reduccion 3 7 algoritmos geneticos paralelos 4 logica borrosa y algoritmos geneticos 4 1 funciones borrosas 4 2 algoritmos geneticos basados en logica borrosa 5 ejemplos de aplicacion 5 1 ejemplo 1 5 2 ejemplo 2 6 conclusiones 7 referencias 1 introduccion 1 1 antecedentes el algoritmo genetico es una tecnica de busqueda basada en la teoria de la evolucion de darwin que ha cobrado tremenda popularidad en todo el mundo durante los ultimos anos se presentaran aqui los conceptos basicos que se requieren para abordarla asi como unos sencillos ejemplos que permitan a los lectores comprender como aplicarla al problema de su eleccion en los ultimos anos la comunidad cientifica internacional ha mostrado un creciente interes en una nueva tecnica de busqueda basada en la teoria de la evolucion y que se conoce como el algoritmo genetico esta tecnica se basa en los mecanismos de seleccion que utiliza la naturaleza de acuerdo a los cuales los individuos mas aptos de una poblacion son los que sobreviven al adaptarse mas facilmente a los cambios que se producen en su entorno hoy en dia se sabe que estos cambios se efectuan en los genes de un individuo basica de codificacion de cada uno de los atributos de un ser y que sus atributos mas deseables e los que le permiten adaptarse mejor a su se transmiten a sus descendientes cuando este se reproduce sexualmente un investigador de la universidad de michigan llamado john holland era consciente de la importancia de la seleccion natural y a fines de los desarrollo una tecnica que permitio incorporarla a un programa su objetivo era lograr que las computadoras aprendieran por si mismas a la tecnica que invento holland se le llamo originalmente pero se hizo popular bajo el nombre tras la publicacion de su libro en 1975 una definicion bastante completa de un algoritmo genetico es la propuesta por john koza un algoritmo matematico altamente paralelo que transforma un conjunto de objetos matematicos individuales con respecto al tiempo usando operaciones modeladas de acuerdo al principio darwiniano de reproduccion y supervivencia del mas apto y tras haberse presentado de forma natural una serie de operaciones geneticas de entre las que destaca la recombinacion sexual cada uno de estos objetos matematicos suele ser una cadena de caracteres o de longitud fija que se ajusta al modelo de las cadenas de cromosomas y se les asocia con una cierta funcion matematica que refleja su aptitud 1 2 definicion los algoritmos geneticos son metodos adaptativos que pueden usarse para resolver problemas de busqueda y optimizacion estan basados en el proceso genetico de los organismos vivos a lo largo de las generaciones las poblaciones evolucionan en la naturaleza de acorde con los principios de la seleccion natural y la supervivencia de los mas fuertes postulados por darwin por imitacion de este proceso los algoritmos geneticos son capaces de ir creando soluciones para problemas del mundo real la evolucion de dichas soluciones hacia valores optimos del problema depende en buena medida de una adecuada codificacion de las mismas un algoritmo genetico consiste en una funcion matematica o una rutina de software que toma como entradas a los ejemplares y retorna como salidas cuales de ellos deben generar descendencia para la nueva generacion versiones mas complejas de algoritmos geneticos generan un ciclo iterativo que directamente toma a la especie total de los y crea una nueva generacion que reemplaza a la antigua una cantidad de veces determinada por su propio diseno una de sus caracteristicas principales es la de ir perfeccionando su propia heuristica en el proceso de ejecucion por lo que no requiere largos periodos de entrenamiento especializado por parte del ser humano principal defecto de otros metodos para solucionar problemas como los sistemas expertos 1 3 problematica los principios basicos de los algoritmos geneticos fueron establecidos por holland y se encuentran bien descritos en varios textos goldberg davis michalewicz reeves en la naturaleza los individuos de una poblacion compiten entre si en la busqueda de recursos tales como comida agua y refugio incluso los miembros de una misma especie compiten a menudo en la busqueda de un companero aquellos individuos que tienen mas exito en sobrevivir y en atraer companeros tienen mayor probabilidad de generar un gran numero de descendientes por el contrario individuos poco dotados produciran un menor numero de descendientes esto significa que los genes de los individuos mejor adaptados se propagaran en sucesivas generaciones hacia un numero de individuos creciente la combinacion de buenas caracteristicas provenientes de diferentes ancestros puede a veces producir descendientes cuya adaptacion es mucho mayor que la de cualquiera de sus ancestros de esta manera las especies evolucionan logrando unas caracteristicas cada vez mejor adaptadas al entorno en el que viven los algoritmos geneticos usan una analogia directa con el comportamiento natural trabajan con una poblacion de individuos cada uno de los cuales representa una solucion factible a un problema dado a cada individuo se le asigna un valor o puntuacion relacionado con la bondad de dicha solucion en la naturaleza esto equivaldria al grado de efectividad de un organismo para competir por unos determinados recursos cuanto mayor sea la adaptacion de un individuo al problema mayor sera la probabilidad de que el mismo sea seleccionado para reproducirse cruzando su material genetico con otro individuo seleccionado de igual forma este cruce producira nuevos individuos descendientes de los anteriores los cuales comparten algunas de las caracteristicas de sus padres cuanto menor sea la adaptacion de un individuo menor sera la probabilidad de que dicho individuo sea seleccionado para la reproduccion y por tanto de que su material genetico se propague en sucesivas generaciones de esta manera se produce una nueva poblacion de posibles soluciones la cual reemplaza a la anterior y verifica la interesante propiedad de que contiene una mayor proporcion de buenas caracteristicas en comparacion con la poblacion anterior asi a lo largo de las generaciones las buenas caracteristicas se propagan a traves de la poblacion favoreciendo el cruce de los individuos mejor adaptados van siendo exploradas las areas mas prometedoras del espacio de busqueda si el algoritmo genetico ha sido bien disenado la poblacion convergera hacia una solucion optima del problema 1 4 ventajas y desventajas no necesitan conocimientos especificos sobre el problema que intentan resolver operan de forma simultanea con varias soluciones en vez de trabajar de forma secuencial como las tecnicas tradicionales cuando se usan para problemas de optimizacion maximizar una funcion objetivo resultan menos afectados por los maximos locales que las tecnicas tradicionales resulta sumamente facil ejecutarlos en las modernas arquitecturas masivamente paralelas usan operadores probabilisticos en vez de los tipicos operadores deterministicos de las otras tecnicas pueden tardar mucho en converger o no converger en absoluto dependiendo en cierta medida de los parametros que se utilicen tamano de la poblacion numero de generaciones etc pueden converger prematuramente debido a una serie de problemas de diversa indole 1 5 limitaciones el poder de los algoritmos geneticos proviene del hecho de que se trata de una tecnica robusta y pueden tratar con exito una gran variedad de problemas provenientes de diferentes areas incluyendo aquellos en los que otros metodos encuentran dificultades si bien no se garantiza que el algoritmo genetico encuentre la solucion optima del problema existe evidencia empirica de que se encuentran soluciones de un nivel aceptable en un tiempo competitivo con el resto de algoritmos de optimizacion combinatoria en el caso de que existan tecnicas especializadas para resolver un determinado problema lo mas probable es que superen al algoritmo genetico tanto en rapidez como en eficacia el gran campo de aplicacion de los algoritmos geneticos se relaciona con aquellos problemas para los cuales no existen tecnicas especializadas incluso en el caso en que dichas tecnicas existan y funcionen bien pueden efectuarse mejoras de las mismas hibridandolas con los algoritmos geneticos 1 6 como saber si es posible usar un algoritmo genetico la aplicacion mas comun de los algoritmos geneticos ha sido la solucion de problemas de optimizacion en donde han mostrado ser muy eficientes y confiables sin embargo no todos los problemas pudieran ser apropiados para la tecnica y se recomienda en general tomar en cuenta las siguientes caracteristicas del mismo antes de intentar usarla su espacio de busqueda e sus posibles debe estar delimitado dentro de un cierto rango debe poderse definir una funcion de aptitud que nos indique que tan buena o mala es una cierta respuesta las soluciones deben codificarse de una forma que resulte relativamente facil de implementar en la computadora el primer punto es muy importante y lo mas recomendable es intentar resolver problemas que tengan espacios de busqueda discretos aunque estos sean muy grandes sin embargo tambien podra intentarse usar la tecnica con espacios de busqueda continuos pero preferentemente cuando exista un rango de soluciones relativamente pequeno la funcion de aptitud no es mas que la funcion objetivo de nuestro problema de optimizacion el algoritmo genetico unicamente maximiza pero la minimizacion puede realizarse facilmente utilizando el reciproco de la funcion maximizante cuidarse por supuesto que el reciproco de la funcion no genere una division por una caracteristica que debe tener esta funcion es que tiene ser capaz de a las malas soluciones y de a las buenas de forma que sean estas ultimas las que se propaguen con mayor rapidez la codificacion mas comun de las soluciones es a traves de cadenas binarias aunque se han utilizado tambien numeros reales y letras el primero de estos esquemas ha gozado de mucha popularidad debido a que es el que propuso originalmente holland y ademas porque resulta muy sencillo de implementar 1 7 marco de desarrollo antes de continuar ahondando en la tecnica de los algoritmos geneticos seria interesante dejarla situada dentro de un marco mas amplio nos referimos a la rama de la inteligencia artificial que se ha denominado computacion evolutiva el termino computacion evolutiva se refiere al estudio de los fundamentos y aplicaciones de ciertas tecnicas heuristicas de busqueda basadas en los principios naturales de la evolucion una gran variedad de algoritmos evolutivos han sido propuestos pero principalmente pueden clasificarse en algoritmos geneticos programacion evolutiva estrategias evolutivas sistemas clasificadores y programacion genetica esta clasificacion se basa sobre todo en detalles de desarrollo historico mas que en el hecho de un funcionamiento realmente diferente de hecho las bases biologicas en las que se apoyan son esencialmente las mismas las diferencias entre ellos se centra en los operadores que se usan en cada caso y en general en la forma de implementar la seleccion reproduccion y sustitucion de individuos en una poblacion aunque los detalles de la evolucion no han sido completamente comprendidos incluso hoy en dia existen algunos puntos en los que se fundamentan la evolucion es un proceso que opera a nivel de cromosomas y no a nivel de individuos cada individuo es codificado como un conjunto de cromosomas la seleccion natural es el mecanismo mediante el cual los individuos mejor adaptados son los que tienen mayores posibilidades de reproducirse el proceso evolutivo tiene lugar en la etapa de la reproduccion es en esta etapa donde se producen la mutacion que es la causante de que los cromosomas de los hijos puedan ser diferentes a los de los padres y el cruce que combina los cromosomas de los padres para que los hijos tengan cromosomas diferentes de forma breve pasamos a comentar cada una de los algoritmos mencionados anteriormente para que el lector pueda tener una idea de las similitudes y diferencias entre ellos los algoritmos geneticos resuelven los problemas generando poblaciones sucesivas a las que se aplican los operadores de mutacion y cruce cada individuo representa una solucion al problema y se trata de encontrar al individuo que represente a la mejor solucion la programacion genetica funciona igual que la tecnica anterior pero se centra en el estudio de problemas cuya solucion es un programa de manera que los individuos de la poblacion son programas que se acercan mas o menos a realizar una tarea que es la solucion la programacion evolutiva es otro enfoque de los algoritmos geneticos en este caso el estudio se centra en conseguir operadores geneticos que imiten lo mejor posible a la naturaleza en cada caso mas que en la relacion de los padres con su descendencia en este caso no se utiliza el operador de cruce tomando la maxima importancia el operador de mutacion estrategias evolutivas se centran en el estudio de problemas de optimizacion e incluyen una vision del aprendizaje en dos niveles a nivel de genotipo y a nivel de fenotipo y por ultimo los sistemas clasificadores engloban el estudio de problemas en los que la solucion buscada se corresponde con toda una poblacion para finalizar se muestra un esquema en el que se situan las tecnicas mencionadas con respecto a otros procedimientos de busqueda conocidos 1 8 comparacion con otros metodos de optimizacion algoritmos geneticos y matematicos existen problemas de optimizacion que pueden ser resueltos por la implementacion de un algoritmo tradicional en este caso lo mas conveniente es utilizarlo por ejemplo si tenemos la funcion el doble esta puede ser interpretada como ecuacion 1 esto tambien es valido para funciones booleanas un valor de verdadero o falso por ejemplo la funcion mayor puede ser interpretada como ecuacion 2 para resolver un problema que requiera como solucion saber solamente cual numero es mas grande resulta mas eficaz utilizar el algoritmo matematico directamente sin embargo estos no son aplicables a problemas que posean algunas de estas caracteristicas la funcion representativa del problema no es continua en este caso el mismo no es computable los algoritmos geneticos pueden trabajar con todo tipo de funciones ya que encontraran un minimo aceptable si no es posible encontrar el optimo la funcion representativa es dinamica la relacion entre las variable cambia dependiendo de los valores que tomen las mismas esta relacion puede ser advertida o no las reglas del tipo es igual a y si el valor de x es chico x es 1 5 de y si el valor de x es grande no se sabe que pasa para valores medios de no pueden ser convertidas en un algoritmo algebraico ya que existen valores que se desconocen a diferencia de un algoritmo tradicional un algoritmo genetico puede ser disenado para trabajar bajo estas condiciones algoritmos geneticos y metodos enumerativos existe la posibilidad teorica de encontrar soluciones a problemas a optimizacion enumerando todas las soluciones posibles para todos los casos y posteriormente buscando la misma en la base de datos resultante los problemas se limitan entonces a un sistema de busqueda eficiente del caso concreto por ejemplo los libros con tablas de logaritmos tradicionales constan de una larga serie de calculos para todos los valores usuales la solucion consiste simplemente en buscar en la lista el numero decimal y retornar el logaritmo dado la memorizacion de las tablas de multiplicar que se ensenan a los ninos es otro ejemplo usual se espera que ante la pregunta cuanto es siete por cinco los ninos respondan instantaneamente sin tener que estar calculando mentalmente la multiplicacion este metodo es factible siempre que el numero de valores sea manejable de otra manera el simple calculo de los mismos se vuelve imposible ejemplo generar una tabla que contenga todas las movidas de todos los partidos posibles de un juego de damas resultaria imposible de hacer en la practica la memorizacion de una serie de datos no es otra cosa que la construccion en la memoria del equivalente a una base de datos en donde se busca la pregunta y se encuentra automaticamente la respuesta los algoritmos geneticos usan heuristica para la resolucion de problemas lo cual limita drasticamente el numero de datos a utilizar algoritmos geneticos y sistemas expertos un sistema experto es un programa de computadora que encuentra soluciones a problemas del tipo condicional con la estructura si ocurren los hechos a b c d cual seria el valor del suceso e ejemplo si un analisis medico detecta los sintomas a b c y d en un paciente cual sera la enfermedad del sujeto ejemplo si el analisis geologico de una capa de suelo detecta la presencia de los compuestos quimicos a b c y d es factible que exista petroleo en la misma si bien existen en la literatura ejemplos de la utilidad de esta tecnica las reglas deben ser provistas por un especialista o varios en el tema por ende se requiere que los conocimientos esten disponibles que sean estructurados o factibles de ser estructurados convertidos a reglas heuristicas y que los hechos de la realidad sean relativamente estaticos es decir que las causas para arribar a una determinada conclusion no cambien ya que cada vez que esto sucede los expertos deben reelaborrar las reglas lo cual dificulta y retarda considerablemente la operatoria del sistema las condiciones basicas necesarias para la implementacion efectiva de un sistema experto pueden observarse en el cuadro los sistemas expertos tuvieron su apogeo en la decada de los 80 s aproximadamente de 1979 a 1985 en esa epoca se los llego a considerar verdaderas panaceas que resolverian muchos de los problemas cotidianos del hombre incluso se formaron en ese entonces varias companias con el objeto especifico de realizarlos y comercializarlos algunos fueron exitosos y funcionaron bien pero las dificultades planteadas anteriormente no tardaron en aparecer en particular existen temas en los cuales el conocimiento no es estatico sino que la aparicion de nueva informacion altera las pautas o reglas de inferencia de los resultados la necesidad permanentes de reevaluar las reglas por medio de expertos humanos lleva al sistema a una operatoria lenta y burocratica cada conocimiento nuevo implica reentrenar manualmente el sistema los sistemas expertos demostraron no ser utiles en este campo existen temas en los cuales la interrelacion de ciertas variables no es conocida si la informacion disponible de cierto asunto es limitada y no se conoce el comportamiento de algunas de sus variables el sistema experto tendra grandes dificultades de programarse ya que sus reglas seran imprecisas el cuadro muestra las condiciones basicas necesarias para la implementacion efectiva de un sistema experto condiciones basicas necesarias para la implementacion efectiva de un sistema experto los expertos no siempre estructuran su conocimiento existen numerosas personas que razonan por metodos empiricos esto hace que les resulte muy dificil traducir sus pensamientos o su metodo deductivo a reglas que la computadora pueda interpretar un sistema experto no podra llegar a resultados valederos cuando los especialistas en un tema no puedan tener estructurados sus pensamientos por ejemplo supongase que se quiera programar un sistema experto para calificar obras de arte dificilmente se encontrara un critico de arte que pueda estructurar las razones por las cuales considera o a una obra de arte en general las palabras que pueda decir resultaran a los oidos del programador del sistema como una serie de subjetividades imposibles de sistematizar luego de observar todo esto se empezo a considerar a los sistemas expertos como aptos solamente para entornos reducidos y con condiciones de ejecucion acotadas la idea del sistema experto como resolvedor universal de problemas quedo sepultada si bien la investigacion basica de los algoritmos geneticos es contemporanea a la de los sistemas expertos la renovada importancia que se les dio en el ambito cientifico se produjo en paralelo a la desvalorizacion que sufrieron estos ultimos los algoritmos geneticos se revalorizaron ya que poseen las siguientes ventajas competitivas solo necesitan asesoramiento del experto cuando se agregan o suprimen variables al modelo los sistemas expertos requieren la presencia del mismo ante cada modificacion del entorno los algoritmos geneticos solo requieren el asesoramiento del experto para identificar las variables pertinentes aunque no es necesario que estos definan sus valores ni sus relaciones iniciales o finales los sistemas expertos solo trabajan con las reglas y valores que les dictan los seres humanos algoritmos geneticos y redes neuronales una red neuronal es el intento de poder realizar una simulacion computacional del comportamiento de partes del cerebro humano mediante la replica en pequena escala de los patrones que este desempena para la formacion de resultados a partir de los sucesos percibidos el cerebro consta de unidades llamadas neuronas las cuales estan conectadas entre si formando una red ahi la denominacion red neuronal concretamente se trata de poder analizar y reproducir el mecanismo de aprendizaje de sucesos que poseen los animales mas evolucionados la red simula grupos de neuronas llamados capas las cuales estan relacionadas unas con otras los datos se introducen en la primera capa llamada de cada capa transfiere la informacion a sus vecinas teniendo un peso o ponderacion para los valores lo que va modificando los mismos en su paso a traves de la red cuando los datos llegan a la ultima de las capas llamada capa de salida el valor resultante es tomado como el resultado de la red la red puede ser entrenada para diversos usos entre ellos como mecanismo de optimizacion en este sentido se puede expresar que serian un modelo alternativo competitivo con los algoritmos geneticos si se las programara para este fin en rigor de verdades la literatura sugiere que se podrian hacer modelos mixtos o hibridos en donde se combinen las ventajas de las redes neuronales y los algoritmos geneticos aunque hay muy poco material disponible en este campo tal vez esto se deba al hecho que los ga y el estudio de las redes forman dos ramas o escuelas separadas dentro de la inteligencia artificial por lo que existe una preferencia en los investigadores en perfeccionar alguno de los dos modelos antes que tratar de unirlos el algoritmo genetico simple el algoritmo genetico simple tambien denominado canonico se representa en la figura 1 como se vera a continuacion se necesita una codificacion o representacion del problema que resulte adecuada al mismo ademas se requiere una funcion de ajuste o adaptacion al problema la cual asigna un numero real a cada posible solucion codificada durante la ejecucion del algoritmo los padres deben ser seleccionados para la reproduccion a continuacion dichos padres seleccionados se cruzaran generando dos hijos sobre cada uno de los cuales actuara un operador de mutacion el resultado de la combinacion de las anteriores funciones sera un conjunto de individuos soluciones al los cuales en la evolucion del algoritmo genetico formaran parte de la siguiente poblacion figura 1 2 1 codificacion se supone que los individuos soluciones del pueden representarse como un conjunto de parametros denominaremos los cuales agrupados forman una ristra de valores menudo referida como si bien el alfabeto utilizado para representar los individuos no debe necesariamente estar constituido por el buena parte de la teoria en la que se fundamentan los algoritmos geneticos utiliza dicho alfabeto en terminos biologicos el conjunto de parametros representando un cromosoma particular se denomina fenotipo el fenotipo contiene la informacion requerida para construir un organismo el cual se refiere como genotipo los mismos terminos se utilizan en el campo de los algoritmos geneticos la adaptacion al problema de un individuo depende de la evaluacion del genotipo esta ultima puede inferirse a partir del fenotipo es decir puede ser computada a partir del cromosoma usando la funcion de evaluacion la funcion de adaptacion debe ser disenada para cada problema de manera especifica dado un cromosoma particular la funcion de adaptacion le asigna un numero real que se supone refleja el nivel de adaptacion al problema del individuo representado por el cromosoma durante la fase reproductiva se seleccionan los individuos de la poblacion para cruzarse y producir descendientes que constituiran una vez mutados la siguiente generacion de individuos la seleccion de padres se efectua al azar usando un procedimiento que favorezca a los individuos mejor adaptados ya que a cada individuo se le asigna una probabilidad de ser seleccionado que es proporcional a su funcion de adaptacion este procedimiento se dice que esta basado en la ruleta sesgada segun dicho esquema los individuos bien adaptados se escogeran probablemente varias veces por generacion mientras que los pobremente adaptados al problema no se escogeran mas que de vez en cuando una vez seleccionados dos padres sus cromosomas se combinan utilizando habitualmente los operadores de cruce y mutacion las formas basicas de dichos operadores se describen a continuacion el operador de cruce coge dos padres seleccionados y corta sus ristras de cromosomas en una posicion escogida al azar para producir dos subristras iniciales y dos subristras finales despues se intercambian las subristras finales produciendose dos nuevos cromosomas completos la figura ambos descendientes heredan genes de cada uno de los padres este operador se conoce como operador de cruce basado en un punto habitualmente el operador de cruce no se aplica a todos los pares de individuos que han figura 2 sido seleccionados para emparejarse sino que se aplica de manera aleatoria normalmente con una probabilidad comprendida entre 0 5 y 1 0 en el caso en que el operador de cruce no se aplique la descendencia se obtiene simplemente duplicando los padres el operador de mutacion se aplica a cada hijo de manera individual y consiste en la alteracion aleatoria con probabilidad de cada gen componente del cromosoma la figura 3 muestra la mutacion del quinto gen del cromosoma si bien figura 3 puede en principio pensarse que el operador de cruce es mas importante que el operador de mutacion ya que proporciona una exploracion rapida del espacio de busqueda este ultimo asegura que ningun punto del espacio de busqueda tenga probabilidad cero de ser examinado y es de capital importancia para asegurar la convergencia de los algoritmos geneticos para criterios practicos es muy util la definicion de convergencia introducida en este campo por de jong en su tesis doctoral si el algoritmo genetico ha sido correctamente implementado la poblacion evolucionara a lo largo de las generaciones sucesivas de tal manera que la adaptacion media extendida a todos los individuos de la poblacion asi como la adaptacion del mejor individuo se iran incrementando hacia el optimo global el concepto de convergencia esta relacionado con la progresion hacia la uniformidad un gen ha convergido cuando al menos el 95 de los individuos de la poblacion comparten el mismo valor para dicho gen se dice que la poblacion converge cuando todos los genes han convergido se puede generalizar dicha definicion al caso en que al menos un poco de los individuos de la poblacion hayan convergido la figura 4 muestra como varia la adaptacion media y la mejor adaptacion en un algoritmo genetico simple tipico figura 4 a medida que el numero de generaciones aumenta es mas probable que la adaptacion media se aproxime a la del mejor individuo 2 2 ejemplo como ilustracion de los diferentes componentes del algoritmo genetico simple supongamos el problema adaptado de goldberg de encontrar el maximo de la funcion x 2 sobre los enteros 2 evidentemente para lograr dicho optimo bastaria actuar por busqueda exhaustiva dada la baja cardinalidad del espacio de busqueda se trata por tanto de un mero ejemplo con el que pretendemos ilustrar el comportamiento del algoritmo anteriormente descrito consultando el pseudocodigo de la figura 1 vemos que el primer paso a efectuar consiste en determinar el tamano de la poblacion inicial para a continuacion obtener dicha poblacion al azar y computar la funcion de evaluacion de cada uno de sus individuos suponiendo que el alfabeto utilizado para codificar los individuos este constituido por necesitaremos ristras de longitud 5 para representar los 32 puntos del espacio de busqueda en la tabla 1 hemos representado los 4 individuos que constituyen la poblacion inicial junto con su funcion de adaptacion al problema asi como la probabilidad de que cada uno de dichos individuos sea seleccionado segun el modelo de ruleta sesgada para emparejarse volviendo a consultar el pseudocodigo expresado en la figura 1 vemos que el siguiente paso consiste en la seleccion de 2 parejas de individuos para ello es suficiente con obtener 4 numeros reales provenientes de una distribucion de probabilidad uniforme en el intervalo tabla 1 tabla 2 y compararlos con la ultima columna de la tabla l asi por ejemplo supongamos que dichos 4 numeros hayan sido 0 58 0 84 0 11 y 0 43 esto significa que los individuos seleccionados para el cruce han sido el individuo 2 junto con el individuo 4 asi como el individuo 1 junto con el individuo 2 para seguir con el algoritmo genetico simple necesitamos determinar la probabilidad de cruce p supongamos que se fije en p 0 8 valiendonos al igual que antes de 2 en este caso numeros provenientes de la distribucion uniforme determinaremos si los emparejamientos anteriores se llevan a cabo admitamos por ejemplo que los dos numeros extraidos sean menores que 0 8 decidiendose por tanto efectuar el cruce entre las dos parejas para ello escogeremos un numero al azar entre l y 1 1 l la longitud de la ristra utilizada para representar el notese que la restriccion impuesta al escoger el numero entre 1 y l l y no l se realiza con la finalidad de que los descendientes no coincidan con los padres supongamos tal y como se indica en la tabla 2 que los puntos de cruce resulten ser 2 y 3 de esta manera obtendriamos los 4 descendientes descritos en la tercera columna de la tabla 2 a continuacion siguiendo el pseudocodigo de la figura 1 mutariamos con una probabilidad p cercana a cero cada uno de los bit de las cuatro ristras de individuos en este caso suponemos que el unico bit mutado corresponde al primer gen del tercer individuo en las dos ultimas columnas se pueden consultar los valores de los individuos asi como las funciones de adaptacion correspondientes como puede observarse tanto el mejor individuo como la funcion de adaptacion media han mejorado sustancialmente al compararlos con los resultados de la tabla 1 extensiones y modificaciones del algoritmo genetico simple en este apartado se introduciran algunas extensiones y modificaciones del algoritmo genetico simple se comenzara dando un pseudocodigo para un algoritmo genetico abstracto para a continuacion introducir algunas variantes que se han ido proponiendo en trabajos desarrollados en estos ultimos anos figura 5 3 1 poblacion 3 1 1 tamano de la poblacion una cuestion que uno puede plantearse es la relacionada con el tamano idoneo de la poblacion parece intuitivo que las poblaciones pequenas corren el riesgo de no cubrir adecuadamente el espacio de busqueda mientras que el trabajar con poblaciones de gran tamano puede acarrear problemas relacionados con el excesivo costo computacional goldberg efectuo un estudio teorico obteniendo como conclusion que el tamano optimo de la poblacion para ristras de longitud i con codificacion binaria crece exponencialmente con el tamano de la ristra este resultado traeria como consecuencia que la aplicabilidad de los algoritmos geneticos en problemas reales seria muy limitada ya que resultarian no competitivos con otros metodos de optimizacion combinatoria alander basandose en evidencia empirica sugiere que un tamano de poblacion comprendida entre l y 21 es suficiente para atacar con exito los problemas por el considerados 3 1 2 poblacion inicial habitualmente la poblacion inicial se escoge generando ristras al azar pudiendo contener cada gen uno de los posibles valores del alfabeto con probabilidad uniforme nos podriamos preguntar que es lo que sucederia si los individuos de la poblacion inicial se obtuviesen como resultado de alguna tecnica heuristica o de optimizacion local en los pocos trabajos que existen sobre este aspecto se constata que esta inicializacion no aleatoria de la poblacion inicial puede acelerar la convergencia del algoritmo genetico sin embargo en algunos casos la desventaja resulta ser la prematura convergencia del algoritmo queriendo indicar con esto la convergencia hacia optimos locales 3 2 funcion objetivo dos aspectos que resultan cruciales en el comportamiento de los algoritmos geneticos son la determinacion de una adecuada funcion de adaptacion o funcion objetivo asi como la codificacion utilizada idealmente nos interesaria construir funciones objetivo con es decir funciones objetivo que verifiquen que para dos individuos que se encuentren cercanos en el espacio de busqueda sus respectivos valores en las funciones objetivo sean similares por otra parte una dificultad en el comportamiento del algoritmo genetico puede ser la existencia de gran cantidad de optimos locales asi como el hecho de que el optimo global se encuentre muy aislado la regla general para construir una buena funcion objetivo es que esta debe reflejar el valor del individuo de una manera pero en muchos problemas de optimizacion combinatoria donde existe gran cantidad de restricciones buena parte de los puntos del espacio de busqueda representan individuos no validos para este planteamiento en el que los individuos estan sometidos a restricciones se han propuesto varias soluciones la primera seria la que podriamos denominar absolutista en la que aquellos individuos que no verifican las restricciones no son considerados como tales y se siguen efectuando cruces y mutaciones hasta obtener individuos validos o bien a dichos individuos se les asigna una funcion objetivo igual a cero otra posibilidad consiste en reconstruir aquellos individuos que no verifican las restricciones dicha reconstruccion suele llevarse a cabo por medio de un nuevo operador que se acostumbra a denominar reparador otro enfoque esta basado en la penalizacion de la funcion objetivo la idea general consiste en dividir la funcion objetivo del individuo por una cantidad que guarda relacion con las restricciones que dicho individuo viola dicha cantidad puede simplemente tener en cuenta el numero de restricciones violadas o bien el denominado costo esperado de reconstruccion es decir el coste asociado a la conversion de dicho individuo en otro que no viole ninguna restriccion otra tecnica que se ha venido utilizando en el caso en que la computacion de la funcion objetivo sea muy compleja es la denominada evaluacion aproximada de la funcion objetivo en algunos casos la obtencion de n funciones objetivo aproximadas puede resultar mejor que la evaluacion exacta de una unica funcion objetivo el caso de que la evaluacion aproximada resulta como minimo n veces mas rapida que la evaluacion un problema habitual en las ejecuciones de los algoritmos geneticos surge debido a la velocidad con la que el algoritmo converge en algunos casos la convergencia es muy rapida lo que suele denominarse convergencia prematura en la cual el algoritmo converge hacia optimos locales mientras que en otros casos el problema es justo el contrario es decir se produce una convergencia lenta del algoritmo una posible solucion a estos problemas pasa por efectuar transformaciones en la funcion objetivo el problema de la convergencia prematura surge a menudo cuando la seleccion de individuos se realiza de manera proporcional a su funcion objetivo en tal caso pueden existir individuos con una adaptacion al problema muy superior al resto que a medida que avanza el algoritmo a la poblacion por medio de una transformacion de la funcion objetivo en este caso una comprension del rango de variacion de la funcion objetivo se pretende que dichos no lleguen a dominar a la poblacion el problema de la lenta convergencia del algoritmo se resolveria de manera analoga pero en este caso efectuando una expansion del rango de la funcion objetivo la idea de especies de organismos ha sido imitada en el diseno de los algoritmos geneticos en un metodo propuesto por goldberg y richardson utilizando una modificacion de la funcion objetivo de cada individuo de tal manera que individuos que esten muy cercanos entre si devaluen su funcion objetivo con objeto de que la poblacion gane en diversidad funcion 3 3 seleccion la funcion de seleccion de padres mas utilizada es la denominada funcion de seleccion proporcional a la funcion objetivo en la cual cada individuo tiene una probabilidad de ser seleccionado como padre que es proporcional al valor de su funcion objetivo denotando por super prop sub j la probabilidad de que el individuo super j sub sea seleccionado como padre se tiene que funcion esta funcion de seleccion es invariante ante un cambio de escala pero no ante una traslacion una de las maneras de superar el problema relacionado con la rapida convergencia proveniente de los superindividuos que surge al aplicar la anterior funcion de seleccion es el efectuar la seleccion proporcional al rango del individuo con lo cual se produce una reparticion mas uniforme de la probabilidad de seleccion tal y como se ilustra en la figura 6 si denotamos por super j sub el rango de la funcion objetivo del individuo super j sub cuando figura 6 los individuos de la poblacion han sido ordenados de menor a mayor decir el peor individuo tiene rango 1 mientras que el individuo con mejor funcion objetivo tiene rango y sea super rango sub j la probabilidad de que el individuo super j sub sea seleccionado como padre cuando la seleccion se efectua proporcionalmente al rango del individuo se tiene que funcion la suma de los rangos 2 constituye la constante de normalizacion la funcion de seleccion basada en el rango es invariante frente a la translacion y al cambio de escala otro posible refinamiento del modelo de seleccion proporcional es el modelo de seleccion del valor esperado el cual actua de la manera siguiente para cada individuo if se introduce un contador inicialiazado en super j sub gt donde gt denota la media de a funcion objetivo en la generacion t cada vez que el individuo super j sub es seleccionado para el cruce dicho contador decrece en una cantidad c pertenece a 5 el individuo en cuestion dejara de poder ser seleccionado en esa generacion cuando su contador sea negativo un esquema de seleccion introducido por brindle y que empiricamente ha proporcionado buenos resultados es el denominado muestreo estocastico con reemplazamiento del resto en el cual cada individuo es seleccionado un numero de veces que coincide con la parte entera del numero esperado de ocurrencias de dicho suceso compitiendo los individuos por los restos es decir si denotamos por super j sub el numero de veces que el individuo super j sub es seleccionado para el cruce tenemos que funcion baker introduce un metodo denominado muestreo universal estocastico el cual utiliza un unico giro de la ruleta siendo los sectores circulares proporcionales a la funcion objetivo los individuos son seleccionados a partir de marcadores figura igualmente espaciados y con comienzo aleatorio efectuando un paralelismo con los metodos de muestreo estadisticos este ultimo tipo figura 7 de seleccion de padres se relaciona con el muestreo sistematico mientras que la seleccion proporcional a la funcion objetivo esta basada en el muestreo estratificado con fijacion proporcional al tamano tambien el procedimiento de seleccion que hemos denominado muestreo estocastico con reemplazamiento del resto mantiene un paralelismo con el muestreo estratificado con fijacion de compromiso en el modelo de seleccion elitista se fuerza a que el mejor individuo de la poblacion en el tiempo t sea seleccionado como padre la seleccion por torneo constituye un procedimiento de seleccion de padres muy extendido y en el cual la idea consiste en escoger al azar un numero de individuos de la poblacion tamano del torneo o sin seleccionar el mejor individuo de este grupo y repetir el proceso hasta que el numero de individuos seleccionados coincida con el tamano de la poblacion habitualmente el tamano del torneo es 2 y en tal caso se ha utilizado una version probabilistica en la cual se permite la seleccion de individuos sin que necesariamente sean los mejores una posible clasificacion de procedimientos de seleccion de padres consistira en metodos de seleccion dinamicos en los cuales las probabilidades de seleccion varian de generacion a generacion ejemplo la seleccion proporcional a la funcion frente a metodos de seleccion estaticos en los cuales dichas probabilidades permanecen constantes ejemplo la seleccion basada en si se asegura que todos los individuos tienen asignada una probabilidad de seleccion distinta de cero el metodo de seleccion se denomina preservativo en caso contrario se acostumbra a denominarlo extintivo 3 4 cruce el algoritmo genetico canonico descrito anteriormente utiliza el cruce basado en un punto en el cual los dos individuos seleccionados para jugar el papel de padres son recombinados por medio de la seleccion de un punto de corte para posteriormente intercambiar las secciones que se encuentran a la derecha de dicho punto se han investigado otros operadores de cruce habitualmente teniendo en cuenta mas de un punto de cruce de jong investigo el comportamiento del operador de cruce basado en multiples puntos concluyendo que el cruce basado en dos puntos representaba una mejora mientras que anadir mas puntos de cruce no beneficiaba el comportamiento del algoritmo la ventaja de tener mas de un punto de cruce radica en que el espacio de busqueda puede ser explorado mas facilmente siendo la principal desventaja el hecho de aumentar la probabilidad de ruptura de buenos esquemas en el operador de cruce basado en dos puntos los cromosomas pueden contemplarse como un circuito en el cual se efectua la seleccion aleatoria de dos puntos tal y como se indica en la figura 8 figura 8 desde este punto de vista el cruce basado en un punto puede verse como un caso particular del cruce basado en dos puntos en el cual uno de los puntos de corte se encuentra fijo al comienzo de la ristra que representa al individuo vease figura 9 en el denominado operador de cruce uniforme cada gen en la descendencia se crea copiando el correspondiente gen de uno de los dos padres escogido de acuerdo a una de generada aleatoriamente cuando existe un l en la de el gen es copiado del primer padre mientras que cuando exista un 0 en la figura 9 de el gen se copia del segundo padre tal y como se muestra en la figura 10 en la literatura el termino operador de cruce uniforme se relaciona con la obtencion figura 10 de la de uniforme en el sentido de que cualquiera de los elementos del alfabeto tenga asociada la misma probabilidad hablando en terminos de la teoria de la probabilidad la mascara de cruce esta compuesta por una muestra aleatoria de tamano a extraida de una distribucion de probabilidad de bernouilli de parametro l 2 si tuviesemos en cuenta el valor de la funcion de adaptacion de cada padre en el momento de generar la de de tal manera que cuanto mayor sea la funcion de adaptacion de un individuo mas probable sea heredar sus caracteristicas podriamos definir vease larranaga y poza un operador de cruce basado en la funcion objetivo en el cual la de se interpreta como una muestra aleatoria de tamano l proveniente de una distribucion de bernouilli de parametro funcion donde super j sub y i sub denotan los padres seleccionados para ser cruzados el concepto de de puede tambien servir para representar los cruces basados en un punto y basados en multiples puntos tal y como se muestra en figura 11 sirag y weiser modifican el operador de cruce en el sentido del simulated annealing de esta manera el operador de cruce se modifica definiendo un umbral de energia h y una temperatura t las cuales influencian la manera en la que se escogen los bits individuales segun el operador propuesto el bit esimo se tomara del padre opuesto al que se ha tomado el bit i esimo con probabilidad sub donde t es el parametro el cual al igual que en simulated annealing decrecera lentamente por medio de un programa de enfriamiento con altas temperaturas el comportamiento se asemeja al del operador de cruce uniforme es decir con probabilidad cercana a la unidad los bits se van escogiendo alternativamente de cada padre por otra parte cuando el valor figura 11 del parametro temperatura se acerca a cero el hijo coincide practicamente con uno de los padres existen otros operadores de cruce especificos para un determinado problema como son por ejemplo los definidos para el problema del agente de comercio por otra parte la idea de que el cruce deberia de ser mas probable en algunas posiciones ha sido descrita por varios autores y morishima holland davis 3 5 mutacion la mutacion se considera un operador basico que proporciona un pequeno elemento de aleatoriedad en la vecindad de los individuos de la poblacion si bien se admite que el operador de cruce es el responsable de efectuar la busqueda a lo largo del espacio de posibles soluciones tambien parece desprenderse de los experimentos efectuados por varios investigadores que el operador de mutacion va ganando en importancia a medida que la poblacion de individuos va convergiendo schaffer y col encuentran que el efecto del cruce en la busqueda es inferior al que previamente se esperaba utilizan la denominada evolucion primitiva en la cual el proceso evolutivo consta tan solo de seleccion y mutacion encuentran que dicha evolucion primitiva supera con creces a una evolucion basada exclusivamente en la seleccion y el cruce otra conclusion de su trabajo es que la determinacion del valor optimo de la probabilidad de mutacion es mucho mas crucial que el relativo a la probabilidad de cruce la busqueda del valor optimo para la probabilidad de mutacion es una cuestion que ha sido motivo de varios trabajos asi de jong recomienda la utilizacion de una probabilidad de mutacion del bit de super siendo l la longitud del string schaffer y col utilizan resultados experimentales para estimar la tasa optima proporcional a l super 0 super 0 donde lambda denota el numero de individuos en la poblacion si bien en la mayoria de las implementaciones de algoritmos geneticos se asume que tanto la probabilidad de cruce como la de mutacion permanecen constantes algunos autores han obtenido mejores resultados experimentales modificando la probabilidad de mutacion a medida que aumenta el numero de iteraciones pueden consultarse los trabajos de ackley bramlette fogarty y michalewicz y janikow 3 6 reduccion una vez obtenidos los individuos descendientes de una determinada poblacion en el tiempo t el proceso de reduccion al tamano original consiste en escoger lambda individuos de entre los lambda individuos que forman parte de la poblacion en el tiempo t y los lambda individuos descendientes de los mismos dicho proceso se suele hacer fundamentalmente de dos formas distintas o bien los lambda individuos descendientes son los que forman parte de la poblacion en el tiempo t 1 es lo que se denomina reduccion simple o bien se escogen de entre los individuos los lambda individuos mas adaptados al problema siguiendo lo que podemos denominar un criterio de reduccion elitista de grado lambda podemos tambien considerar otros procedimientos de reduccion que se colocan entre los anteriores por ejemplo si escogemos los sub mejores de entre padres y descendientes escogiendose los lambda sub restantes de entre los descendientes no seleccionados hasta el momento el concepto de reduccion esta ligado con el de tasa de reemplazamiento generacional sub es decir en el porcentaje de hijos generados con respecto del tamano de la poblacion si bien en la idea primitiva de holland dicho reemplazamiento se efectuaba de l en 1 es decir sub super habitualmente dicho reemplazamiento se efectua en bloque sub 1 de jong introdujo el concepto de tasa de reemplazamiento generacional con el objetivo de efectuar un solapamiento controlado entre padres e hijos en su trabajo en cada paso una proporcion t de la poblacion es seleccionada para ser cruzada los hijos resultantes podran reemplazar a miembros de la poblacion anterior este tipo de algoritmos geneticos se conocen bajo el nombre de ssga state genetie un ejemplo de los cuales lo constituye genitor y kauth michalewicz introduce un algoritmo que denomina algoritmo genetico modificado sub en el cual para llevar a cabo el reemplazamiento generacional selecciona al azar individuos para la reproduccion asi como individuos de los destinados a morir estas selecciones aleatorias tienen en consideracion el valor de la funcion objetivo de cada individuo de tal manera que cuanto mayor es la funcion objetivo mayor es la probabilidad de que sea seleccionado para la reproduccion y menor es la probabilidad de que dicho individuo fallezca el resto de los lambda individuos son considerados como neutros y pasan directamente a formar parte de la poblacion en la siguiente generacion 3 7 algoritmos geneticos paralelos en este apartado se introduciran tres maneras diferentes de explotar el paralelismo de los algoritmos geneticos por medio de los denominados modelos de islas para una profundizacion sobre el tema puede consultarse stender modelos de islas la idea basica consiste en dividir la poblacion total en varias subpoblaciones en cada una de las cuales se lleva a cabo un algoritmo genetico cada cierto numero de generaciones se efectua un intercambio de informacion entre las subpoblaciones proceso que se denomina migracion la introduccion de la migracion hace que los modelos de islas sean capaces de explotar las diferencias entre las diversas subpoblaciones obteniendose de esta manera una fuente de diversidad genetica cada subpopulacion es una definiendose un procedimiento por medio del cual se mueve el material genetico de una a otra la determinacion de la tasa de migracion es un asunto de capital importancia ya que de ella puede depender la convergencia prematura de la busqueda se pueden distinguir diferentes modelos de islas en funcion de la comunicacion entre las subpoblaciones algunas comunicaciones tipicas son las siguientes comunicacion en estrella en la cual existe una subpoblacion que es seleccionada como maestra que tiene mejor media en el valor de la funcion siendo las demas consideradas como esclavas todas las subpoblaciones esclavas mandan sus mejores individuos a la subpoblacion maestra la cual a su vez manda sus mejores individuos a cada una de las subpoblaciones esclavas vease figura 12 figura 12 comunicacion en red en la cual no existe una jerarquia entre las subpoblaciones mandando todas y cada una de ellas sus mejores individuos al resto de las subpoblaciones vease figura 13 figura 13 comunicacion en anillo en la cual cada subpoblacion envia sus mejores individuos a una poblacion vecina efectuandose la migracion en un unico sentido de flujo vease figura 14 el modelo de islas ha sido utilizado por varios autores y starkweather gorges schleuter figura 14 4 logica borrosa y algoritmos geneticos la logica borrosa trata de acercar la matematica al lenguaje impreciso del hombre comun el ser humano se maneja habitualmente con conceptos vagos los cuales no pueden ser representados por la matematica tradicional si se pregunta a una serie de personas acerca del estado del clima es factible que las respuestas sean del tipo mucho llovio llovio casi nada apenas unas si alguien responde a la pregunta en forma concreta su respuesta se pareceria a este momento hay 30 grados centigrados y se espera que para el resto del dia la temperatura se eleve hasta los 35 grados para luego decaer a 20 grados a lo largo dela este tipo de respuesta parece extractada del parte meteorologico del noticiero esperamos oir algo similar cuando miramos la television pero no tenemos la expectativa de hacerlo cuando le preguntamos al companero de trabajo que acaba de llegar si hace calor afuera del edificio tenemos entonces que el hombre se maneja con terminos vagos para muchas de las acciones de su vida una matematica estructurada para trabajar con conceptos precisos no puede entonces representar estos conceptos la logica borrosa trata de poder incorporar metodos para que conceptos vagos puedan ser utilizados como funciones matematicas esta ha tenido una utilidad practica inmediata en los mecanismos de control de las maquinarias la logica borrosa no es un mecanismo de optimizacion en si mismo pero vuelve mas flexibles a los sistemas de control de los dispositivos electronicos por lo que podriamos decir que se trata de un metodo optimizado de control la difusion que ha tenido en el mundo se le debe en gran parte a la incorporacion que han hecho los japoneses durante la decada de los 80 s de estas tecnicas en los productos que comercializan mundialmente en especial los electrodomesticos es raro ver un lavarropas o una heladera de marca japonesa con el logotipo de fuzzy logic si se utiliza logica borrosa un dispositivo automatico puede ser programado con ordenes del tipo expuesto en el cuadro tipo de ordenes plausibles de ser implementadas en un contexto de logica borrosa la formulacion de este tipo de reglas es mucho mas sencilla de entender y explicar por los expertos humanos que deben introducir las mismas asi mismo la programacion del software es mas simple al igual que su mantenimiento 4 1 funciones borrosas la logica borrosa trabaja con las llamadas funciones borrosas las cuales permiten efectuar las condiciones descriptas precedentemente ejemplo para definir la funcion mucho dentro de una serie de valores se procede de la siguiente manera se toma la serie se la ordena de mayor a menor y se extrae el valor mas grande y el valor mas chico estos valores corresponden al limite superior y al limite inferior de la serie tenemos entonces que dada una serie variando de a 0 hasta a n elementos ecuacion 3 se establece como amplitud de la serie la diferencia del limite superior y el inferior ecuacion 4 la funcion mucho queda definida como ecuacion 5 en una serie de numeros naturales cuyos valores esten entre 0 y 1000 a a a la funcion mucho fue definida como x a por lo que variara desde 0 1000 para x hasta 1000 1000 para x tendremos entonces un rango de valores entre 0 y 1 ecuacion 6 para facilitar los calculos si la serie no comienza de 0 o contiene valores negativos conviene convertirla en serie de numeros positivos sumando a cada termino el valor maximo negativo ejemplo la serie de 3 2 1 0 1 2 3 4 puede ser convertida en 1 2 3 4 5 6 7 sumandole 3 a todos los terminos la serie 4 5 puede ser convertida en 1 2 restandole 3 a todos los terminos por ello la ecuacion 3 se transforma en ecuacion 7 donde li 0 y ls 0 representan los limites originales estos limites se normalizan a ls 1 y li 1 llevando la serie al rango n ecuacion 8 veamos un caso concreto supongamos la siguiente serie de temperaturas item t i hora temperatura 1 9 3 2 10 5 3 11 7 4 12 9 5 13 11 6 14 14 7 15 16 8 16 18 9 17 22 10 18 25 11 9 27 12 10 29 13 11 30 14 12 32 15 13 33 16 14 34 17 15 35 18 16 34 19 17 30 20 18 25 la pregunta que se sesea que se responda es hizo mucho calor a las 16 hs esta pregunta es imposible de responder por los metodos tradicionales ya que la computadora solo puede retornar el valor 34 pero no discriminar si eso es mucho o no veamos como trabaja entonces la funcion mucho ecuacion 9 observamos que en definitiva la funcion mucho retorna un numero representativo del 96 cuanto mas se acerque el numero a 1 o mas valedera sera la afirmacion cuanto mas se acerque a 0 menos valedera sera la misma solo en el caso que el resultado sea 0 o 1 o se puede decir taxativamente que el enunciado es verdadero o falso blanco o negro todos los valores intermedios caen bajo la categoria de un valor tendra un gris mas oscuro que lo acercara al negro cuando su valor tienda a 1 de la misma forma sera un gris mas claro que lo acercara al blanco si tiende a 0 no existen entonces limites precisos para las categorias volviendose imprecisos los mismos de ahi la nomenclatura de logica borrosa dado que la funcion se acerca al obtendremos como resultado que efectivamente hizo mucho calor a la hora senalada de la misma manera la funcion poco puede ser descripta como la inversa de la funcion mucho por lo que tendremos que ecuacion 10 ecuacion 11 dado que el resultado de la funcion se acerca al obtendremos como resultado que no hizo poco calor a la hora senalada 4 2 algoritmos geneticos basados en logica borrosa existe la posibilidad de planear la arquitectura de un ga para que sus funciones de convergencia y control asi como sus operadores geneticos esten basados en logica borrosa el ga estaria entonces programado para la supervivencia ante entornos borrosos esto acarrearia por un lado la ventaja de la programacion de las mismas aunque tendria un efecto en la supervivencia indistinta de ciertos especimenes con similar valor de la funcion borrosa aunque diferente valor absoluto ejemplo si se programa el ga para seleccionar los especimenes con valores altos esto dara igual ponderacion a un ejemplar con un de performance la funcion que a uno con el de la misma funcion son sin logica borrosa el segundo ejemplar seria mas competitivo que el primero y lo aniquilaria dado que el efecto de utilizar o no esta logica cambia la arquitectura del ga su implementacion no es en si misma ni buena ni mala dependiendo de los objetivos del programador y de los resultados esperados las diferencias entre un ga con y sin logica borrosa pueden ser apreciadas en el cuadro cuadro diferencias entre un ga con y sin logica borrosa 5 ejemplos de aplicacion 5 1 veamos como funciona un algoritmo genetico vamos a partir de una funcion muy sencilla 2 imagina que deseas encontrar el valor de x que hace que la funcion alcance su valor maximo pero restringiendo a la variable x a tomar valores comprendidos entre 0 y 31 aun mas a x solo le vamos a permitir tomar valores enteros es decir 0 1 2 3 30 31 obviamente el maximo se tiene para x 31 donde f vale 961 no necesitamos saber algoritmos geneticos para resolver este problema pero su sencillez hace que el algoritmo sea mas facil de comprender lo primero que debemos hacer es encontrar una manera de codificar las posibles valores de una manera de hacerlo es con la codificacion binaria con esta codificacion un posible valor de x es 1 0 1 como se interpreta esto muy sencillo multiplica la ultima componente por 1 la penultima por 2 la anterior por 4 la segunda por 8 y la por 16 y a continuacion haz la suma 11 observa que 0 0 0 equivale a x 0 y que 1 1 1 equivale a x 31 a cada posible valor de la variable x en representacion binaria le vamos a llamar individuo una coleccion de individuos constituye lo que se denomina poblacion y el numero de individuos que la componen es el tamano de la poblacion una vez que tenemos codificada la solucion debemos escoger un tamano de poblacion para este ejemplo ilustrativo vamos a escoger 6 individuos debemos partir de una poblacion inicial una manera de generarla es aleatoriamente coge una moneda y lanzala al aire si sale cara la primera componente del primer individuo es un 0 y en caso contrario un 1 repite el lanzamiento de la moneda y tendremos la segunda componente del primer individuo 0 si sale cara y un 1 si sale asi hasta 5 veces y obtendras el primer individuo repite ahora la secuencia anterior para generar los individuos de la poblacion restantes en total tienes que lanzar 5 6 30 veces la moneda nuestro siguiente paso es hacer competir a los individuos entre si este proceso se conoce como seleccion la tabla 1 resume el proceso tabla 1 seleccion 1 1 1 0 12 144 6 2 0 0 1 18 324 3 3 1 1 1 15 225 2 4 1 0 0 24 576 5 5 1 0 1 26 676 4 6 0 0 0 1 1 1 cada fila en la tabla 1 esta asociada a un individuo de la poblacion inicial el significado de cada columna de la tabla es el siguiente numero que le asignamos al individuo individuo en codificacion binaria valor de x valor de observa que el mejor individuo es el 5 con f 676 calcula la media de f y obtendras fmed 3 en cuanto a la columna ahora te lo explico una manera de realizar el proceso de seleccion es mediante un torneo entre dos a cada individuo de la poblacion se le asigna una pareja y entre ellos se establece un torneo el mejor genera dos copias y el peor se desecha la columna indica la pareja asignada a cada individuo lo cual se ha realizado aleatoriamente existen muchas variantes de este proceso de seleccion aunque este metodo nos vale para ilustrar el ejemplo despues de realizar el proceso de seleccion la poblacion que tenemos es la mostrada en la columna de la tabla 2 observa por ejemplo que en el torneo entre el individuo 1 y el 6 de la poblacion inicial el primero de ellos ha recibido dos copias mientras que el segundo cae en el olvido tabla 2 cruce 1 1 1 0 5 1 2 1 1 0 3 3 3 0 0 1 2 3 4 0 0 1 6 1 5 1 0 1 1 1 6 1 0 1 4 1 tras realizar la seleccion se realiza el cruce una manera de hacerlo es mediante el cruce se forman parejas entre los individuos aleatoriamente de forma similar a la seleccion dados dos individuos pareja se establece un punto de cruce aleatorio que no es mas que un numero aleatorio entre 1 y 4 longitud del individuo menos por ejemplo en la pareja 2 3 el punto de cruce es 3 lo que significa que un hijo de la pareja conserva los tres primeros bits del padre y hereda los dos ultimos de la madre mientras que el otro hijo de la pareja conserva los tres primeros bits de la madre y hereda los dos ultimos del padre la poblacion resultante se muestra en la columna de la tabla 3 tabla 3 poblacion tras el cruce 1 1 0 1 10 100 2 1 1 0 28 784 3 1 1 1 14 196 4 0 0 0 16 256 5 1 0 1 26 676 6 0 0 1 18 324 en la columna tienes el valor de x en la siguiente tienes el valor de f correspondiente fijate en que ahora el valor maximo de f es 784 el individuo mientras que antes de la seleccion y el cruce era de 676 ademas fmed ha subido de 324 3 a 389 3 que quiere decir esto simplemente que los individuos despues de la seleccion y el cruce son mejores que antes de estas transformaciones el siguiente paso es volver a realizar la seleccion y el cruce tomando como poblacion inicial la de la tabla 3 esta manera de proceder se repite tantas veces como numero de iteraciones tu fijes y cual es el optimo en realidad un algoritmo genetico no te garantiza la obtencion del optimo pero si esta bien construido te proporcionara una solucion razonablemente buena puede que obtengas el optimo pero el algoritmo no te confirma que lo sea asi que quedate con la mejor solucion de la ultima iteracion tambien es buena idea ir guardando la mejor solucion de todas las iteraciones anteriores y al final quedarte con la mejor solucion de las exploradas consideraciones adicionales en problemas reales en los que se aplican los algoritmos geneticos existe la tendencia a la homegeinizacion de la poblacion es decir a que todos los individuos de la misma sean identicos esto impide que el algoritmo siga explorando nuevas soluciones con lo que podemos quedar estancados en un minimo local no muy bueno existen tecnicas para contrarrestar esta el mecanismo mas elemental aunque no siempre suficientemente eficaz es introducir una mutacion tras la seleccion y el cruce una vez que has realizado la seleccion y el cruce escoges un numero determinado de bits de la poblacion y los alteras aleatoriamente en nuestro ejemplo consiste simplemente en cambiar de 1 a 0 o de 0 a 1 ejemplo 2 con la finalidad de aclarar mejor los conceptos cubiertos previamente presentaremos ahora una sencilla aplicacion del algoritmo genetico a un problema de optimizacion un grupo de financieros mexicanos ha resuelto invertir 10 millones de pesos en la nueva marca de vino asi pues en 4 ciudades de las principales de mexico se decide iniciar una vigorosa campana comercial mexico en el centro monterrey en el noroeste guadalajara en el occidente y veracruz en el oriente a esas 4 ciudades van a corresponder las zonas comerciales i ii iii y iv un estudio de mercado ha sido realizado en cada una de las zonas citadas y han sido establecidas curvas de ganancias medias en millones de pesos en funcion de las inversiones totales tiendas de venta representantes publicidad etc estos datos se ilustran en la tabla 2 y en la figura 4 para simplificar los calculos supondremos que las asignaciones de creditos o de inversiones deben hacerse por unidades de 1 millon de pesos la pregunta es en donde se deben de asignar los 10 millones de pesos de los que se dispone para que la ganancia total sea maxima inversion beneficio i beneficio ii beneficio iii beneficio iv 0 0 0 0 0 1 0 28 0 25 0 15 0 20 2 0 45 0 41 0 25 0 33 3 0 65 0 55 0 40 0 42 4 0 78 0 65 0 50 0 48 5 0 90 0 75 0 62 0 53 6 1 02 0 80 0 73 0 56 7 1 13 0 85 0 82 0 58 8 1 23 0 88 0 90 0 60 9 1 32 0 90 0 96 0 60 10 1 38 0 90 1 00 0 60 tabla 1 datos obtenidos con la investigacion de mercado en cada una de las regiones en estudio representacion para poder aplicar el algoritmo genetico lo primero que necesitamos determinar es cual sera el esquema a utilizarse para representar las posibles soluciones del problema en este caso necesitamos 4 bits para representar cada solucion porque cada una admite 11 valores posibles 0 a como existen 4 valores independientes por cada zona de se requieren entonces 16 bits x por cada cromosoma es importante hacer notar que se requiere una funcion de codificacion e que transforme el valor de la inversion a y una de decodificacion e que realice el proceso debido a que en este caso los 4 bits utilizados para representar una solucion pueden producir mas valores de los que se necesitan se usara una funcion de ajuste que haga que los resultados producidos siempre se encuentren en el rango valido funcion de aptitud dado que el objetivo es obtener las inversiones que sumen 10 y que tengan un beneficio maximo podemos usar la siguiente funcion de aptitud penalizada donde y son las ganancias por zona que se calculan de acuerdo a los valores de la tabla 2 y v es el valor absoluto de la diferencia entre la suma obtenida de las inversiones y 10 notese que cuando no se viole ninguna restriccion e cuando la suma de inversiones sea exactamente la funcion de aptitud no sera operadores se usara una cruza de 2 puntos la probabilidad que se dara a la misma sera del en cuanto a la mutacion se le asignara una probabilidad baja que sera del el tamano de poblacion manejado para este ejemplo sera de 50 cromosomas y se correra el algoritmo genetico durante 20 generaciones resultados el resultado obtenido en una corrida tipica es un beneficio de 1 81 millones de pesos correspondiente a invertir 4 millones en la zona comercial i 3 millones en la zona ii 1 millon en la zona iii y 2 millones en la zona iv esta es la solucion optima la cual se obtuvo originalmente mediante programacion dinamica el tiempo que le tomo al algoritmo genetico encontrar este valor fue de solo 13 segundos debe hacerse notar que en este caso si desearamos analizar inversiones que sumen otra cantidad y en unidades menores al millon el algoritmo genetico tendria que modificarse de manera minima mientras que la programacion dinamica requeriria una cantidad tal de trabajo que practicamente se volveria inoperante bibliografia de la computacion http www geocities com siliconvalley 7491 aplce htm del comportamiento de los algoritmos http www geocities com siliconvalley 9802 3 htm a la vida http igeocities com capecanaveral 8104 ivan htm de bases de conocimiento con computacion http www fciencias unam mx revista soluciones html a los algoritmos http www fciencias unam mx revista soluciones html placeres existenciales de los algoritmos http www fciencias unam mx revista soluciones html http www iamnet com users jcontre genetic ag htm http www iamnet com users jcontre genetic operadores htm salesman problem using genetic http www lalena com ai tsp http www uv es genet html veces va el cantaro al agua hasta que se http homepages mty itesm mx al gen htm http www iamnet com users jcontre genetic ag htm http www caplet com mannamouse flying acceso al programa ejecutable http www wi leidenuniv nl flying index html hitch hiker s guide to evolutionary http gnomics udg es www top htm holland j h in natural and artificial university of michigan press 1975 211 p koza j r programming on the programming of computers by means of natural the mit press 1992 819 p buckles b p and petry f e ieee computer society press 1992 109 p goldberg d e algorithms in search optimization and machine addison wesley publishing company 1989 412 p booker l b goldberg d e and holland j h systems and genetic artificial intelligence 40 1989 pp 235 282 davis l of genetic van nostrand reinhold 1991 385 p forrest s algorithms principles of natural selection applied to science vol 261 no 5123 august 13 1993 pp 872 878 smith r e goldberg d e and earickson j a c a c language implementation of a simple genetic tcga report no 91002 the clearinghouse for genetic algorithms the university of alabama may 14 1991 ribeiro filho j l treleaven ph c and alippi c algorithm programming ieee computer june 1994 pp 28 43 srinivas m and patnaik l m algorithms a ieee computer june 1994 pp 17 26 rawlins g j e of genetic morgan kaufmann publishers 1991 341 p whitley l d of genetic algorithms morgan kaufmann publishers 1993 322 p kaufmann a y faure r a la investigacion de segunda edicion cecsa mexico 1977 311 p porter k huge dr dobb s journal of software tools for the professional programmer vol 13 no 3 1988 pp 60 3 koza j programming ii automatic discovery of reusable the mit press 1992 746 p francisco j francisco j vico evolutiva basada en un modelo de codificaion inteligencia artificial n 5 pag 20 25 