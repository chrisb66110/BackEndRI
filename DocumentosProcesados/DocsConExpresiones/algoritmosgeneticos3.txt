 algoritmos gen alojamiento ofrecido por el grupo hispavista hispavista algoritmos geneticos 1 introducci 1 1 antecedentes 1 2 definici 1 3 problem 1 4 ventajas y desventajas 1 5 limitaciones 1 6 como saber si es posible usar un algoritmo gen 1 7 marco de desarrollo 1 8 comparaci con otros m de optimizaci 2 el algoritmo gen simple 2 1 codificaci 2 2 ejemplo 3 extensiones y modificaciones del algoritmo gen simple 3 1 poblaci 3 1 1 tama de la poblaci 3 1 2 poblaci inicial 3 2 funci objetivo 3 3 selecci 3 4 cruce 3 5 mutaci 3 6 reducci 3 7 algoritmos gen paralelos 4 l borrosa y algoritmos gen 4 1 funciones borrosas 4 2 algoritmos gen basados en l borrosa 5 ejemplos de aplicaci 5 1 ejemplo 1 5 2 ejemplo 2 6 conclusiones 7 referencias 1 introducci 1 1 antecedentes el algoritmo gen es una t de b basada en la teor de la evoluci de darwin que ha cobrado tremenda popularidad en todo el mundo durante los a se presentar aqu los conceptos b que se requieren para abordarla as como unos sencillos ejemplos que permitan a los lectores comprender c aplicarla al problema de su elecci en los a la comunidad cient internacional ha mostrado un creciente inter en una nueva t de b basada en la teor de la evoluci y que se conoce como el algoritmo gen esta t se basa en los mecanismos de selecci que utiliza la naturaleza de acuerdo a los cuales los individuos m aptos de una poblaci son los que sobreviven al adaptarse m f a los cambios que se producen en su entorno hoy en d se sabe que estos cambios se efect en los genes de un individuo b de codificaci de cada uno de los atributos de un ser y que sus atributos m deseables e los que le permiten adaptarse mejor a su se transmiten a sus descendientes cuando se reproduce sexualmente un investigador de la universidad de michigan llamado john holland era consciente de la importancia de la selecci natural y a fines de los desarroll una t que permiti incorporarla a un programa su objetivo era lograr que las computadoras aprendieran por s mismas a la t que invent holland se le llam originalmente pero se hizo popular bajo el nombre gen tras la publicaci de su libro en 1975 una definici bastante completa de un algoritmo gen es la propuesta por john koza un algoritmo matem altamente paralelo que transforma un conjunto de objetos matem individuales con respecto al tiempo usando operaciones modeladas de acuerdo al principio darwiniano de reproducci y supervivencia del m apto y tras haberse presentado de forma natural una serie de operaciones gen de entre las que destaca la recombinaci sexual cada uno de estos objetos matem suele ser una cadena de caracteres o n de longitud fija que se ajusta al modelo de las cadenas de cromosomas y se les asocia con una cierta funci matem que refleja su aptitud 1 2 definici los algoritmos gen son m adaptativos que pueden usarse para resolver problemas de b y optimizaci est basados en el proceso gen de los organismos vivos a lo largo de las generaciones las poblaciones evolucionan en la naturaleza de acorde con los principios de la selecci natural y la supervivencia de los m fuertes postulados por darwin por imitaci de este proceso los algoritmos gen son capaces de ir creando soluciones para problemas del mundo real la evoluci de dichas soluciones hacia valores del problema depende en buena medida de una adecuada codificaci de las mismas un algoritmo gen consiste en una funci matem o una rutina de software que toma como entradas a los ejemplares y retorna como salidas cuales de ellos deben generar descendencia para la nueva generaci versiones m complejas de algoritmos gen generan un ciclo iterativo que directamente toma a la especie total de los y crea una nueva generaci que reemplaza a la antigua una cantidad de veces determinada por su propio dise una de sus caracter principales es la de ir perfeccionando su propia heur en el proceso de ejecuci por lo que no requiere largos per de entrenamiento especializado por parte del ser humano principal defecto de otros m para solucionar problemas como los sistemas expertos 1 3 problem los principios b de los algoritmos gen fueron establecidos por holland y se encuentran bien descritos en varios textos goldberg davis michalewicz reeves en la naturaleza los individuos de una poblaci compiten entre s en la b de recursos tales como comida agua y refugio incluso los miembros de una misma especie compiten a menudo en la b de un compa aquellos individuos que tienen m en sobrevivir y en atraer compa tienen mayor probabilidad de generar un gran n de descendientes por el contrario individuos poco dotados producir un menor n de descendientes esto significa que los genes de los individuos mejor adaptados se propagar en sucesivas generaciones hacia un n de individuos creciente la combinaci de buenas caracter provenientes de diferentes ancestros puede a veces producir descendientes cuya adaptaci es mucho mayor que la de cualquiera de sus ancestros de esta manera las especies evolucionan logrando unas caracter cada vez mejor adaptadas al entorno en el que viven los algoritmos gen usan una analog directa con el comportamiento natural trabajan con una poblaci de individuos cada uno de los cuales representa una soluci factible a un problema dado a cada individuo se le asigna un valor puntuaci relacionado con la bondad de dicha soluci en la naturaleza esto equivaldr al grado de efectividad de un organismo para competir por unos determinados recursos cuanto mayor sea la adaptaci de un individuo al problema mayor ser la probabilidad de que el mismo sea seleccionado para reproducirse cruzando su material gen con otro individuo seleccionado de igual forma este cruce producir nuevos individuos descendientes de los anteriores los cuales comparten algunas de las caracter de sus padres cuanto menor sea la adaptaci de un individuo menor ser la probabilidad de que dicho individuo sea seleccionado para la reproducci y por tanto de que su material gen se propague en sucesivas generaciones de esta manera se produce una nueva poblaci de posibles soluciones la cual reemplaza a la anterior y verifica la interesante propiedad de que contiene una mayor proporci de buenas caracter en comparaci con la poblaci anterior as a lo largo de las generaciones las buenas caracter se propagan a trav de la poblaci favoreciendo el cruce de los individuos mejor adaptados van siendo exploradas las m prometedoras del espacio de b si el algoritmo gen ha sido bien dise la poblaci converger hacia una soluci del problema 1 4 ventajas y desventajas no necesitan conocimientos espec sobre el problema que intentan resolver operan de forma simult con varias soluciones en vez de trabajar de forma secuencial como las t tradicionales cuando se usan para problemas de optimizaci maximizar una funci objetivo resultan menos afectados por los m locales que las t tradicionales resulta sumamente f ejecutarlos en las modernas arquitecturas masivamente paralelas usan operadores probabil en vez de los t operadores determin de las otras t pueden tardar mucho en converger o no converger en absoluto dependiendo en cierta medida de los par que se utilicen tama de la poblaci n de generaciones etc pueden converger prematuramente debido a una serie de problemas de diversa 1 5 limitaciones el poder de los algoritmos gen proviene del hecho de que se trata de una t robusta y pueden tratar con una gran variedad de problemas provenientes de diferentes incluyendo aquellos en los que otros m encuentran dificultades si bien no se garantiza que el algoritmo gen encuentre la soluci del problema existe evidencia emp de que se encuentran soluciones de un nivel aceptable en un tiempo competitivo con el resto de algoritmos de optimizaci combinatoria en el caso de que existan t especializadas para resolver un determinado problema lo m probable es que superen al algoritmo gen tanto en rapidez como en eficacia el gran campo de aplicaci de los algoritmos gen se relaciona con aquellos problemas para los cuales no existen t especializadas incluso en el caso en que dichas t existan y funcionen bien pueden efectuarse mejoras de las mismas hibrid con los algoritmos gen 1 6 como saber si es posible usar un algoritmo gen la aplicaci m com de los algoritmos gen ha sido la soluci de problemas de optimizaci en donde han mostrado ser muy eficientes y confiables sin embargo no todos los problemas pudieran ser apropiados para la t y se recomienda en general tomar en cuenta las siguientes caracter del mismo antes de intentar usarla su espacio de b e sus posibles debe estar delimitado dentro de un cierto rango debe poderse definir una funci de aptitud que nos indique qu tan buena o mala es una cierta respuesta las soluciones deben codificarse de una forma que resulte relativamente f de implementar en la computadora el primer punto es muy importante y lo m recomendable es intentar resolver problemas que tengan espacios de b discretos aunque sean muy grandes sin embargo tambi podr intentarse usar la t con espacios de b continuos pero preferentemente cuando exista un rango de soluciones relativamente peque la funci de aptitud no es m que la funci objetivo de nuestro problema de optimizaci el algoritmo gen maximiza pero la minimizaci puede realizarse f utilizando el rec de la funci maximizante cuidarse por supuesto que el rec de la funci no genere una divisi por una caracter que debe tener esta funci es que tiene ser capaz de a las malas soluciones y de a las buenas de forma que sean estas las que se propaguen con mayor rapidez la codificaci m com de las soluciones es a trav de cadenas binarias aunque se han utilizado tambi n reales y letras el primero de estos esquemas ha gozado de mucha popularidad debido a que es el que propuso originalmente holland y adem porque resulta muy sencillo de implementar 1 7 marco de desarrollo antes de continuar ahondando en la t de los algoritmos gen ser interesante dejarla situada dentro de un marco m amplio nos referimos a la rama de la inteligencia artificial que se ha denominado computaci evolutiva el t computaci evolutiva se refiere al estudio de los fundamentos y aplicaciones de ciertas t heur de b basadas en los principios naturales de la evoluci una gran variedad de algoritmos evolutivos han sido propuestos pero principalmente pueden clasificarse en algoritmos gen programaci evolutiva estrategias evolutivas sistemas clasificadores y programaci gen esta clasificaci se basa sobre todo en detalles de desarrollo hist m que en el hecho de un funcionamiento realmente diferente de hecho las bases biol en las que se apoyan son esencialmente las mismas las diferencias entre ellos se centra en los operadores que se usan en cada caso y en general en la forma de implementar la selecci reproducci y sustituci de individuos en una poblaci aunque los detalles de la evoluci no han sido completamente comprendidos incluso hoy en d existen algunos puntos en los que se fundamentan la evoluci es un proceso que opera a nivel de cromosomas y no a nivel de individuos cada individuo es codificado como un conjunto de cromosomas la selecci natural es el mecanismo mediante el cual los individuos mejor adaptados son los que tienen mayores posibilidades de reproducirse el proceso evolutivo tiene lugar en la etapa de la reproducci es en esta etapa donde se producen la mutaci que es la causante de que los cromosomas de los hijos puedan ser diferentes a los de los padres y el cruce que combina los cromosomas de los padres para que los hijos tengan cromosomas diferentes de forma breve pasamos a comentar cada una de los algoritmos mencionados anteriormente para que el lector pueda tener una idea de las similitudes y diferencias entre ellos los algoritmos gen resuelven los problemas generando poblaciones sucesivas a las que se aplican los operadores de mutaci y cruce cada individuo representa una soluci al problema y se trata de encontrar al individuo que represente a la mejor soluci la programaci gen funciona igual que la t anterior pero se centra en el estudio de problemas cuya soluci es un programa de manera que los individuos de la poblaci son programas que se acercan m o menos a realizar una tarea que es la soluci la programaci evolutiva es otro enfoque de los algoritmos gen en este caso el estudio se centra en conseguir operadores gen que imiten lo mejor posible a la naturaleza en cada caso m que en la relaci de los padres con su descendencia en este caso no se utiliza el operador de cruce tomando la m importancia el operador de mutaci estrategias evolutivas se centran en el estudio de problemas de optimizaci e incluyen una visi del aprendizaje en dos niveles a nivel de genotipo y a nivel de fenotipo y por los sistemas clasificadores engloban el estudio de problemas en los que la soluci buscada se corresponde con toda una poblaci para finalizar se muestra un esquema en el que se sit las t mencionadas con respecto a otros procedimientos de b conocidos 1 8 comparaci con otros m de optimizaci algoritmos gen y matem existen problemas de optimizaci que pueden ser resueltos por la implementaci de un algoritmo tradicional en este caso lo m conveniente es utilizarlo por ejemplo si tenemos la funci el doble puede ser interpretada como ecuaci 1 esto tambi es v para funciones booleanas un valor de verdadero o falso por ejemplo la funci mayor puede ser interpretada como ecuaci 2 para resolver un problema que requiera como soluci saber solamente cual n es mas grande resulta mas eficaz utilizar el algoritmo matem directamente sin embargo no son aplicables a problemas que posean algunas de estas caracter la funci representativa del problema no es continua en este caso el mismo no es computable los algoritmos gen pueden trabajar con todo tipo de funciones ya que encontrar un m aceptable si no es posible encontrar el la funci representativa es din la relaci entre las variable cambia dependiendo de los valores que tomen las mismas esta relaci puede ser advertida o no las reglas del tipo es igual a y si el valor de x es chico x es 1 5 de y si el valor de x es grande no se sabe que pasa para valores medios de no pueden ser convertidas en un algoritmo algebraico ya que existen valores que se desconocen a diferencia de un algoritmo tradicional un algoritmo gen puede ser dise para trabajar bajo estas condiciones algoritmos gen y m enumerativos existe la posibilidad te de encontrar soluciones a problemas a optimizaci enumerando todas las soluciones posibles para todos los casos y posteriormente buscando la misma en la base de datos resultante los problemas se limitan entonces a un sistema de b eficiente del caso concreto por ejemplo los libros con tablas de logaritmos tradicionales constan de una larga serie de c para todos los valores usuales la soluci consiste simplemente en buscar en la lista el n decimal y retornar el logaritmo dado la memorizaci de las tablas de multiplicar que se ense a los ni es otro ejemplo usual se espera que ante la pregunta cu es siete por cinco los ni respondan instant sin tener que estar calculando mentalmente la multiplicaci este m es factible siempre que el n de valores sea manejable de otra manera el simple c de los mismos se vuelve imposible ejemplo generar una tabla que contenga todas las movidas de todos los partidos posibles de un juego de damas resultar imposible de hacer en la pr la memorizaci de una serie de datos no es otra cosa que la construcci en la memoria del equivalente a una base de datos en donde se busca la pregunta y se encuentra autom la respuesta los algoritmos gen usan heur para la resoluci de problemas lo cual limita dr el n de datos a utilizar algoritmos gen y sistemas expertos un sistema experto es un programa de computadora que encuentra soluciones a problemas del tipo condicional con la estructura si ocurren los hechos a b c d cual ser el valor del suceso e ejemplo si un an m detecta los s a b c y d en un paciente cual ser la enfermedad del sujeto ejemplo si el an geol de una capa de suelo detecta la presencia de los compuestos qu a b c y d es factible que exista petr en la misma si bien existen en la literatura ejemplos de la utilidad de t las reglas deben ser provistas por un especialista o varios en el tema por ende se requiere que los conocimientos est disponibles que sean estructurados o factibles de ser estructurados convertidos a reglas heur y que los hechos de la realidad sean relativamente est es decir que las causas para arribar a una determinada conclusi no cambien ya que cada vez que esto sucede los expertos deben reelaborrar las reglas lo cual dificulta y retarda considerablemente la operatoria del sistema las condiciones b necesarias para la implementaci efectiva de un sistema experto pueden observarse en el cuadro los sistemas expertos tuvieron su apogeo en la d de los 80 s aproximadamente de 1979 a 1985 en esa se los lleg a considerar verdaderas panaceas que resolver muchos de los problemas cotidianos del hombre incluso se formaron en ese entonces varias compa con el objeto espec de realizarlos y comercializarlos algunos fueron exitosos y funcionaron bien pero las dificultades planteadas anteriormente no tardaron en aparecer en particular existen temas en los cuales el conocimiento no es est sino que la aparici de nueva informaci altera las pautas o reglas de inferencia de los resultados la necesidad permanentes de reevaluar las reglas por medio de expertos humanos lleva al sistema a una operatoria lenta y burocr cada conocimiento nuevo implica reentrenar manualmente el sistema los sistemas expertos demostraron no ser en este campo existen temas en los cuales la interrelaci de ciertas variables no es conocida si la informaci disponible de cierto asunto es limitada y no se conoce el comportamiento de algunas de sus variables el sistema experto tendr grandes dificultades de programarse ya que sus reglas ser imprecisas el cuadro muestra las condiciones b necesarias para la implementaci efectiva de un sistema experto condiciones b necesarias para la implementaci efectiva de un sistema experto los expertos no siempre estructuran su conocimiento existen numerosas personas que razonan por m emp esto hace que les resulte muy dif traducir sus pensamientos o su m deductivo a reglas que la computadora pueda interpretar un sistema experto no podr llegar a resultados valederos cuando los especialistas en un tema no puedan tener estructurados sus pensamientos por ejemplo sup que se quiera programar un sistema experto para calificar obras de arte dif se encontrar un cr de arte que pueda estructurar las razones por las cuales considera o a una obra de arte en general las palabras que pueda decir resultar a los o del programador del sistema como una serie de subjetividades imposibles de sistematizar luego de observar todo esto se empez a considerar a los sistemas expertos como aptos solamente para entornos reducidos y con condiciones de ejecuci acotadas la idea del sistema experto como resolvedor universal de problemas qued sepultada si bien la investigaci b de los algoritmos gen es contempor a la de los sistemas expertos la renovada importancia que se les dio en el cient se produjo en paralelo a la desvalorizaci que sufrieron estos los algoritmos gen se revalorizaron ya que poseen las siguientes ventajas competitivas solo necesitan asesoramiento del experto cuando se agregan o suprimen variables al modelo los sistemas expertos requieren la presencia del mismo ante cada modificaci del entorno los algoritmos gen solo requieren el asesoramiento del experto para identificar las variables pertinentes aunque no es necesario que definan sus valores ni sus relaciones iniciales o finales los sistemas expertos solo trabajan con las reglas y valores que les dictan los seres humanos algoritmos gen y redes neuronales una red neuronal es el intento de poder realizar una simulaci computacional del comportamiento de partes del cerebro humano mediante la r en peque escala de los patrones que desempe para la formaci de resultados a partir de los sucesos percibidos el cerebro consta de unidades llamadas neuronas las cuales est conectadas entre si formando una red ah la denominaci red neuronal concretamente se trata de poder analizar y reproducir el mecanismo de aprendizaje de sucesos que poseen los animales m evolucionados la red simula grupos de neuronas llamados capas las cuales est relacionadas unas con otras los datos se introducen en la primera capa llamada de cada capa transfiere la informaci a sus vecinas teniendo un peso o ponderaci para los valores lo que va modificando los mismos en su paso a trav de la red cuando los datos llegan a la de las capas llamada capa de salida el valor resultante es tomado como el resultado de la red la red puede ser entrenada para diversos usos entre ellos como mecanismo de optimizaci en este sentido se puede expresar que ser un modelo alternativo competitivo con los algoritmos gen si se las programara para este fin en rigor de verdades la literatura sugiere que se podr hacer modelos mixtos o h en donde se combinen las ventajas de las redes neuronales y los algoritmos gen aunque hay muy poco material disponible en este campo tal vez esto se deba al hecho que los ga y el estudio de las redes forman dos ramas o escuelas separadas dentro de la inteligencia artificial por lo que existe una preferencia en los investigadores en perfeccionar alguno de los dos modelos antes que tratar de unirlos el algoritmo gen simple el algoritmo gen simple tambi denominado can se representa en la figura 1 como se ver a continuaci se necesita una codificaci o representaci del problema que resulte adecuada al mismo adem se requiere una funci de ajuste adaptaci al problema la cual asigna un n real a cada posible soluci codificada durante la ejecuci del algoritmo los padres deben ser seleccionados para la reproducci a continuaci dichos padres seleccionados se cruzar generando dos hijos sobre cada uno de los cuales actuar un operador de mutaci el resultado de la combinaci de las anteriores funciones ser un conjunto de individuos soluciones al los cuales en la evoluci del algoritmo gen formar parte de la siguiente poblaci figura 1 2 1 codificaci se supone que los individuos soluciones del pueden representarse como un conjunto de par denominaremos los cuales agrupados forman una ristra de valores menudo referida como si bien el alfabeto utilizado para representar los individuos no debe necesariamente estar constituido por el buena parte de la teor en la que se fundamentan los algoritmos gen utiliza dicho alfabeto en t biol el conjunto de par representando un cromosoma particular se denomina fenotipo el fenotipo contiene la informaci requerida para construir un organismo el cual se refiere como genotipo los mismos t se utilizan en el campo de los algoritmos gen la adaptaci al problema de un individuo depende de la evaluaci del genotipo esta puede inferirse a partir del fenotipo es decir puede ser computada a partir del cromosoma usando la funci de evaluaci la funci de adaptaci debe ser dise para cada problema de manera espec dado un cromosoma particular la funci de adaptaci le asigna un n real que se supone refleja el nivel de adaptaci al problema del individuo representado por el cromosoma durante la fase reproductiva se seleccionan los individuos de la poblaci para cruzarse y producir descendientes que constituir una vez mutados la siguiente generaci de individuos la selecci de padres se efect al azar usando un procedimiento que favorezca a los individuos mejor adaptados ya que a cada individuo se le asigna una probabilidad de ser seleccionado que es proporcional a su funci de adaptaci este procedimiento se dice que est basado en la ruleta sesgada seg dicho esquema los individuos bien adaptados se escoger probablemente varias veces por generaci mientras que los pobremente adaptados al problema no se escoger m que de vez en cuando una vez seleccionados dos padres sus cromosomas se combinan utilizando habitualmente los operadores de cruce y mutaci las formas b de dichos operadores se describen a continuaci el operador de cruce coge dos padres seleccionados y corta sus ristras de cromosomas en una posici escogida al azar para producir dos subristras iniciales y dos subristras finales despu se intercambian las subristras finales produci dos nuevos cromosomas completos la figura ambos descendientes heredan genes de cada uno de los padres este operador se conoce como operador de cruce basado en un punto habitualmente el operador de cruce no se aplica a todos los pares de individuos que han figura 2 sido seleccionados para emparejarse sino que se aplica de manera aleatoria normalmente con una probabilidad comprendida entre 0 5 y 1 0 en el caso en que el operador de cruce no se aplique la descendencia se obtiene simplemente duplicando los padres el operador de mutaci se aplica a cada hijo de manera individual y consiste en la alteraci aleatoria con probabilidad peque de cada gen componente del cromosoma la figura 3 muestra la mutaci del quinto gen del cromosoma s bien figura 3 puede en principio pensarse que el operador de cruce es m importante que el operador de mutaci ya que proporciona una exploraci r del espacio de b asegura que ning punto del espacio de b tenga probabilidad cero de ser examinado y es de capital importancia para asegurar la convergencia de los algoritmos gen para criterios pr es muy la definici de convergencia introducida en este campo por de jong en su tesis doctoral si el algoritmo gen ha sido correctamente implementado la poblaci evolucionar a lo largo de las generaciones sucesivas de tal manera que la adaptaci media extendida a todos los individuos de la poblaci as como la adaptaci del mejor individuo se ir incrementando hacia el global el concepto de convergencia est relacionado con la progresi hacia la uniformidad un gen ha convergido cuando al menos el 95 de los individuos de la poblaci comparten el mismo valor para dicho gen se dice que la poblaci converge cuando todos los genes han convergido se puede generalizar dicha definici al caso en que al menos un poco de los individuos de la poblaci hayan convergido la figura 4 muestra como var la adaptaci media y la mejor adaptaci en un algoritmo gen simple t figura 4 a medida que el n de generaciones aumenta es m probable que la adaptaci media se aproxime a la del mejor individuo 2 2 ejemplo como ilustraci de los diferentes componentes del algoritmo gen simple supongamos el problema adaptado de goldberg de encontrar el m de la funci x 2 sobre los enteros 2 evidentemente para lograr dicho bastar actuar por b exhaustiva dada la baja cardinalidad del espacio de b se trata por tanto de un mero ejemplo con el que pretendemos ilustrar el comportamiento del algoritmo anteriormente descrito consultando pseudoc de la figura 1 vemos que el primer paso a efectuar consiste en determinar el tama de la poblaci inicial para a continuaci obtener dicha poblaci al azar y computar la funci de evaluaci de cada uno de sus individuos suponiendo que el alfabeto utilizado para codificar los individuos est constituido por necesitaremos ristras de longitud 5 para representar los 32 puntos del espacio de b en la tabla 1 hemos representado los 4 individuos que constituyen la poblaci inicial junto con su funci de adaptaci al problema as como la probabilidad de que cada uno de dichos individuos sea seleccionado seg el modelo de ruleta sesgada para emparejarse volviendo a consultar el pseudoc expresado en la figura 1 vemos que el siguiente paso consiste en la selecci de 2 parejas de individuos para ello es suficiente con obtener 4 n reales provenientes de una distribuci de probabilidad uniforme en el intervalo tabla 1 tabla 2 y compararlos con la columna de la tabla l as por ejemplo supongamos que dichos 4 n hayan sido 0 58 0 84 0 11 y 0 43 esto significa que los individuos seleccionados para el cruce han sido el individuo 2 junto con el individuo 4 as como el individuo 1 junto con el individuo 2 para seguir con el algoritmo gen simple necesitamos determinar la probabilidad de cruce p supongamos que se fije en p 0 8 vali al igual que antes de 2 en este caso n provenientes de la distribuci uniforme determinaremos si los emparejamientos anteriores se llevan a cabo admitamos por ejemplo que los dos n extra sean menores que 0 8 decidi por tanto efectuar el cruce entre las dos parejas para ello escogeremos un n al azar entre l y 1 1 l la longitud de la ristra utilizada para representar el not que la restricci impuesta al escoger el n entre 1 y l l y no l se realiza con la finalidad de que los descendientes no coincidan con los padres supongamos tal y como se indica en la tabla 2 que los puntos de cruce resulten ser 2 y 3 de esta manera obtendr los 4 descendientes descritos en la tercera columna de la tabla 2 a continuaci siguiendo el pseudoc de la figura 1 mutar con una probabilidad p cercana a cero cada uno de los bit de las cuatro ristras de individuos en este caso suponemos que el bit mutado corresponde al primer gen del tercer individuo en las dos columnas se pueden consultar los valores de los individuos as como las funciones de adaptaci correspondientes como puede observarse tanto el mejor individuo como la funci de adaptaci media han mejorado sustancialmente al compararlos con los resultados de la tabla 1 extensiones y modificaciones del algoritmo gen simple en este apartado se introducir algunas extensiones y modificaciones del algoritmo gen simple se comenzar dando un pseudoc para un algoritmo gen abstracto para a continuaci introducir algunas variantes que se han ido proponiendo en trabajos desarrollados en estos a figura 5 3 1 poblaci 3 1 1 tama de la poblaci una cuesti que uno puede plantearse es la relacionada con el tama id de la poblaci parece intuitivo que las poblaciones peque corren el riesgo de no cubrir adecuadamente el espacio de b mientras que el trabajar con poblaciones de gran tama puede acarrear problemas relacionados con el excesivo costo computacional goldberg efectu un estudio te obteniendo como conclusi que el tama de la poblaci para ristras de longitud i con codificaci binaria crece exponencialmente con el tama de la ristra este resultado traer como consecuencia que la aplicabilidad de los algoritmos gen en problemas reales ser muy limitada ya que resultar no competitivos con otros m de optimizaci combinatoria alander bas en evidencia emp sugiere que un tama de poblaci comprendida entre l y 21 es suficiente para atacar con los problemas por el considerados 3 1 2 poblaci inicial habitualmente la poblaci inicial se escoge generando ristras al azar pudiendo contener cada gen uno de los posibles valores del alfabeto con probabilidad uniforme nos podr preguntar que es lo que suceder si los individuos de la poblaci inicial se obtuviesen como resultado de alguna t heur o de optimizaci local en los pocos trabajos que existen sobre este aspecto se constata que esta inicializaci no aleatoria de la poblaci inicial puede acelerar la convergencia del algoritmo gen sin embargo en algunos casos la desventaja resulta ser la prematura convergencia del algoritmo queriendo indicar con esto la convergencia hacia locales 3 2 funci objetivo dos aspectos que resultan cruciales en el comportamiento de los algoritmos gen son la determinaci de una adecuada funci de adaptaci o funci objetivo as como la codificaci utilizada idealmente nos interesar construir funciones objetivo con es decir funciones objetivo que verifiquen que para dos individuos que se encuentren cercanos en el espacio de b sus respectivos valores en las funciones objetivo sean similares por otra parte una dificultad en el comportamiento del algoritmo gen puede ser la existencia de gran cantidad de locales as como el hecho de que el global se encuentre muy aislado la regla general para construir una buena funci objetivo es que debe reflejar el valor del individuo de una manera pero en muchos problemas de optimizaci combinatoria donde existe gran cantidad de restricciones buena parte de los puntos del espacio de b representan individuos no v para este planteamiento en el que los individuos est sometidos a restricciones se han propuesto varias soluciones la primera ser la que podr denominar absolutista en la que aquellos individuos que no verifican las restricciones no son considerados como tales y se siguen efectuando cruces y mutaciones hasta obtener individuos v o bien a dichos individuos se les asigna una funci objetivo igual a cero otra posibilidad consiste en reconstruir aquellos individuos que no verifican las restricciones dicha reconstrucci suele llevarse a cabo por medio de un nuevo operador que se acostumbra a denominar reparador otro enfoque est basado en la penalizaci de la funci objetivo la idea general consiste en dividir la funci objetivo del individuo por una cantidad penalizaci que guarda relaci con las restricciones que dicho individuo viola dicha cantidad puede simplemente tener en cuenta el n de restricciones violadas bien el denominado costo esperado de reconstrucci es decir el coste asociado a la conversi de dicho individuo en otro que no viole ninguna restricci otra t que se ha venido utilizando en el caso en que la computaci de la funci objetivo sea muy compleja es la denominada evaluaci aproximada de la funci objetivo en algunos casos la obtenci de n funciones objetivo aproximadas puede resultar mejor que la evaluaci exacta de una funci objetivo el caso de que la evaluaci aproximada resulta como m n veces m r que la evaluaci un problema habitual en las ejecuciones de los algoritmos gen surge debido a la velocidad con la que el algoritmo converge en algunos casos la convergencia es muy r lo que suele denominarse convergencia prematura en la cual el algoritmo converge hacia locales mientras que en otros casos el problema es justo el contrario es decir se produce una convergencia lenta del algoritmo una posible soluci a estos problemas pasa por efectuar transformaciones en la funci objetivo el problema de la convergencia prematura surge a menudo cuando la selecci de individuos se realiza de manera proporcional a su funci objetivo en tal caso pueden existir individuos con una adaptaci al problema muy superior al resto que a medida que avanza el algoritmo a la poblaci por medio de una transformaci de la funci objetivo en este caso una comprensi del rango de variaci de la funci objetivo se pretende que dichos no lleguen a dominar a la poblaci el problema de la lenta convergencia del algoritmo se resolver de manera an pero en este caso efectuando una expansi del rango de la funci objetivo la idea de especies de organismos ha sido imitada en el dise de los algoritmos gen en un m propuesto por goldberg y richardson utilizando una modificaci de la funci objetivo de cada individuo de tal manera que individuos que est muy cercanos entre s deval su funci objetivo con objeto de que la poblaci gane en diversidad funci 3 3 selecci la funci de selecci de padres m utilizada es la denominada funci de selecci proporcional a la funci objetivo en la cual cada individuo tiene una probabilidad de ser seleccionado como padre que es proporcional al valor de su funci objetivo denotando por super prop sub j la probabilidad de que el individuo super j sub sea seleccionado como padre se tiene que funci esta funci de selecci es invariante ante un cambio de escala pero no ante una traslaci una de las maneras de superar el problema relacionado con la r convergencia proveniente de los superindividuos que surge al aplicar la anterior funci de selecci es el efectuar la selecci proporcional al rango del individuo con lo cual se produce una repartici m uniforme de la probabilidad de selecci tal y como se ilustra en la figura 6 si denotamos por super j sub el rango de la funci objetivo del individuo super j sub cuando figura 6 los individuos de la poblaci han sido ordenados de menor a mayor decir el peor individuo tiene rango 1 mientras que el individuo con mejor funci objetivo tiene rango y sea super rango sub j la probabilidad de que el individuo super j sub sea seleccionado como padre cuando la selecci se efect proporcionalmente al rango del individuo se tiene que funci la suma de los rangos 2 constituye la constante de normalizaci la funci de selecci basada en el rango es invariante frente a la translaci y al cambio de escala otro posible refinamiento del modelo de selecci proporcional es el modelo de selecci del valor esperado el cual act de la manera siguiente para cada individuo if se introduce un contador inicialiazado en super j sub gt donde gt denota la media de a funci objetivo en la generaci t cada vez que el individuo super j sub es seleccionado para el cruce dicho contador decrece en una cantidad c pertenece a 5 el individuo en cuesti dejar de poder ser seleccionado en esa generaci cuando su contador sea negativo un esquema de selecci introducido por brindle y que emp ha proporcionado buenos resultados es el denominado muestreo estoc con reemplazamiento del resto en el cual cada individuo es seleccionado un n de veces que coincide con la parte entera del n esperado de ocurrencias de dicho suceso compitiendo los individuos por los restos es decir si denotamos por super j sub el n de veces que el individuo super j sub es seleccionado para el cruce tenemos que funci baker introduce un m denominado muestreo universal estoc el cual utiliza un giro de la ruleta siendo los sectores circulares proporcionales a la funci objetivo los individuos son seleccionados a partir de marcadores figura igualmente espaciados y con comienzo aleatorio efectuando un paralelismo con los m de muestreo estad este tipo figura 7 de selecci de padres se relaciona con el muestreo sistem mientras que la selecci proporcional a la funci objetivo est basada en el muestreo estratificado con fijaci proporcional al tama tambi el procedimiento de selecci que hemos denominado muestreo estoc con reemplazamiento del resto mantiene un paralelismo con el muestreo estratificado con fijaci de compromiso en el modelo de selecci elitista se fuerza a que el mejor individuo de la poblaci en el tiempo t sea seleccionado como padre la selecci por torneo constituye un procedimiento de selecci de padres muy extendido y en el cual la idea consiste en escoger al azar un n de individuos de la poblaci tama del torneo o sin seleccionar el mejor individuo de este grupo y repetir el proceso hasta que el n de individuos seleccionados coincida con el tama de la poblaci habitualmente el tama del torneo es 2 y en tal caso se ha utilizado una versi probabil en la cual se permite la selecci de individuos sin que necesariamente sean los mejores una posible clasificaci de procedimientos de selecci de padres consistir en m de selecci din en los cuales las probabilidades de selecci var de generaci a generaci ejemplo la selecci proporcional a la funci frente a m de selecci est en los cuales dichas probabilidades permanecen constantes ejemplo la selecci basada en si se asegura que todos los individuos tienen asignada una probabilidad de selecci distinta de cero el m de selecci se denomina preservativo en caso contrario se acostumbra a denominarlo extintivo 3 4 cruce el algoritmo gen can descrito anteriormente utiliza el cruce basado en un punto en el cual los dos individuos seleccionados para jugar el papel de padres son recombinados por medio de la selecci de un punto de corte para posteriormente intercambiar las secciones que se encuentran a la derecha de dicho punto se han investigado otros operadores de cruce habitualmente teniendo en cuenta m de un punto de cruce de jong investig el comportamiento del operador de cruce basado en m puntos concluyendo que el cruce basado en dos puntos representaba una mejora mientras que a m puntos de cruce no beneficiaba el comportamiento del algoritmo la ventaja de tener m de un punto de cruce radica en que el espacio de b puede ser explorado m f siendo la principal desventaja el hecho de aumentar la probabilidad de ruptura de buenos esquemas en el operador de cruce basado en dos puntos los cromosomas pueden contemplarse como un circuito en el cual se efect la selecci aleatoria de dos puntos tal y como se indica en la figura 8 figura 8 desde este punto de vista el cruce basado en un punto puede verse como un caso particular del cruce basado en dos puntos en el cual uno de los puntos de corte se encuentra fijo al comienzo de la ristra que representa al individuo v figura 9 en el denominado operador de cruce uniforme cada gen en la descendencia se crea copiando el correspondiente gen de uno de los dos padres escogido de acuerdo a una de generada aleatoriamente cuando existe un l en la de el gen es copiado del primer padre mientras que cuando exista un 0 en la figura 9 de el gen se copia del segundo padre tal y como se muestra en la figura 10 en la literatura el t operador de cruce uniforme se relaciona con la obtenci figura 10 de la de uniforme en el sentido de que cualquiera de los elementos del alfabeto tenga asociada la misma probabilidad hablando en t de la teor de la probabilidad la m de cruce est compuesta por una muestra aleatoria de tama a extra de una distribuci de probabilidad de bernouilli de par l 2 si tuvi en cuenta el valor de la funci de adaptaci de cada padre en el momento de generar la de de tal manera que cuanto mayor sea la funci de adaptaci de un individuo m probable sea heredar sus caracter podr definir v larra y poza un operador de cruce basado en la funci objetivo en el cual la de se interpreta como una muestra aleatoria de tama l proveniente de una distribuci de bernouilli de par funci donde super j sub y i sub denotan los padres seleccionados para ser cruzados el concepto de de puede tambi servir para representar los cruces basados en un punto y basados en m puntos tal y como se muestra en figura 11 sirag y weiser modifican el operador de cruce en el sentido del simulated annealing de esta manera el operador de cruce se modifica definiendo un umbral de energ h y una temperatura t las cuales influencian la manera en la que se escogen los bits individuales seg el operador propuesto el bit se tomar del padre opuesto al que se ha tomado el bit i con probabilidad sub donde t es el par el cual al igual que en simulated annealing decrecer lentamente por medio de un programa de enfriamiento con altas temperaturas el comportamiento se asemeja al del operador de cruce uniforme es decir con probabilidad cercana a la unidad los bits se van escogiendo alternativamente de cada padre por otra parte cuando el valor figura 11 del par temperatura se acerca a cero el hijo coincide pr con uno de los padres existen otros operadores de cruce espec para un determinado problema como son por ejemplo los definidos para el problema del agente de comercio por otra parte la idea de que el cruce deber de ser m probable en algunas posiciones ha sido descrita por varios autores y morishima holland davis 3 5 mutaci la mutaci se considera un operador b que proporciona un peque elemento de aleatoriedad en la vecindad de los individuos de la poblaci si bien se admite que el operador de cruce es el responsable de efectuar la b a lo largo del espacio de posibles soluciones tambi parece desprenderse de los experimentos efectuados por varios investigadores que el operador de mutaci va ganando en importancia a medida que la poblaci de individuos va convergiendo schaffer y col encuentran que el efecto del cruce en la b es inferior al que previamente se esperaba utilizan la denominada evoluci primitiva en la cual el proceso evolutivo consta tan s de selecci y mutaci encuentran que dicha evoluci primitiva supera con creces a una evoluci basada exclusivamente en la selecci y el cruce otra conclusi de su trabajo es que la determinaci del valor de la probabilidad de mutaci es mucho m crucial que el relativo a la probabilidad de cruce la b del valor para la probabilidad de mutaci es una cuesti que ha sido motivo de varios trabajos as de jong recomienda la utilizaci de una probabilidad de mutaci del bit de super siendo l la longitud del string schaffer y col utilizan resultados experimentales para estimar la tasa proporcional a l super 0 super 0 donde lambda denota el n de individuos en la poblaci si bien en la mayor de las implementaciones de algoritmos gen se asume que tanto la probabilidad de cruce como la de mutaci permanecen constantes algunos autores han obtenido mejores resultados experimentales modificando la probabilidad de mutaci a medida que aumenta el n de iteraciones pueden consultarse los trabajos de ackley bramlette fogarty y michalewicz y janikow 3 6 reducci una vez obtenidos los individuos descendientes de una determinada poblaci en el tiempo t el proceso de reducci al tama original consiste en escoger lambda individuos de entre los lambda individuos que forman parte de la poblaci en el tiempo t y los lambda individuos descendientes de los mismos dicho proceso se suele hacer fundamentalmente de dos formas distintas o bien los lambda individuos descendientes son los que forman parte de la poblaci en el tiempo t 1 es lo que se denomina reducci simple o bien se escogen de entre los individuos los lambda individuos m adaptados al problema siguiendo lo que podemos denominar un criterio de reducci elitista de grado lambda podemos tambi considerar otros procedimientos de reducci que se colocan entre los anteriores por ejemplo si escogemos los sub mejores de entre padres y descendientes escogi los lambda sub restantes de entre los descendientes no seleccionados hasta el momento el concepto de reducci est ligado con el de tasa de reemplazamiento generacional sub es decir en el porcentaje de hijos generados con respecto del tama de la poblaci si bien en la idea primitiva de holland dicho reemplazamiento se efectuaba de l en 1 es decir sub super habitualmente dicho reemplazamiento se efect en bloque sub 1 de jong introdujo el concepto de tasa de reemplazamiento generacional con el objetivo de efectuar un solapamiento controlado entre padres e hijos en su trabajo en cada paso una proporci t de la poblaci es seleccionada para ser cruzada los hijos resultantes podr reemplazar a miembros de la poblaci anterior este tipo de algoritmos gen se conocen bajo el nombre de ssga state genetie un ejemplo de los cuales lo constituye genitor y kauth michalewicz introduce un algoritmo que denomina algoritmo gen modificado sub en el cual para llevar a cabo el reemplazamiento generacional selecciona al azar individuos para la reproducci as como individuos de los destinados a morir estas selecciones aleatorias tienen en consideraci el valor de la funci objetivo de cada individuo de tal manera que cuanto mayor es la funci objetivo mayor es la probabilidad de que sea seleccionado para la reproducci y menor es la probabilidad de que dicho individuo fallezca el resto de los lambda individuos son considerados como neutros y pasan directamente a formar parte de la poblaci en la siguiente generaci 3 7 algoritmos gen paralelos en este apartado se introducir tres maneras diferentes de explotar el paralelismo de los algoritmos gen por medio de los denominados modelos de islas para una profundizaci sobre el tema puede consultarse stender modelos de islas la idea b consiste en dividir la poblaci total en varias subpoblaciones en cada una de las cuales se lleva a cabo un algoritmo gen cada cierto n de generaciones se efect un intercambio de informaci entre las subpoblaciones proceso que se denomina migraci la introducci de la migraci hace que los modelos de islas sean capaces de explotar las diferencias entre las diversas subpoblaciones obteni de esta manera una fuente de diversidad gen cada subpopulaci es una defini un procedimiento por medio del cual se mueve el material gen de una a otra la determinaci de la tasa de migraci es un asunto de capital importancia ya que de ella puede depender la convergencia prematura de la b se pueden distinguir diferentes modelos de islas en funci de la comunicaci entre las subpoblaciones algunas comunicaciones t son las siguientes comunicaci en estrella en la cual existe una subpoblaci que es seleccionada como maestra que tiene mejor media en el valor de la funci siendo las dem consideradas como esclavas todas las subpoblaciones esclavas mandan sus mejores individuos a la subpoblaci maestra la cual a su vez manda sus mejores individuos a cada una de las subpoblaciones esclavas v figura 12 figura 12 comunicaci en red en la cual no existe una jerarqu entre las subpoblaciones mandando todas y cada una de ellas sus mejores individuos al resto de las subpoblaciones v figura 13 figura 13 comunicaci en anillo en la cual cada subpoblaci env sus mejores individuos a una poblaci vecina efectu la migraci en un sentido de flujo v figura 14 el modelo de islas ha sido utilizado por varios autores y starkweather gorges schleuter figura 14 4 l borrosa y algoritmos gen la l borrosa trata de acercar la matem al lenguaje impreciso del hombre com el ser humano se maneja habitualmente con conceptos vagos los cuales no pueden ser representados por la matem tradicional si se pregunta a una serie de personas acerca del estado del clima es factible que las respuestas sean del tipo mucho llovi llovi casi nada apenas unas si alguien responde a la pregunta en forma concreta su respuesta se parecer a este momento hay 30 grados centigrados y se espera que para el resto del d la temperatura se eleve hasta los 35 grados para luego decaer a 20 grados a lo largo dela este tipo de respuesta parece extractada del parte meteorol del noticiero esperamos o algo similar cuando miramos la televisi pero no tenemos la expectativa de hacerlo cuando le preguntamos al compa de trabajo que acaba de llegar si hace calor afuera del edificio tenemos entonces que el hombre se maneja con t vagos para muchas de las acciones de su vida una matem estructurada para trabajar con conceptos precisos no puede entonces representar estos conceptos la l borrosa trata de poder incorporar m para que conceptos vagos puedan ser utilizados como funciones matem esta ha tenido una utilidad pr inmediata en los mecanismos de control de las maquinarias la l borrosa no es un mecanismo de optimizaci en si mismo pero vuelve mas flexibles a los sistemas de control de los dispositivos electr por lo que podr decir que se trata de un m optimizado de control la difusi que ha tenido en el mundo se le debe en gran parte a la incorporaci que han hecho los japoneses durante la d de los 80 s de estas t en los productos que comercializan mundialmente en especial los electrodom es raro ver un lavarropas o una heladera de marca japonesa con el logotipo de fuzzy logic si se utiliza l borrosa un dispositivo autom puede ser programado con del tipo expuesto en el cuadro tipo de plausibles de ser implementadas en un contexto de l borrosa la formulaci de este tipo de reglas es mucho mas sencilla de entender y explicar por los expertos humanos que deben introducir las mismas as mismo la programaci del software es mas simple al igual que su mantenimiento 4 1 funciones borrosas la l borrosa trabaja con las llamadas funciones borrosas las cuales permiten efectuar las condiciones descriptas precedentemente ejemplo para definir la funci mucho dentro de una serie de valores se procede de la siguiente manera se toma la serie se la ordena de mayor a menor y se extrae el valor mas grande y el valor mas chico estos valores corresponden al l superior y al l inferior de la serie tenemos entonces que dada una serie variando de a 0 hasta a n elementos ecuaci 3 se establece como amplitud de la serie la diferencia del l superior y el inferior ecuaci 4 la funci mucho queda definida como ecuaci 5 en una serie de n naturales cuyos valores est entre 0 y 1000 a a a la funci mucho fue definida como x a por lo que variar desde 0 1000 para x hasta 1000 1000 para x tendremos entonces un rango de valores entre 0 y 1 ecuaci 6 para facilitar los c si la serie no comienza de 0 o contiene valores negativos conviene convertirla en serie de n positivos sumando a cada t el valor m negativo ejemplo la serie de 3 2 1 0 1 2 3 4 puede ser convertida en 1 2 3 4 5 6 7 sum 3 a todos los t la serie 4 5 puede ser convertida en 1 2 rest 3 a todos los t por ello la ecuaci 3 se transforma en ecuaci 7 donde li 0 y ls 0 representan los l originales estos l se normalizan a ls 1 y li 1 llevando la serie al rango n ecuaci 8 veamos un caso concreto supongamos la siguiente serie de temperaturas t i hora temperatura 1 9 3 2 10 5 3 11 7 4 12 9 5 13 11 6 14 14 7 15 16 8 16 18 9 17 22 10 18 25 11 9 27 12 10 29 13 11 30 14 12 32 15 13 33 16 14 34 17 15 35 18 16 34 19 17 30 20 18 25 la pregunta que se sesea que se responda es hizo mucho calor a las 16 hs esta pregunta es imposible de responder por los m tradicionales ya que la computadora solo puede retornar el valor 34 pero no discriminar si eso es mucho o no veamos como trabaja entonces la funci mucho ecuaci 9 observamos que en definitiva la funci mucho retorna un n representativo del 96 cuanto mas se acerque el n a 1 o mas valedera ser la afirmaci cuanto mas se acerque a 0 menos valedera ser la misma solo en el caso que el resultado sea 0 o 1 o se puede decir taxativamente que el enunciado es verdadero o falso blanco o negro todos los valores intermedios caen bajo la categor de un valor tendr un gris mas oscuro que lo acercar al negro cuando su valor tienda a 1 de la misma forma ser un gris mas claro que lo acercar al blanco si tiende a 0 no existen entonces l precisos para las categor volvi imprecisos los mismos de ah la nomenclatura de l borrosa dado que la funci se acerca al obtendremos como resultado que efectivamente hizo mucho calor a la hora se de la misma manera la funci poco puede ser descripta como la inversa de la funci mucho por lo que tendremos que ecuaci 10 ecuaci 11 dado que el resultado de la funci se acerca al obtendremos como resultado que no hizo poco calor a la hora se 4 2 algoritmos gen basados en l borrosa existe la posibilidad de planear la arquitectura de un ga para que sus funciones de convergencia y control as como sus operadores gen est basados en l borrosa el ga estar entonces programado para la supervivencia ante entornos borrosos esto acarrear por un lado la ventaja de la programaci de las mismas aunque tendr un efecto en la supervivencia indistinta de ciertos espec con similar valor de la funci borrosa aunque diferente valor absoluto ejemplo si se programa el ga para seleccionar los espec con valores altos esto dar igual ponderaci a un ejemplar con un de performance la funci que a uno con el de la misma funci son sin l borrosa el segundo ejemplar ser mas competitivo que el primero y lo aniquilar dado que el efecto de utilizar o no esta l cambia la arquitectura del ga su implementaci no es en si misma ni buena ni mala dependiendo de los objetivos del programador y de los resultados esperados las diferencias entre un ga con y sin l borrosa pueden ser apreciadas en el cuadro cuadro diferencias entre un ga con y sin l borrosa 5 ejemplos de aplicaci 5 1 veamos c funciona un algoritmo gen vamos a partir de una funci muy sencilla 2 imagina que deseas encontrar el valor de x que hace que la funci alcance su valor m pero restringiendo a la variable x a tomar valores comprendidos entre 0 y 31 a m a x s le vamos a permitir tomar valores enteros es decir 0 1 2 3 30 31 obviamente el m se tiene para x 31 donde f vale 961 no necesitamos saber algoritmos gen para resolver este problema pero su sencillez hace que el algoritmo sea m f de comprender lo primero que debemos hacer es encontrar una manera de codificar las posibles valores de una manera de hacerlo es con la codificaci binaria con esta codificaci un posible valor de x es 1 0 1 c se interpreta esto muy sencillo multiplica la componente por 1 la pen por 2 la anterior por 4 la segunda por 8 y la por 16 y a continuaci haz la suma 11 observa que 0 0 0 equivale a x 0 y que 1 1 1 equivale a x 31 a cada posible valor de la variable x en representaci binaria le vamos a llamar individuo una colecci de individuos constituye lo que se denomina poblaci y el n de individuos que la componen es el tama de la poblaci una vez que tenemos codificada la soluci debemos escoger un tama de poblaci para este ejemplo ilustrativo vamos a escoger 6 individuos debemos partir de una poblaci inicial una manera de generarla es aleatoriamente coge una moneda y l al aire si sale cara la primera componente del primer individuo es un 0 y en caso contrario un 1 repite el lanzamiento de la moneda y tendremos la segunda componente del primer individuo 0 s sale cara y un 1 s sale as hasta 5 veces y obtendr el primer individuo repite ahora la secuencia anterior para generar los individuos de la poblaci restantes en total tienes que lanzar 5 6 30 veces la moneda nuestro siguiente paso es hacer competir a los individuos entre s este proceso se conoce como selecci la tabla 1 resume el proceso tabla 1 seleccion 1 1 1 0 12 144 6 2 0 0 1 18 324 3 3 1 1 1 15 225 2 4 1 0 0 24 576 5 5 1 0 1 26 676 4 6 0 0 0 1 1 1 cada fila en la tabla 1 est asociada a un individuo de la poblaci inicial el significado de cada columna de la tabla es el siguiente n que le asignamos al individuo individuo en codificaci binaria valor de x valor de observa que el mejor individuo es el 5 con f 676 calcula la media de f y obtendr fmed 3 en cuanto a la columna ahora te lo explico una manera de realizar el proceso de selecci es mediante un torneo entre dos a cada individuo de la poblaci se le asigna una pareja y entre ellos se establece un torneo el mejor genera dos copias y el peor se desecha la columna indica la pareja asignada a cada individuo lo cual se ha realizado aleatoriamente existen muchas variantes de este proceso de selecci aunque este m nos vale para ilustrar el ejemplo despu de realizar el proceso de selecci la poblaci que tenemos es la mostrada en la columna de la tabla 2 observa por ejemplo que en el torneo entre el individuo 1 y el 6 de la poblaci inicial el primero de ellos ha recibido dos copias mientras que el segundo cae en el olvido tabla 2 cruce 1 1 1 0 5 1 2 1 1 0 3 3 3 0 0 1 2 3 4 0 0 1 6 1 5 1 0 1 1 1 6 1 0 1 4 1 tras realizar la selecci se realiza el cruce una manera de hacerlo es mediante el cruce se forman parejas entre los individuos aleatoriamente de forma similar a la selecci dados dos individuos pareja se establece un punto de cruce aleatorio que no es m que un n aleatorio entre 1 y 4 longitud del individuo menos por ejemplo en la pareja 2 3 el punto de cruce es 3 lo que significa que un hijo de la pareja conserva los tres primeros bits del padre y hereda los dos de la madre mientras que el otro hijo de la pareja conserva los tres primeros bits de la madre y hereda los dos del padre la poblaci resultante se muestra en la columna de la tabla 3 tabla 3 poblacion tras el cruce 1 1 0 1 10 100 2 1 1 0 28 784 3 1 1 1 14 196 4 0 0 0 16 256 5 1 0 1 26 676 6 0 0 1 18 324 en la columna tienes el valor de x en la siguiente tienes el valor de f correspondiente f en que ahora el valor m de f es 784 el individuo mientras que antes de la selecci y el cruce era de 676 adem fmed ha subido de 324 3 a 389 3 qu quiere decir esto simplemente que los individuos despu de la selecci y el cruce son mejores que antes de estas transformaciones el siguiente paso es volver a realizar la selecci y el cruce tomando como poblaci inicial la de la tabla 3 esta manera de proceder se repite tantas veces como n de iteraciones t fijes y cu es el en realidad un algoritmo gen no te garantiza la obtenci del pero si est bien construido te proporcionar una soluci razonablemente buena puede que obtengas el pero el algoritmo no te confirma que lo sea as que qu con la mejor soluci de la iteraci tambi es buena idea ir guardando la mejor soluci de todas las iteraciones anteriores y al final quedarte con la mejor soluci de las exploradas consideraciones adicionales en problemas reales en los que se aplican los algoritmos gen existe la tendencia a la homegeinizaci de la poblaci es decir a que todos los individuos de la misma sean id esto impide que el algoritmo siga explorando nuevas soluciones con lo que podemos quedar estancados en un m local no muy bueno existen t para contrarrestar esta gen el mecanismo m elemental aunque no siempre suficientemente eficaz es introducir una mutaci tras la selecci y el cruce una vez que has realizado la selecci y el cruce escoges un n determinado de bits de la poblaci y los alteras aleatoriamente en nuestro ejemplo consiste simplemente en cambiar de 1 a 0 de 0 a 1 ejemplo 2 con la finalidad de aclarar mejor los conceptos cubiertos previamente presentaremos ahora una sencilla aplicaci del algoritmo gen a un problema de optimizaci un grupo de financieros mexicanos ha resuelto invertir 10 millones de pesos en la nueva marca de vino as pues en 4 ciudades de las principales de m se decide iniciar una vigorosa campa comercial m en el centro monterrey en el noroeste guadalajara en el occidente y veracruz en el oriente a esas 4 ciudades van a corresponder las zonas comerciales i ii iii y iv un estudio de mercado ha sido realizado en cada una de las zonas citadas y han sido establecidas curvas de ganancias medias en millones de pesos en funci de las inversiones totales tiendas de venta representantes publicidad etc estos datos se ilustran en la tabla 2 y en la figura 4 para simplificar los c supondremos que las asignaciones de cr o de inversiones deben hacerse por unidades de 1 mill de pesos la pregunta es en d se deben de asignar los 10 millones de pesos de los que se dispone para que la ganancia total sea m inversi beneficio i beneficio ii beneficio iii beneficio iv 0 0 0 0 0 1 0 28 0 25 0 15 0 20 2 0 45 0 41 0 25 0 33 3 0 65 0 55 0 40 0 42 4 0 78 0 65 0 50 0 48 5 0 90 0 75 0 62 0 53 6 1 02 0 80 0 73 0 56 7 1 13 0 85 0 82 0 58 8 1 23 0 88 0 90 0 60 9 1 32 0 90 0 96 0 60 10 1 38 0 90 1 00 0 60 tabla 1 datos obtenidos con la investigaci de mercado en cada una de las regiones en estudio representaci para poder aplicar el algoritmo gen lo primero que necesitamos determinar es cu ser el esquema a utilizarse para representar las posibles soluciones del problema en este caso necesitamos 4 bits para representar cada soluci porque cada una admite 11 valores posibles 0 a como existen 4 valores independientes por cada zona de se requieren entonces 16 bits x por cada cromosoma es importante hacer notar que se requiere una funci de codificaci e que transforme el valor de la inversi a y una de decodificaci e que realice el proceso debido a que en este caso los 4 bits utilizados para representar una soluci pueden producir m valores de los que se necesitan se usar una funci de ajuste que haga que los resultados producidos siempre se encuentren en el rango v funci de aptitud dado que el objetivo es obtener las inversiones que sumen 10 y que tengan un beneficio m podemos usar la siguiente funci de aptitud penalizada donde y son las ganancias por zona que se calculan de acuerdo a los valores de la tabla 2 y v es el valor absoluto de la diferencia entre la suma obtenida de las inversiones y 10 n que cuando no se viole ninguna restricci e cuando la suma de inversiones sea exactamente la funci de aptitud no ser operadores se usar una cruza de 2 puntos la probabilidad que se dar a la misma ser del en cuanto a la mutaci se le asignar una probabilidad baja que ser del el tama de poblaci manejado para este ejemplo ser de 50 cromosomas y se correr el algoritmo gen durante 20 generaciones resultados el resultado obtenido en una corrida t es un beneficio de 1 81 millones de pesos correspondiente a invertir 4 millones en la zona comercial i 3 millones en la zona ii 1 mill en la zona iii y 2 millones en la zona iv esta es la soluci la cual se obtuvo originalmente mediante programaci din el tiempo que le tom al algoritmo gen encontrar este valor fue de s 13 segundos debe hacerse notar que en este caso si dese analizar inversiones que sumen otra cantidad y en unidades menores al mill el algoritmo gen tendr que modificarse de manera m mientras que la programaci din requerir una cantidad tal de trabajo que pr se volver inoperante bibliograf de la computaci http www geocities com siliconvalley 7491 aplce htm del comportamiento de los algoritmos gen http www geocities com siliconvalley 9802 3 htm a la vida http i com capecanaveral 8104 ivan htm de bases de conocimiento con computaci http www fciencias unam mx revista soluciones html a los algoritmos gen http www fciencias unam mx revista soluciones html placeres existenciales de los algoritmos gen http www fciencias unam mx revista soluciones html gen http www iamnet com users jcontre genetic ag htm gen http www iamnet com users jcontre genetic operadores htm salesman problem using genetic http www lalena com ai tsp gen http www uv es genet html veces va el c al agua hasta que se http homepages mty itesm mx al gen htm gen http www iamnet com users jcontre genetic ag htm http www caplet com mannamouse flying acceso al programa ejecutable http www wi leidenuniv nl flying index html hitch hiker s guide to evolutionary http gnomics udg es www top htm holland j h in natural and artificial university of michigan press 1975 211 p koza j r programming on the programming of computers by means of natural the mit press 1992 819 p buckles b p and petry f e ieee computer society press 1992 109 p goldberg d e algorithms in search optimization and machine addison wesley publishing company 1989 412 p booker l b goldberg d e and holland j h systems and genetic artificial intelligence 40 1989 pp 235 282 davis l of genetic van nostrand reinhold 1991 385 p forrest s algorithms principles of natural selection applied to science vol 261 no 5123 august 13 1993 pp 872 878 smith r e goldberg d e and earickson j a c a c language implementation of a simple genetic tcga report no 91002 the clearinghouse for genetic algorithms the university of alabama may 14 1991 ribeiro filho j l treleaven ph c and alippi c algorithm programming ieee computer june 1994 pp 28 43 srinivas m and patnaik l m algorithms a ieee computer june 1994 pp 17 26 rawlins g j e of genetic morgan kaufmann publishers 1991 341 p whitley l d of genetic algorithms morgan kaufmann publishers 1993 322 p kaufmann a y faure r a la investigaci de segunda edici cecsa m 1977 311 p porter k huge dr dobb s journal of software tools for the professional programmer vol 13 no 3 1988 pp 60 3 koza j programming ii automatic discovery of reusable the mit press 1992 746 p francisco j francisco j vico evolutiva basada en un modelo de codificai inteligencia artificial n 5 pag 20 25 