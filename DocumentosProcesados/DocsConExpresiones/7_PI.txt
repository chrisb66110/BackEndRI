 punteros punteros inteligentes o punteros compartidos pointers code a code a questions documentation punteros punteros inteligentes o punteros compartidos answers el termino incluye punteros compartidos punteros automaticos punteros de bloqueo y otros querias decir auto puntero ambiguamente conocido como no puntero inteligente los consejos tontos nunca son la mejor solucion te obligan a hacer una gestion de memoria explicita que es prolija propensa a errores y en ocasiones casi imposible pero mas importante aun no senalan tu intencion los punteros automaticos eliminan la punta en el momento de la destruccion para matrices prefiera encapsulaciones como vector y deque para otros objetos muy raramente existe la necesidad de almacenarlos en el monton solo use los locales y la composicion de objetos sin embargo la necesidad de punteros automaticos surge con las funciones que devuelven los punteros del monton como las fabricas y los retornos polimorficos los punteros compartidos eliminan el puntero cuando se destruye el ultimo puntero compartido esto es util cuando se desea un esquema de almacenamiento abierto y sin complicaciones donde la vida util esperada y la propiedad pueden variar ampliamente segun la situacion debido a la necesidad de mantener un contador son un poco mas lentos que los punteros automaticos algunos dicen en broma que los indicadores compartidos son para personas que no pueden disenar sistemas juzguen por si mismos para una contraparte esencial de punteros compartidos busque punteros debiles tambien question esta pregunta ya tiene una respuesta aqui que es un puntero inteligente y cuando deberia usar uno 14 respuestas estoy programando con punteros normales pero he oido hablar de bibliotecas como boost que implementan punteros inteligentes tambien he visto que en el motor de renderizado hay un uso profundo de punteros compartidos cual es exactamente la diferencia entre los tres y deberia seguir usando solo un tipo de ellos para evitar fugas de memoria puede utilizar punteros inteligentes siempre que sea posible basicamente hay 2 tipos diferentes de punteros inteligentes en c referencia contada ejemplo boost shared std shared sin referencia contada ejemplo boost scoped std auto la diferencia principal es que los punteros inteligentes contados de referencia se pueden copiar usar en std mientras que scoped no los punteros contados no de referencia casi no tienen gastos generales ni gastos generales el recuento de referencias siempre introduce algun tipo de sobrecarga evitar auto tiene algunos defectos graves si se usa read more links cu les son las diferencias entre una variable de puntero y una variable de referencia en c punteros inteligentes o qui te posee beb qu es un puntero inteligente y cu ndo deber usar uno qu implementaciones de c smart pointer est n disponibles c 11 introdujo un modelo de memoria estandarizada qu significa eso y c afectar la programaci en c por qu las l de lectura de stdin son mucho m s lentas en c que en python procesamiento de im genes mejora de algoritmos para el reconocimiento de coca cola can por qu las bibliotecas y frameworks c nunca usan punteros inteligentes por qu deber usar un puntero en lugar del objeto en s tags c pointers espa top 